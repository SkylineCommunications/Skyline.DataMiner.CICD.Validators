namespace Common.Testing
{
    using System;
    using System.Collections.Generic;
    using System.Text;

    using Skyline.DataMiner.CICD.Validators.Common.Interfaces;
    using Skyline.DataMiner.Scripting;

    public class ProtocolQActionHelperProvider : IProtocolQActionHelperProvider
    {
        private const string AutoGeneratedCodeByDis = "// <auto-generated>This is auto-generated code by DIS. Do not modify.</auto-generated>";

        public string GetProtocolQActionHelper(string protocolCode, bool ignoreErrors = false)
        {
            var csContent = new StringBuilder();
            csContent.AppendLine(AutoGeneratedCodeByDis);
            if (QActionHelper.TryCreateProtocolQActionHelperFromString(protocolCode, out string sourceCode, out IList<XMLParseError> result))
            {
                csContent.Append(sourceCode);
            }
            else
            {
                if (!ignoreErrors && result?.Count > 0)
                {
                    StringBuilder error = new StringBuilder();
                    error.Append("Couldn't generate QAction helper:");

                    foreach (var err in result)
                    {
                        error.Append($"\n    Line {err.Line}: {err.Description}");
                    }

                    throw new InvalidOperationException(error.ToString());
                }

                csContent.Append("namespace Skyline.DataMiner.Scripting { public class SLProtocolExt : SLProtocol { } }");
            }

            return csContent.ToString();
        }
    }
}
