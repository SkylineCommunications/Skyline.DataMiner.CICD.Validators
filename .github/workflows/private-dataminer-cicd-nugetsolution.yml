name: DataMiner CICD NuGet Solution

# Controls when the workflow will run
on:
  # Triggers the workflow on push events.
  push:
    branches: []
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+-**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

# Note: Tagging will push the nupackage to nuget.org using the provided NUGETAPIKEY. You can tag both a prerelease version (a.b.c-xxxx) or a stable release (a.b.c).
  CICD:
    uses: SkylineCommunications/_ReusableWorkflows/.github/workflows/NuGet Solution Master Workflow.yml@main
    with:
      referenceName: ${{ github.ref_name }}
      runNumber: ${{ github.run_number }}
      referenceType: ${{ github.ref_type }}
      repository: ${{ github.repository }}
      owner: ${{ github.repository_owner }}
      sonarCloudProjectName: SkylineCommunications_Skyline.DataMiner.CICD.Validators
    secrets:
      sonarCloudToken: ${{ secrets.SONAR_TOKEN }}
      pfx: ${{ secrets.PFX }}
      pfxPassword: ${{ secrets.PFXPASSWORD }}
      nugetApiKey: ${{ secrets.NUGETAPIKEY }}
  
  export:
    if: github.ref_type == 'tag'
    needs: CICD
    name: Export Error Messages
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Building
        run: dotnet build "./ExportErrorMessages/ExportErrorMessages.csproj" --configuration Release -nodeReuse:false

      - name: Run export logic
        run: | 
          ./ExportErrorMessages ${{ github.workspace }}/Protocol/ErrorMessages.xml ${{ github.ref_name }} ${{ github.workspace }}/TEMP
        working-directory: ${{ github.workspace }}/ExportErrorMessages/bin/Release/net8.0

      - name: Update release
        uses: ncipollo/release-action@v1.14.0
        with:
            name: Release v${{ github.ref_name }}
            allowUpdates: true
            artifacts: "${{ github.workspace }}/TEMP/Validator Error Messages - ${{ github.ref_name }}.xlsx"
            omitBodyDuringUpdate: true
