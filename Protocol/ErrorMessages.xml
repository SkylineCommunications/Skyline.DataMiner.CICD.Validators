<?xml version="1.0" encoding="utf-8"?>
<Validator xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<ValidationChecks>
		<DescriptionTemplates>
			<DescriptionTemplate id="1">
				<Name>OutOfRangeId</Name>
				<Format>Out of range {0} ID '{1}'.</Format>
				<InputParameters>
					<InputParameter id="0">tagName</InputParameter>
					<InputParameter id="1">id</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="10">
				<Name>ShouldBeAlarmed</Name>
				<Format>{0} Param '{1}' should be alarmed.</Format>
				<InputParameters>
					<InputParameter id="0">itemKind</InputParameter>
					<InputParameter id="1">paramId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="11">
				<Name>ShouldNotBeTrended</Name>
				<Format>{0} Param '{1}' should not be trended.</Format>
				<InputParameters>
					<InputParameter id="0">itemKind</InputParameter>
					<InputParameter id="1">paramId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="1000">
				<Name>MissingTag</Name>
				<Format>Missing tag '{0}'.</Format>
				<InputParameters>
					<InputParameter id="0">tagName</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="1001">
				<Name>MissingTagInItem</Name>
				<Format>Missing tag '{0}' in {1} '{2}'.</Format>
				<InputParameters>
					<InputParameter id="0">tagName</InputParameter>
					<InputParameter id="1">itemKind</InputParameter>
					<InputParameter id="2">itemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="1002">
				<Name>MissingTagInItemInSubItem</Name>
				<Format>Missing tag '{0}' in {1} '{2}'. {3} {4} '{5}'.</Format>
				<InputParameters>
					<InputParameter id="0">tagName</InputParameter>
					<InputParameter id="1">itemKind</InputParameter>
					<InputParameter id="2">itemId</InputParameter>
					<InputParameter id="3">subItemKind</InputParameter>
					<InputParameter id="4" value="ID">idOrPidForSubItem</InputParameter>
					<InputParameter id="5">subItemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="1010">
				<Name>MissingTagWithValue</Name>
				<Format>Missing tag '{0}' with expected value '{1}' for {2} '{3}'.</Format>
				<InputParameters>
					<InputParameter id="0">tagName</InputParameter>
					<InputParameter id="1">expectedValue</InputParameter>
					<InputParameter id="2">itemKind</InputParameter>
					<InputParameter id="3">itemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="1020">
				<Name>MissingTagForParamDisplayType</Name>
				<Format>Missing '{0}' tag for '{1}' Param with ID '{2}'.</Format>
				<InputParameters>
					<InputParameter id="0">tagName</InputParameter>
					<InputParameter id="1">paramDisplayType</InputParameter>
					<InputParameter id="2">paramPid</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="1100">
				<Name>MissingAttribute</Name>
				<Format>Missing attribute '{0}'.</Format>
				<InputParameters>
					<InputParameter id="0">attributeName</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="1101">
				<Name>MissingAttributeInItem</Name>
				<Format>Missing attribute '{0}' in {1} '{2}'.</Format>
				<InputParameters>
					<InputParameter id="0">attributeName</InputParameter>
					<InputParameter id="1">itemKind</InputParameter>
					<InputParameter id="2">itemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="1111">
				<Name>MissingAttributeInItemDueTo</Name>
				<Format>Missing attribute '{0}' due to '{1}' '{2}'. {3} {4} '{5}'.</Format>
				<InputParameters>
					<InputParameter id="0">attributeName</InputParameter>
					<InputParameter id="1">reasonTitle</InputParameter>
					<InputParameter id="2">reasonValue</InputParameter>
					<InputParameter id="3">itemKind</InputParameter>
					<InputParameter id="4" value="ID">idOrPidForItem</InputParameter>
					<InputParameter id="5">itemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="1112">
				<Name>MissingAttributeInItemDueToAndDueTo</Name>
				<Format>Missing attribute '{0}' due to '{1}' '{2}' and '{3}' '{4}'. {5} {6} '{7}'.</Format>
				<InputParameters>
					<InputParameter id="0">attributeName</InputParameter>
					<InputParameter id="1">reason1Title</InputParameter>
					<InputParameter id="2">reason1Value</InputParameter>
					<InputParameter id="3">reason2Title</InputParameter>
					<InputParameter id="4">reason2Value</InputParameter>
					<InputParameter id="5">itemKind</InputParameter>
					<InputParameter id="6" value="ID">idOrPidForItem</InputParameter>
					<InputParameter id="7">itemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="1200">
				<Name>MissingOptionInAttribute</Name>
				<Format>Missing value '{0}' in attribute '{1}'.</Format>
				<InputParameters>
					<InputParameter id="0">valueName</InputParameter>
					<InputParameter id="1">attributeName</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="1201">
				<Name>MissingOptionInAttributeInItem</Name>
				<Format>Missing value '{0}' in attribute '{1}'. {2} {3} '{4}'.</Format>
				<InputParameters>
					<InputParameter id="0">valueName</InputParameter>
					<InputParameter id="1">attributeName</InputParameter>
					<InputParameter id="2">itemKind</InputParameter>
					<InputParameter id="3" value="ID">idOrPid</InputParameter>
					<InputParameter id="4">itemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="1210">
				<Name>MissingOptionInAttributeForItem</Name>
				<Format>Missing value '{0}' in attribute '{1}' for {2} '{3}'.</Format>
				<InputParameters>
					<InputParameter id="0">valueName</InputParameter>
					<InputParameter id="1">attributeName</InputParameter>
					<InputParameter id="2">itemKind</InputParameter>
					<InputParameter id="3">item</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="1211">
				<Name>MissingOptionInAttributeForItemInItem</Name>
				<Format>Missing value '{0}' in attribute '{1}' for {2} '{3}'. {4} {5} '{6}'.</Format>
				<InputParameters>
					<InputParameter id="0">valueName</InputParameter>
					<InputParameter id="1">attributeName</InputParameter>
					<InputParameter id="2">itemKind</InputParameter>
					<InputParameter id="3">item</InputParameter>
					<InputParameter id="4">componentKind</InputParameter>
					<InputParameter id="5" value="ID">idOrPid</InputParameter>
					<InputParameter id="6">componentId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="1300">
				<Name>MissingActionTypeBeforeCommand</Name>
				<Format>No '{0}' Action triggered before Command '{1}'. '{0}' Param '{2}'.</Format>
				<InputParameters>
					<InputParameter id="0">actionType</InputParameter>
					<InputParameter id="1">commandId</InputParameter>
					<InputParameter id="2">paramPid</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="1301">
				<Name>MissingActionTypeBeforeResponse</Name>
				<Format>No '{0}' Action triggered before Response '{1}'. '{0}' Param '{2}'.</Format>
				<InputParameters>
					<InputParameter id="0">actionType</InputParameter>
					<InputParameter id="1">responseId</InputParameter>
					<InputParameter id="2">paramPid</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="2000">
				<Name>EmptyTag</Name>
				<Format>Empty tag '{0}'.</Format>
				<InputParameters>
					<InputParameter id="0">tagName</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="2001">
				<Name>EmptyTagInItem</Name>
				<Format>Empty tag '{0}' in {1} '{2}'.</Format>
				<InputParameters>
					<InputParameter id="0">tagName</InputParameter>
					<InputParameter id="1">itemKind</InputParameter>
					<InputParameter id="2">itemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="2100">
				<Name>EmptyAttribute</Name>
				<Format>Empty attribute '{0}'.</Format>
				<InputParameters>
					<InputParameter id="0">attributeName</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="2101">
				<Name>EmptyAttributeInItem</Name>
				<Format>Empty attribute '{0}' in {1} '{2}'.</Format>
				<InputParameters>
					<InputParameter id="0">attributeName</InputParameter>
					<InputParameter id="1">itemKind</InputParameter>
					<InputParameter id="2">itemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="2102">
				<Name>EmptyAttributeInItemInSubItem</Name>
				<Format>Empty attribute '{0}' in {1} '{2}'. {3} {4} '{5}'.</Format>
				<InputParameters>
					<InputParameter id="0">attributeName</InputParameter>
					<InputParameter id="1">itemKind</InputParameter>
					<InputParameter id="2">itemId</InputParameter>
					<InputParameter id="3">subItemKind</InputParameter>
					<InputParameter id="4" value="ID">idOrPidForSubItem</InputParameter>
					<InputParameter id="5">subItemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="2200">
				<Name>EmptyOptionInAttribute</Name>
				<Format>Empty option '{0}' in attribute '{1}'.</Format>
				<InputParameters>
					<InputParameter id="0">optionName</InputParameter>
					<InputParameter id="1">attributeName</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="2201">
				<Name>EmptyOptionInAttributeInItem</Name>
				<Format>Empty option '{0}' in attribute '{1}'. {2} {3} '{4}'.</Format>
				<InputParameters>
					<InputParameter id="0">optionName</InputParameter>
					<InputParameter id="1">attributeName</InputParameter>
					<InputParameter id="2">itemKind</InputParameter>
					<InputParameter id="3" value="ID">idOrPid</InputParameter>
					<InputParameter id="4">itemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="2210">
				<Name>EmptyOptionInAttributeForItem</Name>
				<Format>Empty option '{0}' in attribute '{1}' for {2} '{3}'.</Format>
				<InputParameters>
					<InputParameter id="0">optionName</InputParameter>
					<InputParameter id="1">attributeName</InputParameter>
					<InputParameter id="2">itemKind</InputParameter>
					<InputParameter id="3">item</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="2211">
				<Name>EmptyOptionInAttributeForItemInItem</Name>
				<Format>Empty option '{0}' in attribute '{1}' for {2} '{3}'. {4} {5} {6}'.</Format>
				<InputParameters>
					<InputParameter id="0">optionName</InputParameter>
					<InputParameter id="1">attributeName</InputParameter>
					<InputParameter id="2">itemKind</InputParameter>
					<InputParameter id="3">item</InputParameter>
					<InputParameter id="4">componentKind</InputParameter>
					<InputParameter id="5" value="ID">idOrPid</InputParameter>
					<InputParameter id="6">componentId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="3000">
				<Name>UntrimmedTag</Name>
				<Format>Untrimmed tag '{0}'. Current value '{1}'.</Format>
				<InputParameters>
					<InputParameter id="0">tagName</InputParameter>
					<InputParameter id="1">untrimmedValue</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="3001">
				<Name>UntrimmedTagInItem</Name>
				<Format>Untrimmed tag '{0}' in {1} '{2}'. Current value '{3}'.</Format>
				<InputParameters>
					<InputParameter id="0">tagName</InputParameter>
					<InputParameter id="1">itemKind</InputParameter>
					<InputParameter id="2">itemId</InputParameter>
					<InputParameter id="3">untrimmedValue</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="3100">
				<Name>UntrimmedAttribute</Name>
				<Format>Untrimmed attribute '{0}'. Current value '{1}'.</Format>
				<InputParameters>
					<InputParameter id="0">attributeName</InputParameter>
					<InputParameter id="1">untrimmedValue</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="3101">
				<Name>UntrimmedAttributeInItem</Name>
				<Format>Untrimmed attribute '{0}' in {1} '{2}'. Current value '{3}'.</Format>
				<InputParameters>
					<InputParameter id="0">attributeName</InputParameter>
					<InputParameter id="1">itemKind</InputParameter>
					<InputParameter id="2">itemId</InputParameter>
					<InputParameter id="3">untrimmedValue</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="3200">
				<Name>UntrimmedOptionInAttribute</Name>
				<Format>Untrimmed option '{0}' in attribute '{1}'. Current value '{2}'.</Format>
				<InputParameters>
					<InputParameter id="0">optionName</InputParameter>
					<InputParameter id="1">attributeName</InputParameter>
					<InputParameter id="2">untrimmedValue</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="3201">
				<Name>UntrimmedOptionInAttributeInItem</Name>
				<Format>Untrimmed option '{0}' in attribute '{1}' in {2} with {3} '{4}'. Current value '{5}'.</Format>
				<InputParameters>
					<InputParameter id="0">optionName</InputParameter>
					<InputParameter id="1">attributeName</InputParameter>
					<InputParameter id="2">itemKind</InputParameter>
					<InputParameter id="3" value="ID">idOrPid</InputParameter>
					<InputParameter id="4">itemId</InputParameter>
					<InputParameter id="5">untrimmedValue</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="3210">
				<Name>UntrimmedOptionInAttributeForItem</Name>
				<Format>Untrimmed option '{0}' in attribute '{1}' for {2} '{3}'. Current value '{4}'.</Format>
				<InputParameters>
					<InputParameter id="0">optionName</InputParameter>
					<InputParameter id="1">attributeName</InputParameter>
					<InputParameter id="2">itemKind</InputParameter>
					<InputParameter id="3">item</InputParameter>
					<InputParameter id="4">untrimmedValue</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="3211">
				<Name>UntrimmedOptionInAttributeForItemInItem</Name>
				<Format>Untrimmed option '{0}' in attribute '{1}' for {2} '{3}' in {4} with {5} '{6}'. Current value '{7}'.</Format>
				<InputParameters>
					<InputParameter id="0">optionName</InputParameter>
					<InputParameter id="1">attributeName</InputParameter>
					<InputParameter id="2">itemKind</InputParameter>
					<InputParameter id="3">item</InputParameter>
					<InputParameter id="4">componentKind</InputParameter>
					<InputParameter id="5" value="ID">idOrPid</InputParameter>
					<InputParameter id="6">componentId</InputParameter>
					<InputParameter id="7">untrimmedValue</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="3500">
				<Name>UntrimmedValueInTag</Name>
				<Format>Untrimmed value '{0}' in tag '{1}'.</Format>
				<InputParameters>
					<InputParameter id="0">untrimmedValue</InputParameter>
					<InputParameter id="1">attributeName</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="3600">
				<Name>UntrimmedValueInAttribute</Name>
				<Format>Untrimmed value '{0}' in attribute '{1}'.</Format>
				<InputParameters>
					<InputParameter id="0">untrimmedValue</InputParameter>
					<InputParameter id="1">attributeName</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="3601">
				<Name>UntrimmedValueInAttributeInItem</Name>
				<Format>Untrimmed value '{0}' in attribute '{1}'. {2} {3} '{4}'.</Format>
				<InputParameters>
					<InputParameter id="0">untrimmedValue</InputParameter>
					<InputParameter id="1">attributeName</InputParameter>
					<InputParameter id="2">itemKind</InputParameter>
					<InputParameter id="3" value="ID">idOrPid</InputParameter>
					<InputParameter id="4">itemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="4000">
				<Name>InvalidTagValue</Name>
				<Format>Invalid value '{1}' in tag '{0}'.</Format>
				<InputParameters>
					<InputParameter id="0">tagName</InputParameter>
					<InputParameter id="1">tagValue</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="4001">
				<Name>InvalidTagValueInItem</Name>
				<Format>Invalid value '{0}' in tag '{1}'. {2} {4} '{3}'.</Format>
				<InputParameters>
					<InputParameter id="0">tagValue</InputParameter>
					<InputParameter id="1">tagName</InputParameter>
					<InputParameter id="2">itemKind</InputParameter>
					<InputParameter id="3">itemId</InputParameter>
					<InputParameter id="4" value="ID">idOrPid</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="4010">
				<Name>InvalidTagValueWithPossibleValues</Name>
				<Format>Invalid value '{1}' in tag '{0}'. Possible values '{2}'.</Format>
				<InputParameters>
					<InputParameter id="0">tagName</InputParameter>
					<InputParameter id="1">tagValue</InputParameter>
					<InputParameter id="2">allowedValues</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="4011">
				<Name>InvalidTagValueWithPossibleValuesInItem</Name>
				<Format>Invalid value '{1}' in tag '{0}'. Possible values '{2}'. {3} {4} '{5}'.</Format>
				<InputParameters>
					<InputParameter id="0">tagName</InputParameter>
					<InputParameter id="1">tagValue</InputParameter>
					<InputParameter id="2">allowedValues</InputParameter>
					<InputParameter id="3">itemKind</InputParameter>
					<InputParameter id="4" value="ID">idOrPid</InputParameter>
					<InputParameter id="5">itemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="4021">
				<Name>InvalidTagValueForItemTypeWithPossibleValuesInItem</Name>
				<Format>Invalid value '{0}' in tag '{1}' for {2}. Possible values '{3}'. {4} {5} '{6}'.</Format>
				<InputParameters>
					<InputParameter id="1">tagValue</InputParameter>
					<InputParameter id="0">tagName</InputParameter>
					<InputParameter id="2">itemSpecificType</InputParameter>
					<InputParameter id="3">allowedValues</InputParameter>
					<InputParameter id="4">itemKind</InputParameter>
					<InputParameter id="5" value="ID">idOrPid</InputParameter>
					<InputParameter id="6">itemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="4100">
				<Name>InvalidAttributeValue</Name>
				<Format>Invalid value '{1}' in attribute '{0}'.</Format>
				<InputParameters>
					<InputParameter id="0">attributeName</InputParameter>
					<InputParameter id="1">attributeValue</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="4101">
				<Name>InvalidAttributeValueInItem</Name>
				<Format>Invalid value '{1}' in attribute '{0}'. {2} {4} '{3}'.</Format>
				<InputParameters>
					<InputParameter id="0">attributeName</InputParameter>
					<InputParameter id="1">attributeValue</InputParameter>
					<InputParameter id="2">itemKind</InputParameter>
					<InputParameter id="3">itemId</InputParameter>
					<InputParameter id="4" value="ID">idOrPid</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="4102">
				<Name>InvalidAttributeValueInItemInSubItem</Name>
				<Format>Invalid value '{1}' in attribute '{0}'. {2} {4} '{3}'. {5} {7} '{6}'.</Format>
				<InputParameters>
					<InputParameter id="0">attributeName</InputParameter>
					<InputParameter id="1">attributeValue</InputParameter>
					<InputParameter id="2">itemKind</InputParameter>
					<InputParameter id="3">itemId</InputParameter>
					<InputParameter id="4" value="ID">idOrPid</InputParameter>
					<InputParameter id="5">subItemKind</InputParameter>
					<InputParameter id="6">subItemId</InputParameter>
					<InputParameter id="7" value="ID">subIdOrPid</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="4110">
				<Name>InvalidAttributeValueWithPossibleValues</Name>
				<Format>Invalid value '{1}' in attribute '{0}'. Possible values '{2}'.</Format>
				<InputParameters>
					<InputParameter id="0">attributeName</InputParameter>
					<InputParameter id="1">attributeValue</InputParameter>
					<InputParameter id="2">allowedValues</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="4111">
				<Name>InvalidAttributeValueWithPossibleValuesInItem</Name>
				<Format>Invalid value '{1}' in attribute '{0}'. Possible values '{2}'. {3} {4} '{5}'.</Format>
				<InputParameters>
					<InputParameter id="0">attributeName</InputParameter>
					<InputParameter id="1">attributeValue</InputParameter>
					<InputParameter id="2">allowedValues</InputParameter>
					<InputParameter id="3">itemKind</InputParameter>
					<InputParameter id="4" value="ID">idOrPid</InputParameter>
					<InputParameter id="5">itemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="4200">
				<Name>InvalidCharsInTag</Name>
				<Format>Invalid chars '{2}' in tag '{0}'. Current value '{1}'.</Format>
				<InputParameters>
					<InputParameter id="0">tagName</InputParameter>
					<InputParameter id="1">tagValue</InputParameter>
					<InputParameter id="2">invalidCharacters</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="4201">
				<Name>InvalidCharsInAttribute</Name>
				<Format>Invalid chars '{2}' in attribute '{0}'. Current value '{1}'.</Format>
				<InputParameters>
					<InputParameter id="0">attributeName</InputParameter>
					<InputParameter id="1">attributeValue</InputParameter>
					<InputParameter id="2">invalidCharacters</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="4300">
				<Name>InvalidOptionInAttribute</Name>
				<Format>Invalid option '{0}' in attribute '{1}'. {2} {3} '{4}'. Current Value '{5}'.</Format>
				<InputParameters>
					<InputParameter id="0">optionName</InputParameter>
					<InputParameter id="1">attributeName</InputParameter>
					<InputParameter id="2">itemKind</InputParameter>
					<InputParameter id="3" value="ID">idOrPid</InputParameter>
					<InputParameter id="4">itemId</InputParameter>
					<InputParameter id="5">optionValue</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="4301">
				<Name>InvalidValueInItemForItem</Name>
				<Format>Invalid value '{0}' in '{1}' for '{2}'. {3} {4} '{5}'.</Format>
				<InputParameters>
					<InputParameter id="0">tagValue</InputParameter>
					<InputParameter id="1">tagName</InputParameter>
					<InputParameter id="2">type</InputParameter>
					<InputParameter id="3">itemKind</InputParameter>
					<InputParameter id="4" value="ID">idOrPid</InputParameter>
					<InputParameter id="5">itemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="4401">
				<Name>InvalidValueOnItemReferencedBy</Name>
				<Format>Invalid {0} '{1}' on {4} referenced by {2}. Expected value '{3}'. {4} {5} '{6}'.</Format>
				<InputParameters>
					<InputParameter id="0" value="Interprete/Type">invalidTitle</InputParameter>
					<InputParameter id="1">invalidValue</InputParameter>
					<InputParameter id="2" value="Interprete/LengthType@id">referenceTitle</InputParameter>
					<InputParameter id="3" value="double">expectedValue</InputParameter>
					<InputParameter id="4" value="Param">itemKind</InputParameter>
					<InputParameter id="5" value="ID">idOrPid</InputParameter>
					<InputParameter id="6">itemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="4901">
				<Name>InvalidConditionInItem</Name>
				<Format>Invalid condition '{0}'. Reason '{1}'. {2} {3} '{4}'.</Format>
				<InputParameters>
					<InputParameter id="0">conditionString</InputParameter>
					<InputParameter id="1">invalidityReason</InputParameter>
					<InputParameter id="2">itemKind</InputParameter>
					<InputParameter id="3" value="ID">idOrPid</InputParameter>
					<InputParameter id="4">itemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="4902">
				<Name>ConditionCanBeSimplified</Name>
				<Format>Condition '{0}' can be simplified. {1} {2} '{3}'.</Format>
				<InputParameters>
					<InputParameter id="0">conditionString</InputParameter>
					<InputParameter id="1">itemKind</InputParameter>
					<InputParameter id="2" value="ID">idOrPid</InputParameter>
					<InputParameter id="3">itemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="5000">
				<Name>DuplicateValueInTag</Name>
				<Format>Duplicate value '{0}' in tag '{1}'.</Format>
				<InputParameters>
					<InputParameter id="0">tagValue</InputParameter>
					<InputParameter id="1">tagName</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="5001">
				<Name>DuplicateValueInTagInItem</Name>
				<Format>Duplicate value '{0}' in tag '{1}'. {2} {3} '{4}'.</Format>
				<InputParameters>
					<InputParameter id="0">tagValue</InputParameter>
					<InputParameter id="1">tagName</InputParameter>
					<InputParameter id="2">itemKind</InputParameter>
					<InputParameter id="3" value="ID">idOrPid</InputParameter>
					<InputParameter id="4">itemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="5100">
				<Name>DuplicateValueInAttribute</Name>
				<Format>Duplicate value '{0}' in attribute '{1}'.</Format>
				<InputParameters>
					<InputParameter id="0">attributeValue</InputParameter>
					<InputParameter id="1">attributeName</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="5101">
				<Name>DuplicateValueInAttributeInItem</Name>
				<Format>Duplicate value '{0}' in attribute '{1}'. {2} {3} '{4}'.</Format>
				<InputParameters>
					<InputParameter id="0">duplicateValue</InputParameter>
					<InputParameter id="1">attributeName</InputParameter>
					<InputParameter id="2">itemKind</InputParameter>
					<InputParameter id="3" value="ID">idOrPid</InputParameter>
					<InputParameter id="4">itemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="6001">
				<Name>MultipleItemsWithSameId</Name>
				<Format>More than one {0} with same ID '{1}'. {0} Names '{2}'.</Format>
				<InputParameters>
					<InputParameter id="0">itemKind</InputParameter>
					<InputParameter id="1">id</InputParameter>
					<InputParameter id="2">itemNames</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="6002">
				<Name>MultipleItemsWithSameIdInItem</Name>
				<Format>More than one {0} with same ID '{1}' in {3} '{4}'. {0} Names '{2}'.</Format>
				<InputParameters>
					<InputParameter id="0">itemKind</InputParameter>
					<InputParameter id="1">id</InputParameter>
					<InputParameter id="2">itemNames</InputParameter>
					<InputParameter id="3">parentKind</InputParameter>
					<InputParameter id="4">parentId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="6100">
				<Name>MulitpleItemsWithSameValue</Name>
				<Format>Duplicated {0} {1} '{2}'.</Format>
				<InputParameters>
					<InputParameter id="0">itemKind</InputParameter>
					<InputParameter id="1">valueKind</InputParameter>
					<InputParameter id="2">duplicateValue</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="6101">
				<Name>MultipleItemsWithSameValueInItem</Name>
				<Format>Duplicated {0} {1} '{2}'. {0} IDs '{3}'.</Format>
				<InputParameters>
					<InputParameter id="0">itemKind</InputParameter>
					<InputParameter id="1">valueKind</InputParameter>
					<InputParameter id="2">duplicateValue</InputParameter>
					<InputParameter id="3">itemIds</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="7000">
				<Name>NonExistingRefInTag</Name>
				<Format>Tag '{0}' references a non-existing '{1}' with {2} '{3}'.</Format>
				<InputParameters>
					<InputParameter id="0">tagName</InputParameter>
					<InputParameter id="1">referenceKind</InputParameter>
					<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
					<InputParameter id="3">referenceId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="7001">
				<Name>NonExistingRefInTagInItem</Name>
				<Format>Tag '{0}' references a non-existing '{1}' with {2} '{3}'. {4} {5} '{6}'.</Format>
				<InputParameters>
					<InputParameter id="0">tagName</InputParameter>
					<InputParameter id="1">referenceKind</InputParameter>
					<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
					<InputParameter id="3">referenceId</InputParameter>
					<InputParameter id="4">itemKind</InputParameter>
					<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
					<InputParameter id="6">itemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="7100">
				<Name>NonExistingRefInAttribute</Name>
				<Format>Attribute '{0}@{1}' references a non-existing '{2}' with {3} '{4}'.</Format>
				<InputParameters>
					<InputParameter id="0">tagName</InputParameter>
					<InputParameter id="1">attributeName</InputParameter>
					<InputParameter id="2">referenceKind</InputParameter>
					<InputParameter id="3" value="ID">idOrPidForReference</InputParameter>
					<InputParameter id="4">referenceId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="7101">
				<Name>NonExistingRefInAttributeInItem</Name>
				<Format>Attribute '{0}' references a non-existing '{1}' with {2} '{3}'. {4} {5} '{6}'.</Format>
				<InputParameters>
					<InputParameter id="0">attributeName</InputParameter>
					<InputParameter id="1">referenceKind</InputParameter>
					<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
					<InputParameter id="3">referenceId</InputParameter>
					<InputParameter id="4">itemKind</InputParameter>
					<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
					<InputParameter id="6">itemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="7102">
				<Name>NonExistingRefInAttributeInItemInSubItem</Name>
				<Format>Attribute '{0}' references a non-existing '{1}' with {2} '{3}'. {4} {5} '{6}'. {7} {8} '{9}'.</Format>
				<InputParameters>
					<InputParameter id="0">attributeName</InputParameter>
					<InputParameter id="1">referenceKind</InputParameter>
					<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
					<InputParameter id="3">referenceId</InputParameter>
					<InputParameter id="4">itemKind</InputParameter>
					<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
					<InputParameter id="6">itemId</InputParameter>
					<InputParameter id="7">subItemKind</InputParameter>
					<InputParameter id="8" value="ID">idOrPidForSubItem</InputParameter>
					<InputParameter id="9">subItemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="7200">
				<Name>NonExistingRefInOption</Name>
				<Format>Option '{0}' references a non-existing '{1}' with {2} '{3}'.</Format>
				<InputParameters>
					<InputParameter id="0">optionName</InputParameter>
					<InputParameter id="1">referenceKind</InputParameter>
					<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
					<InputParameter id="3">referenceId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="7201">
				<Name>NonExistingRefInOptionInItem</Name>
				<Format>'{0}' option refers to a non-existing column {1} '{2}' in table '{3}'.</Format>
				<InputParameters>
					<InputParameter id="0">option</InputParameter>
					<InputParameter id="1" value="idx">columnIndentifier</InputParameter>
					<InputParameter id="2">columnRef</InputParameter>
					<InputParameter id="3">tablePid</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="7301">
				<Name>NonExistingRefInCSharpMethod</Name>
				<Format>Method '{0}' references a non-existing '{1}' with {2} '{3}'. QAction ID '{4}'.</Format>
				<InputParameters>
					<InputParameter id="0">methodName</InputParameter>
					<InputParameter id="1">referenceKind</InputParameter>
					<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
					<InputParameter id="3">referenceId</InputParameter>
					<InputParameter id="4">qactionId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="8000">
				<Name>NonExistingRefsInTag</Name>
				<Format>Tag '{0}' references non-existing IDs.</Format>
				<InputParameters>
					<InputParameter id="0">tagName</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="8001">
				<Name>NonExistingRefsInTagInItem</Name>
				<Format>Tag '{0}' references non-existing IDs. {1} {3} '{2}'.</Format>
				<InputParameters>
					<InputParameter id="0">tagName</InputParameter>
					<InputParameter id="1">itemKind</InputParameter>
					<InputParameter id="2">itemId</InputParameter>
					<InputParameter id="3" value="ID">idOrPid</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="8100">
				<Name>NonExistingRefsInAttribute</Name>
				<Format>Attribute '{0}' references non-existing IDs.</Format>
				<InputParameters>
					<InputParameter id="0">attributeName</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="8101">
				<Name>NonExistingRefsInAttributeInItem</Name>
				<Format>Attribute '{0}' references non-existing IDs. {1} {3} '{2}'.</Format>
				<InputParameters>
					<InputParameter id="0">attributeName</InputParameter>
					<InputParameter id="1">itemKind</InputParameter>
					<InputParameter id="2">itemId</InputParameter>
					<InputParameter id="3" value="ID">idOrPid</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="8201">
				<Name>NonExistingRefInAttributeOptionInItem</Name>
				<Format>Option '{0}' in attribute '{1}' references a non-existing '{2}' with {3} '{4}'. {5} {6} '{7}'.</Format>
				<InputParameters>
					<InputParameter id="0">optionName</InputParameter>
					<InputParameter id="1">attribute</InputParameter>
					<InputParameter id="2">referenceKind</InputParameter>
					<InputParameter id="3" value="ID">idOrPidForReference</InputParameter>
					<InputParameter id="4">referenceId</InputParameter>
					<InputParameter id="5">itemKind</InputParameter>
					<InputParameter id="6" value="ID">idOrPidForItem</InputParameter>
					<InputParameter id="7">itemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="9000">
				<Name>IncompatibleValues</Name>
				<Format>Incompatible '{0}' value '{1}' with '{2}' value '{3}'.</Format>
				<InputParameters>
					<InputParameter id="0">item1Title</InputParameter>
					<InputParameter id="1">item1Value</InputParameter>
					<InputParameter id="2">item2Title</InputParameter>
					<InputParameter id="3">item2Value</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="9001">
				<Name>IncompatibleValuesInItem</Name>
				<Format>Incompatible '{0}' value '{1}' with '{2}' value '{3}'. {4} {5} '{6}'.</Format>
				<InputParameters>
					<InputParameter id="0">item1Title</InputParameter>
					<InputParameter id="1">item1Value</InputParameter>
					<InputParameter id="2">item2Title</InputParameter>
					<InputParameter id="3">item2Value</InputParameter>
					<InputParameter id="4">itemKind</InputParameter>
					<InputParameter id="5" value="ID">idOrPid</InputParameter>
					<InputParameter id="6">itemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="10000">
				<Name>UnsupportedTag</Name>
				<Format>Unsupported tag '{0}'.</Format>
				<InputParameters>
					<InputParameter id="0">tagName</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="10001">
				<Name>UnsupportedTagInItem</Name>
				<Format>Unsupported tag '{0}' in {1} '{2}'.</Format>
				<InputParameters>
					<InputParameter id="0">tagName</InputParameter>
					<InputParameter id="1">itemKind</InputParameter>
					<InputParameter id="2">itemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="10100">
				<Name>UnsupportedAttribute</Name>
				<Format>Unsupported attribute '{0}'.</Format>
				<InputParameters>
					<InputParameter id="0">attributeName</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="10101">
				<Name>UnsupportedAttributeInItem</Name>
				<Format>Unsupported attribute '{0}' in {1} '{2}'.</Format>
				<InputParameters>
					<InputParameter id="0">attributeName</InputParameter>
					<InputParameter id="1">itemKind</InputParameter>
					<InputParameter id="2">itemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="10111">
				<Name>UnsupportedAttributeInItemWithCurrentValue</Name>
				<Format>Unsupported attribute '{0}' in {1} '{2}'. Current value '{3}'.</Format>
				<InputParameters>
					<InputParameter id="0">attributeName</InputParameter>
					<InputParameter id="1">itemKind</InputParameter>
					<InputParameter id="2">itemId</InputParameter>
					<InputParameter id="3">currentValue</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="10112">
				<Name>UnsupportedAttributeInItemDueTo</Name>
				<Format>Unsupported attribute '{0}' in combination with '{1}' '{2}'. {3} {4} '{5}'.</Format>
				<InputParameters>
					<InputParameter id="0">attributeName</InputParameter>
					<InputParameter id="1">reasonTitle</InputParameter>
					<InputParameter id="2">reasonValue</InputParameter>
					<InputParameter id="3">itemKind</InputParameter>
					<InputParameter id="4" value="ID">idOrPidForItem</InputParameter>
					<InputParameter id="5">itemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="10113">
				<Name>UnsupportedAttributeInItemDueTo</Name>
				<Format>Unsupported attribute '{0}' in combination with '{1}' '{2}' and  '{3}' '{4}'. {5} {6} '{7}'.</Format>
				<InputParameters>
					<InputParameter id="0">attributeName</InputParameter>
					<InputParameter id="1">reasonTitle1</InputParameter>
					<InputParameter id="2">reasonValue1</InputParameter>
					<InputParameter id="3">reasonTitle2</InputParameter>
					<InputParameter id="4">reasonValue2</InputParameter>
					<InputParameter id="5">itemKind</InputParameter>
					<InputParameter id="6" value="ID">idOrPidForItem</InputParameter>
					<InputParameter id="7">itemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="10300">
				<Name>UnsupportedTagForParamDisplayType</Name>
				<Format>Unsupported '{0}' tag for '{1}' Param with ID '{2}'.</Format>
				<InputParameters>
					<InputParameter id="0">tagName</InputParameter>
					<InputParameter id="1">paramDisplayType</InputParameter>
					<InputParameter id="2">paramPid</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="10310">
				<Name>UnsupportedActionOnItemWithOption</Name>
				<Format>Unsupported {0} on {1} '{2}' with '{3}' containing '{4}'.</Format>
				<InputParameters>
					<InputParameter id="0">actionType</InputParameter>
					<InputParameter id="1">itemKind</InputParameter>
					<InputParameter id="2">itemId</InputParameter>
					<InputParameter id="3">optionLocation</InputParameter>
					<InputParameter id="4">optionName</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="10311">
				<Name>UnsupportedActionOnItemManagedByItem</Name>
				<Format>Unsupported {0} on {1} '{2}' managed by {3} '{4}' with '{5}' containing '{6}'.</Format>
				<InputParameters>
					<InputParameter id="0">actionType</InputParameter>
					<InputParameter id="1">itemKind</InputParameter>
					<InputParameter id="2">itemId</InputParameter>
					<InputParameter id="3">managedByItemKind</InputParameter>
					<InputParameter id="4">managedByItemId</InputParameter>
					<InputParameter id="5">optionLocation</InputParameter>
					<InputParameter id="6">optionName</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="11000">
				<Name>UnexpectedValue</Name>
				<Format>Current value '{0}'. Expected value '{1}'.</Format>
				<InputParameters>
					<InputParameter id="0">currentValue</InputParameter>
					<InputParameter id="1">expectedValue</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="11001">
				<Name>UnexpectedValueInItem</Name>
				<Format>Current value '{0}'. Expected value '{1}'. {2} {3} '{4}'.</Format>
				<InputParameters>
					<InputParameter id="0">currentValue</InputParameter>
					<InputParameter id="1">expectedValue</InputParameter>
					<InputParameter id="2" value="Param">itemKind</InputParameter>
					<InputParameter id="3" value="ID">idOrPid</InputParameter>
					<InputParameter id="4">itemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="12000">
				<Name>WrongCasingParent</Name>
				<Format>'{0}' values do not follow {1} rules.</Format>
				<InputParameters>
					<InputParameter id="0" value="Param/Description">xmlElementPath</InputParameter>
					<InputParameter id="1" value="title casing">casingRule</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="13310">
				<Name>UnrecommendedActionOnItemWithOption</Name>
				<Format>Unrecommended {0} on {1} '{2}' with '{3}' containing '{4}'.</Format>
				<InputParameters>
					<InputParameter id="0">actionType</InputParameter>
					<InputParameter id="1">itemKind</InputParameter>
					<InputParameter id="2">itemId</InputParameter>
					<InputParameter id="3">optionLocation</InputParameter>
					<InputParameter id="4">optionName</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="14000">
				<Name>ObsoleteTag</Name>
				<Format>Obsolete tag '{0}'.</Format>
				<InputParameters>
					<InputParameter id="0">tagName</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="14001">
				<Name>ObsoleteTagInItem</Name>
				<Format>Obsolete tag '{0}'. {1} {2} '{3}'.</Format>
				<InputParameters>
					<InputParameter id="0">tagName</InputParameter>
					<InputParameter id="1" value="Param">itemKind</InputParameter>
					<InputParameter id="2" value="ID">idOrPid</InputParameter>
					<InputParameter id="3">itemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="14100">
				<Name>ObsoleteAttribute</Name>
				<Format>Obsolete attribute '{0}'.</Format>
				<InputParameters>
					<InputParameter id="0">attributeName</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="14101">
				<Name>ObsoleteAttributeInItem</Name>
				<Format>Obsolete attribute '{0}'. {1} {2} '{3}'.</Format>
				<InputParameters>
					<InputParameter id="0">attributeName</InputParameter>
					<InputParameter id="1" value="Param">itemKind</InputParameter>
					<InputParameter id="2" value="ID">idOrPid</InputParameter>
					<InputParameter id="3">itemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="15112">
				<Name>ExcessiveAttributeInItem</Name>
				<Format>Excessive attribute '{0}' due to '{1}' '{2}' and '{3}' '{4}'. {5} {6} '{7}'.</Format>
				<InputParameters>
					<InputParameter id="0">attributeName</InputParameter>
					<InputParameter id="1">reason1Title</InputParameter>
					<InputParameter id="2">reason1Value</InputParameter>
					<InputParameter id="3">reason2Title</InputParameter>
					<InputParameter id="4">reason2Value</InputParameter>
					<InputParameter id="5">itemKind</InputParameter>
					<InputParameter id="6" value="ID">idOrPidForItem</InputParameter>
					<InputParameter id="7">itemId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="100000">
				<Name>CSharpMethodArgumentInvalidType</Name>
				<Format>Invocation of method '{0}' has an invalid type '{1}' for the argument '{2}'. QAction ID '{3}'.</Format>
				<InputParameters>
					<InputParameter id="0">method</InputParameter>
					<InputParameter id="1">argumentType</InputParameter>
					<InputParameter id="2">argument</InputParameter>
					<InputParameter id="3">qactionId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="100001">
				<Name>CSharpObloletePreprocessorDirective</Name>
				<Format>Obsolete preprocessor directive '{0}' used in QAction. QAction ID '{1}'.</Format>
				<InputParameters>
					<InputParameter id="0">preprocessorDirective</InputParameter>
					<InputParameter id="1">qactionId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="100002">
				<Name>CSharpImplementsUnsupportedInterface</Name>
				<Format>Entry point class {0} implements unsupported interface {1}. QAction ID '{2}'.</Format>
				<InputParameters>
					<InputParameter id="0">entryPointClass</InputParameter>
					<InputParameter id="1">unsupportedInterface</InputParameter>
					<InputParameter id="2">qactionId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="100003">
				<Name>CSharpUnrecommendedUseOfMagicNumber</Name>
				<Format>Unrecommended use of magic number '{0}', use '{1}' {2} instead. QAction ID '{3}'.</Format>
				<InputParameters>
					<InputParameter id="0">magicNumber</InputParameter>
					<InputParameter id="1">containerName</InputParameter>
					<InputParameter id="2" value="class">containerType</InputParameter>
					<InputParameter id="3">qactionId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="100004">
				<Name>CSharpMethodIncompatible</Name>
				<Format>Invocation of method '{0}.{1}' is not compatible with '{2}'. QAction ID '{3}'.</Format>
				<InputParameters>
					<InputParameter id="0">methodClassType</InputParameter>
					<InputParameter id="1">incompatibleMethod</InputParameter>
					<InputParameter id="2">incompatibleComponent</InputParameter>
					<InputParameter id="3">qactionId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="100005">
				<Name>CSharpMethodUnrecommended</Name>
				<Format>Method '{0}.{1}' is unrecommended. QAction ID '{2}'.</Format>
				<InputParameters>
					<InputParameter id="0">methodClassType</InputParameter>
					<InputParameter id="1">unrecommendedMethod</InputParameter>
					<InputParameter id="2">qactionId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="100006">
				<Name>CSharpMissingOptionForMethodOverload</Name>
				<Format>{0} overload with '{1}' argument requires '{2}'. {3} {4} '{5}'.</Format>
				<InputParameters>
					<InputParameter id="0">method</InputParameter>
					<InputParameter id="1">argument</InputParameter>
					<InputParameter id="2">option</InputParameter>
					<InputParameter id="3" value="Param">referenceKind</InputParameter>
					<InputParameter id="4" value="ID">idOrPidForReference</InputParameter>
					<InputParameter id="5">paramId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="100007">
				<Name>CSharpMethodUnexpectedImplementation</Name>
				<Format>Method '{0}' with arguments '{1}' is not implemented as expected. QAction ID '{2}'.</Format>
				<InputParameters>
					<InputParameter id="0">method</InputParameter>
					<InputParameter id="1">arguments</InputParameter>
					<InputParameter id="2">qactionId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="100008">
				<Name>CSharpConstructorUnrecommended</Name>
				<Format>Constructor '{0}' ('{1}') is unrecommended. QAction ID '{2}'.</Format>
				<InputParameters>
					<InputParameter id="0">typeUnrecommendedConstructor</InputParameter>
					<InputParameter id="1">constructorNamespace</InputParameter>
					<InputParameter id="2">qactionId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
			<DescriptionTemplate id="100009">
				<Name>CSharpUnrecommendedPropertySet</Name>
				<Format>Setting property '{0}.{1}' is unrecommended. QAction ID '{2}'.</Format>
				<InputParameters>
					<InputParameter id="0">propertyClassType</InputParameter>
					<InputParameter id="1">unrecommendedProperty</InputParameter>
					<InputParameter id="2">qactionId</InputParameter>
				</InputParameters>
			</DescriptionTemplate>
		</DescriptionTemplates>
		<Categories>
			<Category id="1">
				<Name>Protocol</Name>
				<Checks>
					<Check id="1">
						<Name namespace="Protocol">CheckProtocolTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingTag</Name>
								<GroupDescription />
								<Description templateId="1000">
									<InputParameters>
										<InputParameter id="0" value="Protocol">tagName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Add Protocol root tag to the document.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="2">
						<Name namespace="Protocol.Name">CheckNameTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingTag</Name>
								<GroupDescription />
								<Description templateId="1000">
									<InputParameters>
										<InputParameter id="0" value="Name">tagName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Add <Name></Name> to the protocol.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2000">
									<InputParameters>
										<InputParameter id="0" value="Name">tagName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedTag</Name>
								<GroupDescription />
								<Description templateId="3000">
									<InputParameters>
										<InputParameter id="0" value="Name">tagName</InputParameter>
										<InputParameter id="1">tagValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[Remove the leading/trailing whitespaces.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidChars</Name>
								<GroupDescription />
								<Description templateId="4200">
									<InputParameters>
										<InputParameter id="0" value="Name">tagName</InputParameter>
										<InputParameter id="1">tagValue</InputParameter>
										<InputParameter id="2">invalidCharacters</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Remove or replace the invalid characters.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>InvalidPrefix</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid prefix '{1}' in 'Protocol/Name' tag. Current value '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">tagValue</InputParameter>
										<InputParameter id="1">invalidPrefix</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[Remove invalid prefix and trim if needed.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>UpdatedValue</Name>
								<GroupDescription />
								<Description>
									<Format>Protocol Name '{0}' changed into '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">oldProtocolName</InputParameter>
										<InputParameter id="1">newProtocolName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="3">
						<Name namespace="Protocol.Provider">CheckProviderTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingTag</Name>
								<GroupDescription />
								<Description templateId="1000">
									<InputParameters>
										<InputParameter id="0" value="Provider">tagName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[Add <Provider></Provider> to the protocol.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2000">
									<InputParameters>
										<InputParameter id="0" value="Provider">tagName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidTag</Name>
								<GroupDescription />
								<Description templateId="4010">
									<InputParameters>
										<InputParameter id="0" value="Provider">tagName</InputParameter>
										<InputParameter id="1">tagValue</InputParameter>
										<InputParameter id="2">allowedValues</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="4">
						<Name namespace="Protocol.SNMP">CheckSnmpTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingTag</Name>
								<GroupDescription />
								<Description templateId="1000">
									<InputParameters>
										<InputParameter id="0" value="SNMP">tagName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[Add <SNMP></SNMP> to the protocol.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2000">
									<InputParameters>
										<InputParameter id="0" value="SNMP">tagName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4010">
									<InputParameters>
										<InputParameter id="0" value="SNMP">tagName</InputParameter>
										<InputParameter id="1">tagValue</InputParameter>
										<InputParameter id="2">allowedValues</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="5">
						<Name namespace="Protocol.SNMP">CheckIncludepagesAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1100">
									<InputParameters>
										<InputParameter id="0" value="includepages">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2100">
									<InputParameters>
										<InputParameter id="0" value="includepages">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidAttribute</Name>
								<GroupDescription />
								<Description templateId="4110">
									<InputParameters>
										<InputParameter id="0" value="includepages">attributeName</InputParameter>
										<InputParameter id="1">attributeValue</InputParameter>
										<InputParameter id="2">allowedValues</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="6">
						<Name namespace="Protocol.Version">CheckVersionTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingTag</Name>
								<GroupDescription />
								<Description templateId="1000">
									<InputParameters>
										<InputParameter id="0" value="Version">tagName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2000">
									<InputParameters>
										<InputParameter id="0" value="Version">tagName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedTag</Name>
								<GroupDescription />
								<Description templateId="3000">
									<InputParameters>
										<InputParameter id="0" value="Version">tagName</InputParameter>
										<InputParameter id="1">tagValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="7">
						<Name namespace="Protocol.ElementType">CheckElementTypeTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingTag</Name>
								<GroupDescription />
								<Description templateId="1000">
									<InputParameters>
										<InputParameter id="0" value="ElementType">tagName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2000">
									<InputParameters>
										<InputParameter id="0" value="ElementType">tagName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="8">
						<Name namespace="Protocol.Type">CheckTypeTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingTag</Name>
								<GroupDescription />
								<Description templateId="1000">
									<InputParameters>
										<InputParameter id="0" value="Type">tagName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2000">
									<InputParameters>
										<InputParameter id="0" value="Type">tagName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4010">
									<InputParameters>
										<InputParameter id="0" value="Type">tagName</InputParameter>
										<InputParameter id="1">tagValue</InputParameter>
										<InputParameter id="2">allowedValues</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="9">
						<Name namespace="Protocol.Type">CheckOptionsAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="2">
								<Name>UpdatedDveExportProtocolName</Name>
								<GroupDescription />
								<Description>
									<Format>DVE Protocol with Name '{0}' for Table '{1}' was changed into '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">dveProtocolName</InputParameter>
										<InputParameter id="1">tableId</InputParameter>
										<InputParameter id="2">newDveProtocolName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>RemovedDveExportProtocolName</Name>
								<GroupDescription />
								<Description>
									<Format>DVE Protocol with Name '{0}' for Table '{1}' was removed.</Format>
									<InputParameters>
										<InputParameter id="0">dveProtocolName</InputParameter>
										<InputParameter id="1">tableId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>AddedNoElementPrefix</Name>
								<GroupDescription />
								<Description>
									<Format>NoElementPrefix option was added to DVE Protocol with Name '{0}' for Table '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">dveProtocolName</InputParameter>
										<InputParameter id="1">tableId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>RemovedNoElementPrefix</Name>
								<GroupDescription />
								<Description>
									<Format>NoElementPrefix option was removed from DVE Protocol with Name '{0}' for Table '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">dveProtocolName</InputParameter>
										<InputParameter id="1">tableId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>AddedUnicode</Name>
								<GroupDescription />
								<Description>
									<Format>Unicode option on protocol was added.</Format>
									<InputParameters />
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>RemovedUnicode</Name>
								<GroupDescription />
								<Description>
									<Format>Unicode option on protocol was removed.</Format>
									<InputParameters />
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="8">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2100">
									<InputParameters>
										<InputParameter id="0" value="Protocol/Type@options">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="9">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3100">
									<InputParameters>
										<InputParameter id="0" value="Protocol/Type@options">attributeName</InputParameter>
										<InputParameter id="1">currentValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="11">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7100">
									<InputParameters>
										<InputParameter id="0" value="Protocol/Type">tagName</InputParameter>
										<InputParameter id="1" value="options">attributeName</InputParameter>
										<InputParameter id="2" value="Param">referenceKind</InputParameter>
										<InputParameter id="3" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="4">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Within the 'Protocol/Type@options' attribute, the 'exportProtocol' option allows to define which DVE protocols should be made and based on what parameter DVE elements should be created.[NewLine][NewLine]The exportProtocol option is expected to have the following format: "exportProtocol:[protocolName]:[DveTablePid]" optionally followed by ":noElementPrefix" where:[NewLine]- [protocolName] should be the name of the DVE protocol to be created.[NewLine]    - Note that we recommend the DVE protocol name to start with: "[DveParentProtocolName] - "[NewLine]- [DveTablePid] should be the PID of the table responsible for creating DVE elements. The referred Param is expected to:[NewLine]    - Be of type 'array'.[NewLine]    - Have its RTDisplay tag set to true.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="12">
								<Name>ReferencedParamWrongType</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid DVE Param Type '{0}'. Expected Type 'array'. Param ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">paramType</InputParameter>
										<InputParameter id="1">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Within the 'Protocol/Type@options' attribute, the 'exportProtocol' option allows to define which DVE protocols should be made and based on what parameter DVE elements should be created.[NewLine][NewLine]The exportProtocol option is expected to have the following format: "exportProtocol:[protocolName]:[DveTablePid]" optionally followed by ":noElementPrefix" where:[NewLine]- [protocolName] should be the name of the DVE protocol to be created.[NewLine]    - Note that we recommend the DVE protocol name to start with: "[DveParentProtocolName] - "[NewLine]- [DveTablePid] should be the PID of the table responsible for creating DVE elements. The referred Param is expected to:[NewLine]    - Be of type 'array'.[NewLine]    - Have its RTDisplay tag set to true.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="13">
								<Name>ReferencedParamExpectingRTDisplay</Name>
								<GroupDescription />
								<Description>
									<Format>RTDisplay(true) expected on DVE Table. Table PID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">dveTablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Within the 'Protocol/Type@options' attribute, the 'exportProtocol' option allows to define which DVE protocols should be made and based on what parameter DVE elements should be created.[NewLine][NewLine]The exportProtocol option is expected to have the following format: "exportProtocol:[protocolName]:[DveTablePid]" optionally followed by ":noElementPrefix" where:[NewLine]- [protocolName] should be the name of the DVE protocol to be created.[NewLine]    - Note that we recommend the DVE protocol name to start with: "[DveParentProtocolName] - "[NewLine]- [DveTablePid] should be the PID of the table responsible for creating DVE elements. The referred Param is expected to:[NewLine]    - Be of type 'array'.[NewLine]    - Have its RTDisplay tag set to true.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="10">
						<Name namespace="Protocol.DVEs.DVEProtocols.DVEProtocol">CheckNameAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>UpdatedValue</Name>
								<GroupDescription />
								<Description>
									<Format>DVE Protocol with Name '{0}' for Table '{1}' was changed into '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">dveProtocolName</InputParameter>
										<InputParameter id="1">tableId</InputParameter>
										<InputParameter id="2">newDveProtocolName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>RemovedItem</Name>
								<GroupDescription />
								<Description>
									<Format>DVE Protocol with Name '{0}' for Table '{1}' was removed.</Format>
									<InputParameters>
										<InputParameter id="0">dveProtocolName</InputParameter>
										<InputParameter id="1">tableId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="11">
						<Name namespace="Protocol.Type">CheckAdvancedAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="4">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2100">
									<InputParameters>
										<InputParameter id="0" value="Protocol/Type@advanced">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[- When having only one connection for a specific type, the name needs to be of following format, where the second option can (optionally) be used to add more info about the goal of the connection (ex: XXX = Traps, XXX = Events, XXX = Alarms, etc):[NewLine]     - "IP Connection" or "IP Connection - XXX": for drivers that support TCP and/or UDP[NewLine]     - "HTTP Connection" or "HTTP Connection - XXX"[NewLine]     - "SSH Connection" or "SSH Connection - XXX"[NewLine]     - "SNMP Connection" or "SNMP Connection - XXX"[NewLine]     - "Serial Connection" or "Serial Connection - XXX": for drivers that only support the physical serial port (driver connection of type serial but not support TCP nor UDP)[NewLine]- When having more than one connection for a specific type, the name need to be of following format where XXX is used to distinguish them (ex: XXX = Redundant, XXX = Redundant 2, XXX = Backup, XXX = Traps, XXX = Events, etc):[NewLine]     - "IP Connection - XXX"[NewLine]     - "HTTP Connection - XXX"[NewLine]     - etc]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3100">
									<InputParameters>
										<InputParameter id="0" value="Protocol/Type@advanced">attributeName</InputParameter>
										<InputParameter id="1">attributeValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[- When having only one connection for a specific type, the name needs to be of following format, where the second option can (optionally) be used to add more info about the goal of the connection (ex: XXX = Traps, XXX = Events, XXX = Alarms, etc):[NewLine]     - "IP Connection" or "IP Connection - XXX": for drivers that support TCP and/or UDP[NewLine]     - "HTTP Connection" or "HTTP Connection - XXX"[NewLine]     - "SSH Connection" or "SSH Connection - XXX"[NewLine]     - "SNMP Connection" or "SNMP Connection - XXX"[NewLine]     - "Serial Connection" or "Serial Connection - XXX": for drivers that only support the physical serial port (driver connection of type serial but not support TCP nor UDP)[NewLine]- When having more than one connection for a specific type, the name need to be of following format where XXX is used to distinguish them (ex: XXX = Redundant, XXX = Redundant 2, XXX = Backup, XXX = Traps, XXX = Events, etc):[NewLine]     - "IP Connection - XXX"[NewLine]     - "HTTP Connection - XXX"[NewLine]     - etc]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>UntrimmedValueInAttribute_Sub</Name>
								<GroupDescription />
								<Description templateId="3600">
									<InputParameters>
										<InputParameter id="0">untrimmedValue</InputParameter>
										<InputParameter id="1" value="Protocol/Type@advanced">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[- When having only one connection for a specific type, the name needs to be of following format, where the second option can (optionally) be used to add more info about the goal of the connection (ex: XXX = Traps, XXX = Events, XXX = Alarms, etc):[NewLine]     - "IP Connection" or "IP Connection - XXX": for drivers that support TCP and/or UDP[NewLine]     - "HTTP Connection" or "HTTP Connection - XXX"[NewLine]     - "SSH Connection" or "SSH Connection - XXX"[NewLine]     - "SNMP Connection" or "SNMP Connection - XXX"[NewLine]     - "Serial Connection" or "Serial Connection - XXX": for drivers that only support the physical serial port (driver connection of type serial but not support TCP nor UDP)[NewLine]- When having more than one connection for a specific type, the name need to be of following format where XXX is used to distinguish them (ex: XXX = Redundant, XXX = Redundant 2, XXX = Backup, XXX = Traps, XXX = Events, etc):[NewLine]     - "IP Connection - XXX"[NewLine]     - "HTTP Connection - XXX"[NewLine]     - etc]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>UnknownConnection</Name>
								<GroupDescription />
								<Description>
									<Format>Unknown connection type '{0}' in Connection '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">connectionType</InputParameter>
										<InputParameter id="1">connectionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[- When having only one connection for a specific type, the name needs to be of following format, where the second option can (optionally) be used to add more info about the goal of the connection (ex: XXX = Traps, XXX = Events, XXX = Alarms, etc):[NewLine]     - "IP Connection" or "IP Connection - XXX": for drivers that support TCP and/or UDP[NewLine]     - "HTTP Connection" or "HTTP Connection - XXX"[NewLine]     - "SSH Connection" or "SSH Connection - XXX"[NewLine]     - "SNMP Connection" or "SNMP Connection - XXX"[NewLine]     - "Serial Connection" or "Serial Connection - XXX": for drivers that only support the physical serial port (driver connection of type serial but not support TCP nor UDP)[NewLine]- When having more than one connection for a specific type, the name need to be of following format where XXX is used to distinguish them (ex: XXX = Redundant, XXX = Redundant 2, XXX = Backup, XXX = Traps, XXX = Events, etc):[NewLine]     - "IP Connection - XXX"[NewLine]     - "HTTP Connection - XXX"[NewLine]     - etc]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="16">
						<Name namespace="Protocol.DVEs.DVEProtocols.DVEProtocol.ElementPrefix">CheckElementPrefixTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>AddedElementPrefix</Name>
								<GroupDescription />
								<Description>
									<Format>ElementPrefix was added to DVE Protocol with Name '{0}' for Table '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">dveProtocolName</InputParameter>
										<InputParameter id="1">tableId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>RemovedElementPrefix</Name>
								<GroupDescription />
								<Description>
									<Format>ElementPrefix was removed from DVE Protocol with Name '{0}' for Table '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">dveProtocolName</InputParameter>
										<InputParameter id="1">tableId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="17">
						<Name namespace="Protocol.Type">CheckDatabaseOptionsAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>EnabledPartitionedTrending</Name>
								<GroupDescription />
								<Description>
									<Format>Partitioned trending was enabled on protocol.</Format>
									<InputParameters />
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="18">
						<Name namespace="Protocol">CheckXMLDeclaration</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>InvalidDeclaration</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid XML encoding '{0}'. Possible values '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">currentEncoding</InputParameter>
										<InputParameter id="1">possibleValues</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[Remove the XML declaration if not set to UTF-8.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="21">
						<Name namespace="Protocol.Display">CheckDefaultPageAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1100">
									<InputParameters>
										<InputParameter id="0" value="defaultPage">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Specify a default page using the defaultPage attribute.]]></HowToFix>
								<ExampleCode><![CDATA[<Display defaultPage="General" pageOrder="General;----------;Data Page 1;Data Page 2;----------;WebInterface#http://[Polling Ip]/" />]]></ExampleCode>
								<Details><![CDATA[Skyline recommends the following structure for driver pages:[NewLine]- General[NewLine]- -----------[NewLine]- Data Page(s)[NewLine]- -----------[NewLine]- WebInterface]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2100">
									<InputParameters>
										<InputParameter id="0" value="defaultPage">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Specify a default page in the defaultPage attribute.]]></HowToFix>
								<ExampleCode><![CDATA[<Display defaultPage="General" pageOrder="General;----------;Data Page 1;Data Page 2;----------;WebInterface#http://[Polling Ip]/" />]]></ExampleCode>
								<Details><![CDATA[Skyline recommends the following structure for driver pages:[NewLine]- General[NewLine]- -----------[NewLine]- Data Page(s)[NewLine]- -----------[NewLine]- WebInterface]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UnexistingPage</Name>
								<GroupDescription />
								<Description>
									<Format>The specified defaultPage '{0}' does not exist.</Format>
									<InputParameters>
										<InputParameter id="0">pageName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[<Display defaultPage="General" pageOrder="General;----------;Data Page 1;Data Page 2;----------;WebInterface#http://[Polling Ip]/" />]]></ExampleCode>
								<Details><![CDATA[Skyline recommends the following structure for driver pages:[NewLine]- General[NewLine]- -----------[NewLine]- Data Page(s)[NewLine]- -----------[NewLine]- WebInterface]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3100">
									<InputParameters>
										<InputParameter id="0" value="defaultPage">attributeName</InputParameter>
										<InputParameter id="1">attributeValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[<Display defaultPage="General" pageOrder="General;----------;Data Page 1;Data Page 2;----------;WebInterface#http://[Polling Ip]/" />]]></ExampleCode>
								<Details><![CDATA[Skyline recommends the following structure for driver pages:[NewLine]- General[NewLine]- -----------[NewLine]- Data Page(s)[NewLine]- -----------[NewLine]- WebInterface]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>InvalidDefaultPage</Name>
								<GroupDescription />
								<Description>
									<Format>The default page should be a page with name 'General'.</Format>
									<InputParameters />
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Uncertain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Define a page with name 'General' and specify it as the default page.]]></HowToFix>
								<ExampleCode><![CDATA[<Display defaultPage="General" pageOrder="General;----------;Data Page 1;Data Page 2;----------;WebInterface#http://[Polling Ip]/" />]]></ExampleCode>
								<Details><![CDATA[Skyline recommends the following structure for driver pages:[NewLine]- General[NewLine]- -----------[NewLine]- Data Page(s)[NewLine]- -----------[NewLine]- WebInterface]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>UnsupportedPage</Name>
								<GroupDescription />
								<Description>
									<Format>Unsupported popup page '{0}' in defaultPage attribute.</Format>
									<InputParameters>
										<InputParameter id="0">pageName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[<Display defaultPage="General" pageOrder="General;----------;Data Page 1;Data Page 2;----------;WebInterface#http://[Polling Ip]/" />]]></ExampleCode>
								<Details><![CDATA[Skyline recommends the following structure for driver pages:[NewLine]- General[NewLine]- -----------[NewLine]- Data Page(s)[NewLine]- -----------[NewLine]- WebInterface]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="22">
						<Name namespace="Protocol.Display">CheckPageOrderAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1100">
									<InputParameters>
										<InputParameter id="0" value="pageOrder">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[<Display defaultPage="General" pageOrder="General;----------;Data Page 1;Data Page 2;----------;WebInterface#http://[Polling Ip]/" />]]></ExampleCode>
								<Details><![CDATA[Skyline recommends the following structure for driver pages:[NewLine]- General[NewLine]- -----------[NewLine]- Data Page(s)[NewLine]- -----------[NewLine]- WebInterface]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2100">
									<InputParameters>
										<InputParameter id="0" value="pageOrder">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[<Display defaultPage="General" pageOrder="General;----------;Data Page 1;Data Page 2;----------;WebInterface#http://[Polling Ip]/" />]]></ExampleCode>
								<Details><![CDATA[Skyline recommends the following structure for driver pages:[NewLine]- General[NewLine]- -----------[NewLine]- Data Page(s)[NewLine]- -----------[NewLine]- WebInterface]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3100">
									<InputParameters>
										<InputParameter id="0" value="pageOrder">attributeName</InputParameter>
										<InputParameter id="1">attributeValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[<Display defaultPage="General" pageOrder="General;----------;Data Page 1;Data Page 2;----------;WebInterface#http://[Polling Ip]/" />]]></ExampleCode>
								<Details><![CDATA[Skyline recommends the following structure for driver pages:[NewLine]- General[NewLine]- -----------[NewLine]- Data Page(s)[NewLine]- -----------[NewLine]- WebInterface]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>UnsupportedPage</Name>
								<GroupDescription />
								<Description>
									<Format>Unsupported popup page '{0}' in 'Protocol/Display@pageOrder' attribute.</Format>
									<InputParameters>
										<InputParameter id="0">pageName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[<Display defaultPage="General" pageOrder="General;----------;Data Page 1;Data Page 2;----------;WebInterface#http://[Polling Ip]/" />]]></ExampleCode>
								<Details><![CDATA[Skyline recommends the following structure for driver pages:[NewLine]- General[NewLine]- -----------[NewLine]- Data Page(s)[NewLine]- -----------[NewLine]- WebInterface]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>MissingPage</Name>
								<GroupDescription />
								<Description>
									<Format>Missing page '{0}' on 'Protocol/Display@pageOrder' attribute.</Format>
									<InputParameters>
										<InputParameter id="0">pageName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[<Display defaultPage="General" pageOrder="General;----------;Data Page 1;Data Page 2;----------;WebInterface#http://[Polling Ip]/" />]]></ExampleCode>
								<Details><![CDATA[Skyline recommends the following structure for driver pages:[NewLine]- General[NewLine]- -----------[NewLine]- Data Page(s)[NewLine]- -----------[NewLine]- WebInterface]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>MissingWebPage</Name>
								<GroupDescription />
								<Description>
									<Format>Missing WebInterface page.</Format>
									<InputParameters />
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Uncertain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Make sure the webInterface page(s) are defined as last and preceded by a separator page.]]></HowToFix>
								<ExampleCode><![CDATA[<Display defaultPage="General" pageOrder="General;----------;Data Page 1;Data Page 2;----------;WebInterface#http://[Polling Ip]/" />]]></ExampleCode>
								<Details><![CDATA[Skyline recommends the following structure for driver pages:[NewLine]- General[NewLine]- -----------[NewLine]- Data Page(s)[NewLine]- -----------[NewLine]- WebInterface]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>WrongWebPagePosition</Name>
								<GroupDescription />
								<Description>
									<Format>Web page '{0}' should be defined after all regular pages and the first web page should be preceded by a separator.</Format>
									<InputParameters>
										<InputParameter id="0">pageName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Make sure the webInterface page(s) are defined as last and preceded by a separator page.]]></HowToFix>
								<ExampleCode><![CDATA[<Display defaultPage="General" pageOrder="General;----------;Data Page 1;Data Page 2;----------;WebInterface#http://[Polling Ip]/" />]]></ExampleCode>
								<Details><![CDATA[Skyline recommends the following structure for driver pages:[NewLine]- General[NewLine]- -----------[NewLine]- Data Page(s)[NewLine]- -----------[NewLine]- WebInterface]]></Details>
							</ErrorMessage>
							<ErrorMessage id="8">
								<Name>UnexistingPage</Name>
								<GroupDescription />
								<Description>
									<Format>The specified page '{0}' does not exist.</Format>
									<InputParameters>
										<InputParameter id="0">pageName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[<Display defaultPage="General" pageOrder="General;----------;Data Page 1;Data Page 2;----------;WebInterface#http://[Polling Ip]/" />]]></ExampleCode>
								<Details><![CDATA[Skyline recommends the following structure for driver pages:[NewLine]- General[NewLine]- -----------[NewLine]- Data Page(s)[NewLine]- -----------[NewLine]- WebInterface]]></Details>
							</ErrorMessage>
							<ErrorMessage id="9">
								<Name>DuplicateEntries</Name>
								<GroupDescription />
								<Description>
									<Format>Page '{0}' has been added more than once to the pageOrder attribute.</Format>
									<InputParameters>
										<InputParameter id="0">pageName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[<Display defaultPage="General" pageOrder="General;----------;Data Page 1;Data Page 2;----------;WebInterface#http://[Polling Ip]/" />]]></ExampleCode>
								<Details><![CDATA[Skyline recommends the following structure for driver pages:[NewLine]- General[NewLine]- -----------[NewLine]- Data Page(s)[NewLine]- -----------[NewLine]- WebInterface]]></Details>
							</ErrorMessage>
							<ErrorMessage id="10">
								<Name>MissingPage_Sub</Name>
								<GroupDescription />
								<Description>
									<Format>Param with ID '{0}' is positioned on page '{1}' which is not ordered via 'Protocol/Display@pageOrder' attribute.</Format>
									<InputParameters>
										<InputParameter id="0">pid</InputParameter>
										<InputParameter id="1">pageName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[<Display defaultPage="General" pageOrder="General;----------;Data Page 1;Data Page 2;----------;WebInterface#http://[Polling Ip]/" />]]></ExampleCode>
								<Details><![CDATA[Skyline recommends the following structure for driver pages:[NewLine]- General[NewLine]- -----------[NewLine]- Data Page(s)[NewLine]- -----------[NewLine]- WebInterface]]></Details>
							</ErrorMessage>
							<ErrorMessage id="11">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7100">
									<InputParameters>
										<InputParameter id="0" value="Protocol/Display">tagName</InputParameter>
										<InputParameter id="1" value="pageOrder">attributeName</InputParameter>
										<InputParameter id="2" value="Param">referenceKind</InputParameter>
										<InputParameter id="3" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="4">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Via the 'Protocol/Display@pageOrder' attribute, it's possible to add pages which will link to an internet page via its URL.[NewLine]Such URL can be made dynamic by refering to parameter IDs.[NewLine]Such referenced parameters then require the RTDisplay tag to be set to true.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="12">
								<Name>ReferencedParamRTDisplayExpected</Name>
								<GroupDescription />
								<Description>
									<Format>RTDisplay(true) expected on Param '{0}' referenced by the 'Protocol/Display@pageOrder' attribute.</Format>
									<InputParameters>
										<InputParameter id="0">referencedPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Via the 'Protocol/Display@pageOrder' attribute, it's possible to add pages which will link to an internet page via its URL.[NewLine]Such URL can be made dynamic by refering to parameter IDs.[NewLine]Such referenced parameters then require the RTDisplay tag to be set to true.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="23">
						<Name namespace="Protocol">CheckConnections</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MismatchingNames</Name>
								<GroupDescription />
								<Description>
									<Format>Connection {0} has mismatching names: {1}.</Format>
									<InputParameters>
										<InputParameter id="0">connectionId</InputParameter>
										<InputParameter id="1">names</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[- When having only one connection for a specific type, the name needs to be of following format, where the second option can (optionally) be used to add more info about the goal of the connection (ex: XXX = Traps, XXX = Events, XXX = Alarms, etc):[NewLine]     - "IP Connection" or "IP Connection - XXX": for drivers that support TCP and/or UDP (See PortTypeIP, PortTypeUDP and PortTypeSerial tags under PortSettings tag)[NewLine]     - "HTTP Connection" or "HTTP Connection - XXX"[NewLine]     - "SSH Connection" or "SSH Connection - XXX"[NewLine]     - "SNMP Connection" or "SNMP Connection - XXX"[NewLine]     - "Serial Connection" or "Serial Connection - XXX": for drivers that only support the physical serial port. In other words, driver connections of type serial which don't support TCP nor UDP (See PortTypeIP, PortTypeUDP and PortTypeSerial tags under PortSettings tag).[NewLine]- When having more than one connection for a specific type, the name needs to be of following format where XXX is used to distinguish them (ex: XXX = Redundant, XXX = Redundant 2, XXX = Backup, XXX = Traps, XXX = Events, etc):[NewLine]     - "IP Connection - XXX"[NewLine]     - "HTTP Connection - XXX"[NewLine]     - etc]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>InvalidConnectionName</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid connection name '{0}' for a '{1}' connection. Connection ID '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">connectionName</InputParameter>
										<InputParameter id="1">connectionType</InputParameter>
										<InputParameter id="2">connectionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[- When having only one connection for a specific type, the name needs to be of following format, where the second option can (optionally) be used to add more info about the goal of the connection (ex: XXX = Traps, XXX = Events, XXX = Alarms, etc):[NewLine]     - "IP Connection" or "IP Connection - XXX": for drivers that support TCP and/or UDP (See PortTypeIP, PortTypeUDP and PortTypeSerial tags under PortSettings tag)[NewLine]     - "HTTP Connection" or "HTTP Connection - XXX"[NewLine]     - "SSH Connection" or "SSH Connection - XXX"[NewLine]     - "SNMP Connection" or "SNMP Connection - XXX"[NewLine]     - "Serial Connection" or "Serial Connection - XXX": for drivers that only support the physical serial port. In other words, driver connections of type serial which don't support TCP nor UDP (See PortTypeIP, PortTypeUDP and PortTypeSerial tags under PortSettings tag).[NewLine]- When having more than one connection for a specific type, the name needs to be of following format where XXX is used to distinguish them (ex: XXX = Redundant, XXX = Redundant 2, XXX = Backup, XXX = Traps, XXX = Events, etc):[NewLine]     - "IP Connection - XXX"[NewLine]     - "HTTP Connection - XXX"[NewLine]     - etc]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>DuplicateConnectionName</Name>
								<GroupDescription />
								<Description templateId="6100">
									<InputParameters>
										<InputParameter id="0" value="Connection">itemKind</InputParameter>
										<InputParameter id="1" value="name">valueKind</InputParameter>
										<InputParameter id="2">duplicateName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[- When having only one connection for a specific type, the name needs to be of following format, where the second option can (optionally) be used to add more info about the goal of the connection (ex: XXX = Traps, XXX = Events, XXX = Alarms, etc):[NewLine]     - "IP Connection" or "IP Connection - XXX": for drivers that support TCP and/or UDP (See PortTypeIP, PortTypeUDP and PortTypeSerial tags under PortSettings tag)[NewLine]     - "HTTP Connection" or "HTTP Connection - XXX"[NewLine]     - "SSH Connection" or "SSH Connection - XXX"[NewLine]     - "SNMP Connection" or "SNMP Connection - XXX"[NewLine]     - "Serial Connection" or "Serial Connection - XXX": for drivers that only support the physical serial port. In other words, driver connections of type serial which don't support TCP nor UDP (See PortTypeIP, PortTypeUDP and PortTypeSerial tags under PortSettings tag).[NewLine]- When having more than one connection for a specific type, the name needs to be of following format where XXX is used to distinguish them (ex: XXX = Redundant, XXX = Redundant 2, XXX = Backup, XXX = Traps, XXX = Events, etc):[NewLine]     - "IP Connection - XXX"[NewLine]     - "HTTP Connection - XXX"[NewLine]     - etc]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>DuplicateConnectionName_Sub</Name>
								<GroupDescription />
								<Description templateId="6101">
									<InputParameters>
										<InputParameter id="0" value="Connection">itemKind</InputParameter>
										<InputParameter id="1" value="name">valueKind</InputParameter>
										<InputParameter id="2">duplicateName</InputParameter>
										<InputParameter id="3">connectionIds</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[- When having only one connection for a specific type, the name needs to be of following format, where the second option can (optionally) be used to add more info about the goal of the connection (ex: XXX = Traps, XXX = Events, XXX = Alarms, etc):[NewLine]     - "IP Connection" or "IP Connection - XXX": for drivers that support TCP and/or UDP (See PortTypeIP, PortTypeUDP and PortTypeSerial tags under PortSettings tag)[NewLine]     - "HTTP Connection" or "HTTP Connection - XXX"[NewLine]     - "SSH Connection" or "SSH Connection - XXX"[NewLine]     - "SNMP Connection" or "SNMP Connection - XXX"[NewLine]     - "Serial Connection" or "Serial Connection - XXX": for drivers that only support the physical serial port. In other words, driver connections of type serial which don't support TCP nor UDP (See PortTypeIP, PortTypeUDP and PortTypeSerial tags under PortSettings tag).[NewLine]- When having more than one connection for a specific type, the name needs to be of following format where XXX is used to distinguish them (ex: XXX = Redundant, XXX = Redundant 2, XXX = Backup, XXX = Traps, XXX = Events, etc):[NewLine]     - "IP Connection - XXX"[NewLine]     - "HTTP Connection - XXX"[NewLine]     - etc]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>InvalidConnectionCount</Name>
								<GroupDescription />
								<Description>
									<Format>Connection count in 'Protocol/Type' tag '{0}' does not match with PortSettings count '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">connectionCount</InputParameter>
										<InputParameter id="1">portSettingCount</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[For each port that is defined, a PortSettings element should be defined. In addition, the order of these PortSettings elements must correspond with the order of the con­nections defined in the Protocol/Type@advanced attribute.[NewLine]- Connection count = number of connections defined in 'Protocol/Type@advanced' + 1 for the main connection define in 'Protocol/Type' tag.[NewLine]- PortSettings count = number of PortSettings in 'Protocol/Ports' tag + 1 for main PortSettings define in 'Protocol/PortSettings'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>InvalidCombinationOfSyntax1And2</Name>
								<GroupDescription />
								<Description>
									<Format>Connections can not be defined simultaneously via 'Protocol/Type' and 'Protocol/Connections'.</Format>
									<InputParameters />
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Connections can be defined either via 'Protocol/Type' or via 'Protocol/Connections' but both syntaxes can not be used in the same protocol.[NewLine]- 'Protocol/Type' is the recommended syntax.[NewLine]- 'Protocol/Connections' should only be used in case one of the rare features only available in this syntax is needed.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>UnrecommendedSyntax2</Name>
								<GroupDescription />
								<Description>
									<Format>Unrecommended use of the 'Protocol/Connections' syntax.</Format>
									<InputParameters />
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Uncertain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Connections can be defined either via 'Protocol/Type' or via 'Protocol/Connections' but both syntaxes can not be used in the same protocol.[NewLine]- 'Protocol/Type' is the recommended syntax.[NewLine]- 'Protocol/Connections' should only be used in case one of the rare features only available in this syntax is needed.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="8">
								<Name>ConnectionsOrderChanged</Name>
								<GroupDescription />
								<Description>
									<Format>Order of connections changed from '{0}' to '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">oldOrder</InputParameter>
										<InputParameter id="1">newOrder</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="9">
								<Name>ConnectionTypeChanged</Name>
								<GroupDescription />
								<Description>
									<Format>{0} Connection '{1}' with name '{2}' was changed into '{3}'.</Format>
									<InputParameters>
										<InputParameter id="0">connectionType</InputParameter>
										<InputParameter id="1">connectionId</InputParameter>
										<InputParameter id="2">connectionName</InputParameter>
										<InputParameter id="3">newConnectionType</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="10">
								<Name>ConnectionAdded</Name>
								<GroupDescription />
								<Description>
									<Format>{0} Connection '{1}' with name '{2}' was added.</Format>
									<InputParameters>
										<InputParameter id="0">connectionType</InputParameter>
										<InputParameter id="1">connectionId</InputParameter>
										<InputParameter id="2">connectionName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="24">
						<Name namespace="Protocol">CheckEndlessLoop</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>EndlessLoop</Name>
								<GroupDescription />
								<Description>
									<Format>Endless loop detected. Involved items '{0}'</Format>
									<InputParameters>
										<InputParameter id="0">involvedItems</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>PotentialEndlessLoop</Name>
								<GroupDescription />
								<Description>
									<Format>Potential endless loop detected. Involved items '{0}'</Format>
									<InputParameters>
										<InputParameter id="0">involvedItems</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Uncertain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Uncertain because not all paths could be completed due to conditions in the flow of the loop.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="25">
						<Name namespace="Protocol.Compliancies.MinimumRequiredVersion">CheckMinimumRequiredVersionTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MinVersionTooLow</Name>
								<GroupDescription />
								<Description>
									<Format>Minimum required version '{0}' too low. Expected value '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">currentMinDmVersion</InputParameter>
										<InputParameter id="1">expectedMinDmVersion</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Indicates the minimum DataMiner ver­sion that the driver is compatible with. [NewLine]If the DMS software version is less recent than the indicated version, the protocol will not be useable.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>MinVersionTooLow_Sub</Name>
								<GroupDescription />
								<Description>
									<Format>'{0}' : '{1}'</Format>
									<InputParameters>
										<InputParameter id="0">requiredDmVersion</InputParameter>
										<InputParameter id="1">usedFeature</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>MinVersionFeatureUsedInItemWithId_Sub</Name>
								<GroupDescription />
								<Description>
									<Format>Feature used in '{0}' with '{1}' '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">itemKind</InputParameter>
										<InputParameter id="1">identifierType</InputParameter>
										<InputParameter id="2">itemId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>MinVersionFeatureUsedInItem_Sub</Name>
								<GroupDescription />
								<Description>
									<Format>Feature used in '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">itemKind</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>UntrimmedTag</Name>
								<GroupDescription />
								<Description templateId="3000">
									<InputParameters>
										<InputParameter id="0" value="MinimumRequiredVersion">tagName</InputParameter>
										<InputParameter id="1">tagValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>MinVersionIncreased</Name>
								<GroupDescription />
								<Description>
									<Format>Minimum DataMiner required version increased from '{0}' to '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">oldMinDmVersion</InputParameter>
										<InputParameter id="1">newMinDmVersion</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[When increasing the minimum supported DataMiner version, a new protocol range should be made by incrementing the system version (2nd part of the protocol version)]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>MissingTag</Name>
								<GroupDescription />
								<Description templateId="1000">
									<InputParameters>
										<InputParameter id="0" value="MinimumRequiredVersion">tagName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="8">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2000">
									<InputParameters>
										<InputParameter id="0" value="MinimumRequiredVersion">tagName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="9">
								<Name>BelowMinimumSupportedVersion</Name>
								<GroupDescription />
								<Description>
									<Format>Minimum required version '{0}' is lower than the minimum supported version '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">currentMinDmVersion</InputParameter>
										<InputParameter id="1">currentSupportedDmVersion</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="10">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4000">
									<InputParameters>
										<InputParameter id="0" value="MinimumRequiredVersion">tagName</InputParameter>
										<InputParameter id="1">tagValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="26">
						<Name namespace="Protocol">CheckConnectionPingGroups</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>InvalidPingGroupType</Name>
								<GroupDescription />
								<Description>
									<Format>Ping group for '{0}' connection is not a '{0}' poll group. Group ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">connectionType</InputParameter>
										<InputParameter id="1">groupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[When to define a poll group:[NewLine]If a protocol has, at least, one group of type "poll" (no matter on which connection), then, the main connection should have a ping group defined in the protocol.[NewLine][NewLine]How to define a poll group:[NewLine]No matter the (1st) connection type, if a group with id="-1" is defined, it will be the ping group.[NewLine]Otherwise:[NewLine]    - SNMP: the first group defined in the XML.[NewLine]    - (smart-)serial: [NewLine]        - The pair with ping attribute set to true.[NewLine]        - If no such pair, the pair with lowest ID.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>PingSerialPairHasNoResponse</Name>
								<GroupDescription />
								<Description>
									<Format>Ping pair for '{0}' connection contains no response. Pair ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">connectionType</InputParameter>
										<InputParameter id="1">pairId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The pair used for the ping group should always contain a response.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>MultiplePingPairsForConnection</Name>
								<GroupDescription />
								<Description>
									<Format>Multiple ping pairs for connection with name '{0}' and type '{1}'. Connection ID '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">connectionName</InputParameter>
										<InputParameter id="1">connectionType</InputParameter>
										<InputParameter id="2">connectionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[There should always be one and only one ping pair per (smart-)serial connection.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>MultiplePingPairsForConnection_Sub</Name>
								<GroupDescription />
								<Description>
									<Format>Multiple ping pairs for connection '{0}'. Pair '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">connectionId</InputParameter>
										<InputParameter id="1">pairId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="27">
						<Name namespace="Protocol.Display.Pages.Page.Visibility">CheckOverridePidAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1101">
									<InputParameters>
										<InputParameter id="0" value="Page.Visibility@overridePID">attributeName</InputParameter>
										<InputParameter id="1" value="Page">itemKind</InputParameter>
										<InputParameter id="2">pageName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The attribute 'Visibility@overridePID' is mandatory within a Page/Visibility tag. It should refer to the ID of an existing Param. The referenced Param should have its RTDisplay tag set to 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="Page.Visibility@overridePID">attributeName</InputParameter>
										<InputParameter id="1" value="Page">itemKind</InputParameter>
										<InputParameter id="2">pageName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The attribute 'Visibility@overridePID' is mandatory within a Page/Visibility tag. It should refer to the ID of an existing Param. The referenced Param should have its RTDisplay tag set to 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3101">
									<InputParameters>
										<InputParameter id="0" value="Page.Visibility@overridePID">attributeName</InputParameter>
										<InputParameter id="1" value="Page">itemKind</InputParameter>
										<InputParameter id="2">pageName</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The attribute 'Visibility@overridePID' is mandatory within a Page/Visibility tag. It should refer to the ID of an existing Param. The referenced Param should have its RTDisplay tag set to 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>NonExistingParam</Name>
								<GroupDescription />
								<Description templateId="7101">
									<InputParameters>
										<InputParameter id="0" value="Page.Visibility@overridePID">attributeName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">pid</InputParameter>
										<InputParameter id="4" value="Page">itemKind</InputParameter>
										<InputParameter id="5" value="Name">idOrPidForItem</InputParameter>
										<InputParameter id="6">pageName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The attribute 'Visibility@overridePID' is mandatory within a Page/Visibility tag. It should refer to the ID of an existing Param. The referenced Param should have its RTDisplay tag set to 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>ReferencedParamExpectingRTDisplay</Name>
								<GroupDescription />
								<Description>
									<Format>RTDisplay(true) expected on Param '{0}' used as page visibility condition. Page name '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">pid</InputParameter>
										<InputParameter id="1">pageName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The attribute 'Visibility@overridePID' is mandatory within a Page/Visibility tag. It should refer to the ID of an existing Param. The referenced Param should have its RTDisplay tag set to 'true'.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="28">
						<Name namespace="Protocol.Display">CheckDisplayTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingTag</Name>
								<GroupDescription />
								<Description templateId="1000">
									<InputParameters>
										<InputParameter id="0" value="Protocol/Display">tagName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Protocol/Display tag is mandatory in order to define how pages should be displayed (default page, page order, etc).]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="29">
						<Name namespace="Protocol.Display">CheckWideColumnPagesAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2100">
									<InputParameters>
										<InputParameter id="0" value="Protocol/Display@wideColumnPage">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Protocol/Display@wideColumnPages allows to define a semicolon list of pages that should take the whole width available even if it only contains 1 column.[NewLine]It should refer to pages that are present in the Protocol/Display@pageOrder attribute and on which at least one parameter is displayed.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3100">
									<InputParameters>
										<InputParameter id="0" value="wideColumnsPages">attributeName</InputParameter>
										<InputParameter id="1">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Protocol/Display@wideColumnPages allows to define a semicolon list of pages that should take the whole width available even if it only contains 1 column.[NewLine]It should refer to pages that are present in the Protocol/Display@pageOrder attribute and on which at least one parameter is displayed.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UnexistingPage</Name>
								<GroupDescription />
								<Description>
									<Format>The page '{0}' specified in 'Protocol/Display@wideColumnPages' does not exist.</Format>
									<InputParameters>
										<InputParameter id="0">pageName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Protocol/Display@wideColumnPages allows to define a semicolon list of pages that should take the whole width available even if it only contains 1 column.[NewLine]It should refer to pages that are present in the Protocol/Display@pageOrder attribute and on which at least one parameter is displayed.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="30">
						<Name namespace="Protocol">CheckBaseForAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>InvalidAttribute</Name>
								<GroupDescription />
								<Description templateId="4100">
									<InputParameters>
										<InputParameter id="0" value="baseFor">attributeName</InputParameter>
										<InputParameter id="1">attributeValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Make sure that the Protocol@baseFor attribute value is not equal to the value specified in Protocol/ElementType.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Protocol@baseFor attribute value must not be equal to the value specified in Protocol/ElementType.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
				</Checks>
			</Category>
			<Category id="2">
				<Name>Param</Name>
				<Checks>
					<Check id="1">
						<Name namespace="Protocol.Params.Param">CheckIdAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1100">
									<InputParameters>
										<InputParameter id="0" value="Param@id">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each param.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each param should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2100">
									<InputParameters>
										<InputParameter id="0" value="Param@id">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each param.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each param should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4101">
									<InputParameters>
										<InputParameter id="0" value="Param@id">attributeName</InputParameter>
										<InputParameter id="1">pid</InputParameter>
										<InputParameter id="2" value="Param">itemKind</InputParameter>
										<InputParameter id="3">paramName</InputParameter>
										<InputParameter id="4" value="name">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each param.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each param should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>OutOfRangeId</Name>
								<GroupDescription />
								<Description templateId="1">
									<InputParameters>
										<InputParameter id="0" value="Param">tagName</InputParameter>
										<InputParameter id="1">id</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Default allowed ranges are:[NewLine]- 1 -> 64.299[NewLine]- 70.000 -> 99.999[NewLine]- 1.000.000 -> 9.999.999[NewLine][NewLine]There are exception for spectrum, base, Enhanced Service, SLA and Aggregation drivers. For more information about those exceptions, please check the protocol reference guide.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>InvalidUseOfSpectrumIdRange</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid use of Spectrum ID range for Param with ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>InvalidUseOfMediationIdRange</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid use of Mediation ID range for Param with ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="8">
								<Name>InvalidUseOfDataMinerModulesIdRange</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid use of DataMiner Modules ID range for Param with ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="9">
								<Name>InvalidUseOfEnhancedServiceIdRange</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid use of Enhanced Service ID range for Param with ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="10">
								<Name>InvalidUseOfSlaIdRange</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid use of SLA ID range for Param with ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="11">
								<Name>DuplicatedId</Name>
								<GroupDescription />
								<Description templateId="6001">
									<InputParameters>
										<InputParameter id="0" value="Param">itemKind</InputParameter>
										<InputParameter id="1">pid</InputParameter>
										<InputParameter id="2">paramNames</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each param.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each param should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="12">
								<Name>MissingParam</Name>
								<GroupDescription />
								<Description>
									<Format>Missing displayed Param. Param Name '{0}'. Param Type '{1}'. Param ID '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">paramName</InputParameter>
										<InputParameter id="1">paramType</InputParameter>
										<InputParameter id="2">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="13">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3100">
									<InputParameters>
										<InputParameter id="0" value="Param@id">attributeName</InputParameter>
										<InputParameter id="1">attributeValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each param.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each param should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="14">
								<Name>RTDisplayExpectedOnSpectrumParam</Name>
								<GroupDescription />
								<Description>
									<Format>RTDisplay(true) expected on Spectrum Params. Param ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Either the parameter should be removed, either its RTDisplay tag should be set to true.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Parameters with ID in the range [64 000, 64 299] are considered as spectrum parameters.[NewLine]Such spectrum Param should have its RTDisplay set to true.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="2">
						<Name namespace="Protocol.Params.Param.Name">CheckNameTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingTag</Name>
								<GroupDescription />
								<Description templateId="1001">
									<InputParameters>
										<InputParameter id="0" value="Name">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="Name">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedTag</Name>
								<GroupDescription />
								<Description templateId="3001">
									<InputParameters>
										<InputParameter id="0" value="Name">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[Remove the leading/trailing whitespaces.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidChars</Name>
								<GroupDescription />
								<Description templateId="4200">
									<InputParameters>
										<InputParameter id="0" value="Name">tagName</InputParameter>
										<InputParameter id="1">tagValue</InputParameter>
										<InputParameter id="2">invalidCharacters</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[Remove or replace invalid chars.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>RestrictedName</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid Param Name '{1}'. Param ID '{0}'. The Param Name is reserved by DataMiner for internal use.</Format>
									<InputParameters>
										<InputParameter id="0">paramId</InputParameter>
										<InputParameter id="1">paramName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[On top of a predefined list of names, all parameter names starting with two underscores are reserved for internal use.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>DuplicatedValue</Name>
								<GroupDescription />
								<Description templateId="6101">
									<InputParameters>
										<InputParameter id="0" value="Param">itemKind</InputParameter>
										<InputParameter id="1" value="Name">valueKind</InputParameter>
										<InputParameter id="2">duplicateName</InputParameter>
										<InputParameter id="3">paramIds</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>UnrecommendedChars</Name>
								<GroupDescription>Unrecommended chars in some parameter names.</GroupDescription>
								<Description>
									<Format>Unrecommended chars '{2}' in tag '{0}'. Current value '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">tagName</InputParameter>
										<InputParameter id="1">tagValue</InputParameter>
										<InputParameter id="2">invalidCharacters</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
								<AutoFixWarnings>
									<AutoFixWarning autoFixPopup="true">Double check the use of the Parameter class in QActions.</AutoFixWarning>
									<AutoFixWarning autoFixPopup="false">Double check the use of the (Get/Set)ParameterByName methods in QActions.</AutoFixWarning>
								</AutoFixWarnings>
							</ErrorMessage>
							<ErrorMessage id="8">
								<Name>UnrecommendedStartChars</Name>
								<GroupDescription />
								<Description>
									<Format>Unrecommended start chars '{2}' in tag '{0}'. Current value '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">tagName</InputParameter>
										<InputParameter id="1">tagValue</InputParameter>
										<InputParameter id="2">unrecommendedStartCharacters</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="9">
								<Name>LoggerTableColumnNameChanged</Name>
								<GroupDescription />
								<Description>
									<Format>Logger table column name '{0}' for column PID '{1}' on table '{2}' was changed into '{3}'.</Format>
									<InputParameters>
										<InputParameter id="0">oldColumnName</InputParameter>
										<InputParameter id="1">columnPid</InputParameter>
										<InputParameter id="2">tablePid</InputParameter>
										<InputParameter id="3">newColumnName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="10">
								<Name>RTDisplayExpectedOnContextMenu</Name>
								<GroupDescription />
								<Description>
									<Format>RTDisplay(true) expected on Param '{0}' used as context menu for table.</Format>
									<InputParameters>
										<InputParameter id="0">contextMenuPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Parameter with names ending with "_contextmenu" are used as context menu for tables.[NewLine]Such Param requires its RTDisplay tag to be set to true.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="11">
								<Name>RTDisplayExpectedOnQActionFeedback</Name>
								<GroupDescription />
								<Description>
									<Format>RTDisplay(true) expected on Param '{0}' used for QAction feedback.</Format>
									<InputParameters>
										<InputParameter id="0">qactionFeedbackPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Parameter with names ending with "_QActionFeedback" are used to dynamically provide feedback from a QAction to (and only to) the user triggering the QAction.[NewLine]Example scenarios where such feature is used:[NewLine]- Feedback from a QAction triggered by a table context menu.[NewLine][NewLine]Such Param requires its RTDisplay tag to be set to true.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="4">
						<Name namespace="Protocol.Params.Param.Information.Subtext">CheckSubtextTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingTag</Name>
								<GroupDescription>Missing tag 'Information/Subtext' in some parameters.</GroupDescription>
								<Description templateId="1001">
									<InputParameters>
										<InputParameter id="0" value="Subtext">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="Subtext">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="5">
						<Name namespace="Protocol.Params.Param.Alarm">CheckAlarmTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingDefaultThreshold</Name>
								<GroupDescription>Missing default thresholds on some monitored parameters.</GroupDescription>
								<Description>
									<Format>Missing default thresholds on monitored parameter. Param ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Uncertain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[When possible, default thresholds should be provided on monitored parameter as starting point to make things easier for a user when configuring alarm templates.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="7">
						<Name namespace="Protocol.Params.Param.Display.RTDisplay">CheckRTDisplayTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="RTDisplay">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>UntrimmedTag</Name>
								<GroupDescription />
								<Description templateId="3001">
									<InputParameters>
										<InputParameter id="0" value="RTDisplay">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4011">
									<InputParameters>
										<InputParameter id="0" value="RTDisplay">tagName</InputParameter>
										<InputParameter id="1">tagValue</InputParameter>
										<InputParameter id="2" value="true, false">allowedValues</InputParameter>
										<InputParameter id="3" value="Param">itemKind</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
										<InputParameter id="5">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>RTDisplayExpected</Name>
								<GroupDescription />
								<Description>
									<Format>RTDisplay(true) expected on Param '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Double check the subresults to evaluate if the features requiring RTDisplay are to be removed or if RTDisplay actually has to be set to true.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[This protocol contains some feature(s) requiring this Param to need the RTDisplay tag to be set true (see subresults).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>RTDisplayUnexpected</Name>
								<GroupDescription />
								<Description>
									<Format>Unexpected RTDisplay(true) on Param '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Uncertain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Double check if this Param requires RTDisplay for reasons that are outside the scope of this driver (Visios, automation scripts, etc).[NewLine]- If so, suppress this result and explain why RTDisplay is required via the suppression comment.[NewLine]- If not, remove the full Display tag containing this RTDisplay tag.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[This protocol doesn't contain anything that would justify the need of the RTDisplay tag being true.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="8">
						<Name namespace="Protocol.Params.Param">CheckTrendingAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DisabledTrending</Name>
								<GroupDescription />
								<Description>
									<Format>Trending on Param '{0}' was disabled.</Format>
									<InputParameters>
										<InputParameter id="0">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="Param@trending">attributeName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3101">
									<InputParameters>
										<InputParameter id="0" value="Param@trending">attributeName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>RTDisplayExpected</Name>
								<GroupDescription />
								<Description>
									<Format>RTDisplay(true) expected on trended parameters. Param ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Double check if trending is really needed:[NewLine]- if not, remove trending.[NewLine]- If so, set RTDisplay tag to true.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="9">
						<Name namespace="Protocol.Params.Param.Display.Units">CheckUnitsTag</Name>
						<ErrorMessages>
							<ErrorMessage id="2">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="Units">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Either add a correct unit, either remove the Unit tag.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>OutdatedValue</Name>
								<GroupDescription />
								<Description>
									<Format>Obsolete unit '{0}'. New syntax '{1}'. Param ID '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">obsoleteUnit</InputParameter>
										<InputParameter id="1">newUnit</InputParameter>
										<InputParameter id="2">paramPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidTag</Name>
								<GroupDescription />
								<Description>
									<Format>Unknown unit '{0}'. Param ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">unitValue</InputParameter>
										<InputParameter id="1">paramPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>UnsupportedTag</Name>
								<GroupDescription />
								<Description templateId="10300">
									<InputParameters>
										<InputParameter id="0" value="Units">tagName</InputParameter>
										<InputParameter id="1">paramDisplayType</InputParameter>
										<InputParameter id="2">paramPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Remove the Units tag.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Depending on the type of displayed Param, it does not always make sense to add a unit. Example: adding a unit to a table Param.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>ExcessiveTag</Name>
								<GroupDescription />
								<Description>
									<Format>Excessive tag '{0}' because of {1}. Param ID '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">tagName</InputParameter>
										<InputParameter id="1">reason</InputParameter>
										<InputParameter id="2">paramPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Remove the unit.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>MissingTag</Name>
								<GroupDescription>Missing tag 'Display/Units' in some parameters.</GroupDescription>
								<Description templateId="1020">
									<InputParameters>
										<InputParameter id="0" value="Units">tagName</InputParameter>
										<InputParameter id="1">paramDisplayType</InputParameter>
										<InputParameter id="2">paramPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="8">
								<Name>UntrimmedTag</Name>
								<GroupDescription />
								<Description templateId="3001">
									<InputParameters>
										<InputParameter id="0" value="Units">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[Remove leading and/or trailing whitespaces.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="10">
						<Name namespace="Protocol.Params.Param.Measurement.Type">CheckWidthAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description>
									<Format>Missing (page)button width attribute. Param '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[Add Measurement.Type@width attribute with a value equal or greater than 110.]]></HowToFix>
								<ExampleCode><![CDATA[<Type width="110">button</Type>]]></ExampleCode>
								<Details><![CDATA[The recommended width for (page)buttons is 110.[NewLine]When needed, (page)buttons can exceptionally be made larger but in that case, they need to be consistent through the driver page they belong to.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyWidth</Name>
								<GroupDescription />
								<Description>
									<Format>Empty (page)button width attribute. Param '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[Fill in Measurement.Type@width attribute with a value equal or greater than 110.]]></HowToFix>
								<ExampleCode><![CDATA[<Type width="110">button</Type>]]></ExampleCode>
								<Details><![CDATA[The recommended width for (page)buttons is 110.[NewLine]When needed, (page)buttons can exceptionally be made larger but in that case, they need to be consistent through the driver page they belong to.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedWidth</Name>
								<GroupDescription />
								<Description>
									<Format>Untrimmed (page)button width attribute '{0}'. Param '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">untrimmedWidth</InputParameter>
										<InputParameter id="1">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[Remove leading and/or trailing whitespaces]]></HowToFix>
								<ExampleCode><![CDATA[<Type width="110">button</Type>]]></ExampleCode>
								<Details><![CDATA[The recommended width for (page)buttons is 110.[NewLine]When needed, (page)buttons can exceptionally be made larger but in that case, they need to be consistent through the driver page they belong to.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidWidth</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid (page)button width attribute '{0}'. Param '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">invalidWidth</InputParameter>
										<InputParameter id="1">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[Fill in Measurement.Type@width attribute with a value equal or greater than 110.]]></HowToFix>
								<ExampleCode><![CDATA[<Type width="110">button</Type>]]></ExampleCode>
								<Details><![CDATA[The recommended width for (page)buttons is 110.[NewLine]When needed, (page)buttons can exceptionally be made larger but in that case, they need to be consistent through the driver page they belong to.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>InconsistentWidth</Name>
								<GroupDescription />
								<Description>
									<Format>Inconsistent (page)buttons width on page '{0}'. PIDs '{1}' - Widths '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">pageName</InputParameter>
										<InputParameter id="1">paramIDs</InputParameter>
										<InputParameter id="2">widthValues</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HowToFix><![CDATA[Adjust the width of this button to the highest width value of all buttons on this page.]]></HowToFix>
								<ExampleCode><![CDATA[<Type width="110">button</Type>]]></ExampleCode>
								<Details><![CDATA[The recommended width for (page)buttons is 110.[NewLine]When needed, (page)buttons can exceptionally be made larger but in that case, they need to be consistent through the driver page they belong to.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>UnsupportedAttribute</Name>
								<GroupDescription />
								<Description>
									<Format>The width attribute is not supported for '{0}'. Param '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">measurementType</InputParameter>
										<InputParameter id="1">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Remove the Measurement.Type@width attribute.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Measurement.Type@width attribute is only supported for (page)button parameters.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>UnrecommendedWidth</Name>
								<GroupDescription />
								<Description>
									<Format>Unrecommended (page)button width '{0}'. Param '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">widthValue</InputParameter>
										<InputParameter id="1">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[<Type width="110">button</Type>]]></ExampleCode>
								<Details><![CDATA[The recommended width for (page)buttons is 110.[NewLine]When needed, (page)buttons can exceptionally be made larger but in that case, they need to be consistent through the driver page they belong to.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="11">
						<Name namespace="Protocol.Params.Param.Display.Range">CheckRangeTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingTag</Name>
								<GroupDescription>Missing tag 'Display/Range' in some parameters.</GroupDescription>
								<Description templateId="1020">
									<InputParameters>
										<InputParameter id="0" value="Display/Range">tagName</InputParameter>
										<InputParameter id="1">paramDisplayType</InputParameter>
										<InputParameter id="2">paramPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Uncertain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>UnsupportedTag</Name>
								<GroupDescription />
								<Description templateId="10300">
									<InputParameters>
										<InputParameter id="0" value="Display/Range">tagName</InputParameter>
										<InputParameter id="1">paramDisplayType</InputParameter>
										<InputParameter id="2">paramPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[For certain types of Param, a range does not make sense (ex: table param).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="Display/Range">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Either add 'Range/Low' and/or 'Range/High' tag(s), either remove the empty 'Display/Range' tag.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>LowShouldBeSmallerThanHigh</Name>
								<GroupDescription />
								<Description>
									<Format>Range/Low '{0}' should be smaller than Range/High '{1}'. Param ID '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">rangeLow</InputParameter>
										<InputParameter id="1">rangeHigh</InputParameter>
										<InputParameter id="2">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="12">
						<Name namespace="Protocol.Params.Param.Measurement.Discreets.Discreet.Value">CheckValueTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>UpdatedValue</Name>
								<GroupDescription />
								<Description>
									<Format>Discreet value tag with display '{0}' on Param '{1}' was changed from '{2}' into '{3}'.</Format>
									<InputParameters>
										<InputParameter id="0">displayValue</InputParameter>
										<InputParameter id="1">paramId</InputParameter>
										<InputParameter id="2">previousValue</InputParameter>
										<InputParameter id="3">newValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>RemovedItem</Name>
								<GroupDescription />
								<Description>
									<Format>Discreet tag with value '{0}' on Param '{1}' was removed.</Format>
									<InputParameters>
										<InputParameter id="0">discreetValue</InputParameter>
										<InputParameter id="1">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="13">
						<Name namespace="Protocol.Params.Param.Measurement.Discreets.Discreet.Display">CheckDisplayTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>UpdatedValue</Name>
								<GroupDescription />
								<Description>
									<Format>Discreet display tag with value '{0}' on Param '{1}' was changed from '{2}' into '{3}'.</Format>
									<InputParameters>
										<InputParameter id="0">oldValue</InputParameter>
										<InputParameter id="1">paramId</InputParameter>
										<InputParameter id="2">previousDispay</InputParameter>
										<InputParameter id="3">newDisplay</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>InvalidPagebuttonCaption</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid pagebutton caption format '{0}'. Suggested fix '{1}'. Param ID '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">displayValue</InputParameter>
										<InputParameter id="1">suggestedValue</InputParameter>
										<InputParameter id="2">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[For pagebuttons, the display tag should end with ellipsis (…) without any space before nor after it.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>MissingTag</Name>
								<GroupDescription />
								<Description templateId="1001">
									<InputParameters>
										<InputParameter id="0" value="Discreet/Display">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Discreet tags should always contain a unique Display tag (user-friendly value) and a unique Value tag (internal value).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="Discreet/Display">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Discreet tags should always contain a unique Display tag (user-friendly value) and a unique Value tag (internal value).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>UntrimmedTag</Name>
								<GroupDescription />
								<Description templateId="3001">
									<InputParameters>
										<InputParameter id="0" value="Discreet/Display">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">paramId</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Discreet tags should always contain a unique Display tag (user-friendly value) and a unique Value tag (internal value).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>DuplicatedValue</Name>
								<GroupDescription />
								<Description templateId="6101">
									<InputParameters>
										<InputParameter id="0" value="Param">itemKind</InputParameter>
										<InputParameter id="1" value="Discreet/Display">valueKind</InputParameter>
										<InputParameter id="2">duplicateValue</InputParameter>
										<InputParameter id="3">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Discreet tags should always contain a unique Display tag (user-friendly value) and a unique Value tag (internal value).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>WrongCasing_Sub</Name>
								<GroupDescription />
								<Description templateId="11001">
									<InputParameters>
										<InputParameter id="0">currentValue</InputParameter>
										<InputParameter id="1">expectedValue</InputParameter>
										<InputParameter id="2" value="Param">itemKind</InputParameter>
										<InputParameter id="3" value="ID">idOrPid</InputParameter>
										<InputParameter id="4">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Discreet/Display values should follow following title case rules:[NewLine]- Should start with a capital[NewLine]    - First and last word[NewLine]    - Important words (verbs, nouns, adjective, adverb, etc)[NewLine]- Should not start with a capital[NewLine]    - Articles (a, an, the)[NewLine]    - Coordinating conjuctions (and, but, for, nor, or, so, yet)[NewLine]    - Preposition with <4 chars (at, by, to...)]]></Details>
							</ErrorMessage>
							<ErrorMessage id="8">
								<Name>WrongCasing</Name>
								<GroupDescription />
								<Description templateId="12000">
									<InputParameters>
										<InputParameter id="0" value="Discreet/Display">xmlElementPath</InputParameter>
										<InputParameter id="1" value="title casing">casingRule</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Discreet/Display values should follow following title case rules:[NewLine]- Should start with a capital[NewLine]    - First and last word[NewLine]    - Important words (verbs, nouns, adjective, adverb, etc)[NewLine]- Should not start with a capital[NewLine]    - Articles (a, an, the)[NewLine]    - Coordinating conjuctions (and, but, for, nor, or, so, yet)[NewLine]    - Preposition with <4 chars (at, by, to...)]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="14">
						<Name namespace="Protocol.Params.Param.Description">CheckDescriptionTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>UpdatedValue</Name>
								<GroupDescription />
								<Description>
									<Format>Description tag on Param '{0}' was changed from '{1}' into '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">paramId</InputParameter>
										<InputParameter id="1">previousDescription</InputParameter>
										<InputParameter id="2">newDescription</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>RemovedItem</Name>
								<GroupDescription />
								<Description>
									<Format>Description tag with value '{0}' on Param '{1}' was removed.</Format>
									<InputParameters>
										<InputParameter id="0">descriptionValue</InputParameter>
										<InputParameter id="1">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedTag</Name>
								<GroupDescription />
								<Description templateId="3001">
									<InputParameters>
										<InputParameter id="0" value="Description">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>MissingTag</Name>
								<GroupDescription />
								<Description templateId="1001">
									<InputParameters>
										<InputParameter id="0" value="Description">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="Description">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>DuplicatedValue</Name>
								<GroupDescription />
								<Description templateId="6101">
									<InputParameters>
										<InputParameter id="0" value="Param">itemKind</InputParameter>
										<InputParameter id="1" value="Description">valueKind</InputParameter>
										<InputParameter id="2">duplicateDescription</InputParameter>
										<InputParameter id="3">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>WrongCasing_Sub</Name>
								<GroupDescription />
								<Description templateId="11001">
									<InputParameters>
										<InputParameter id="0">currentValue</InputParameter>
										<InputParameter id="1">expectedValue</InputParameter>
										<InputParameter id="2" value="Param">itemKind</InputParameter>
										<InputParameter id="3" value="ID">idOrPid</InputParameter>
										<InputParameter id="4">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Param/Description values should follow following title case rules:[NewLine]- Should start with a capital[NewLine]    - First and last word[NewLine]    - Important words (verbs, nouns, adjective, adverb, etc)[NewLine]- Should not start with a capital[NewLine]    - Articles (a, an, the)[NewLine]    - Coordinating conjuctions (and, but, for, nor, or, so, yet)[NewLine]    - Preposition with <4 chars (at, by, to...)]]></Details>
							</ErrorMessage>
							<ErrorMessage id="8">
								<Name>WrongCasing</Name>
								<GroupDescription />
								<Description templateId="12000">
									<InputParameters>
										<InputParameter id="0" value="Param/Description">xmlElementPath</InputParameter>
										<InputParameter id="1" value="title casing">casingRule</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Param/Description values should follow following title case rules:[NewLine]- Should start with a capital[NewLine]    - First and last word[NewLine]    - Important words (verbs, nouns, adjective, adverb, etc)[NewLine]- Should not start with a capital[NewLine]    - Articles (a, an, the)[NewLine]    - Coordinating conjuctions (and, but, for, nor, or, so, yet)[NewLine]    - Preposition with <4 chars (at, by, to...)]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="15">
						<Name namespace="Protocol.Params.Param.ArrayOptions">CheckArrayOptionsTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DisplayColumnChangedToNaming</Name>
								<GroupDescription />
								<Description>
									<Format>DisplayColumn attribute with column idx '{0}' on table '{1}' was changed into naming options: '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">columnIdx</InputParameter>
										<InputParameter id="1">tableId</InputParameter>
										<InputParameter id="2">namingValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>DisplayColumnChangeToNamingFormat</Name>
								<GroupDescription />
								<Description>
									<Format>DisplayColumn attribute with column idx '{0}' on table '{1}' was changed into NamingFormat: '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">columnIdx</InputParameter>
										<InputParameter id="1">tableId</InputParameter>
										<InputParameter id="2">namingFormatValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="16">
						<Name namespace="Protocol.Params.Param.ArrayOptions">CheckDisplayColumnAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DisplayColumnRemoved</Name>
								<GroupDescription />
								<Description>
									<Format>DisplayColumn attribute with column idx '{0}' on table '{1}' was removed.</Format>
									<InputParameters>
										<InputParameter id="0">columnIdx</InputParameter>
										<InputParameter id="1">tableId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>DisplayColumnAdded</Name>
								<GroupDescription />
								<Description>
									<Format>DisplayColumn attribute with column idx '{0}' on table '{1}' was added.</Format>
									<InputParameters>
										<InputParameter id="0">columnIdx</InputParameter>
										<InputParameter id="1">tableId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>DisplayColumnContentChanged</Name>
								<GroupDescription />
								<Description>
									<Format>DisplayColumn attribute with column idx '{0}' on table '{1}' was changed to idx '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">previousColumnIdx</InputParameter>
										<InputParameter id="1">tableId</InputParameter>
										<InputParameter id="2">newColumnIdx</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="17">
						<Name namespace="Protocol.Params.Param.ArrayOptions">CheckOptionsAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="ArrayOptions@options">attributeName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3101">
									<InputParameters>
										<InputParameter id="0" value="ArrayOptions@options">attributeName</InputParameter>
										<InputParameter id="1" value="Table">itemKind</InputParameter>
										<InputParameter id="2">tablePid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>NamingEmpty</Name>
								<GroupDescription />
								<Description templateId="2201">
									<InputParameters>
										<InputParameter id="0" value="naming">optionName</InputParameter>
										<InputParameter id="1" value="ArrayOptions@options">attributeName</InputParameter>
										<InputParameter id="2" value="Table">itemKind</InputParameter>
										<InputParameter id="3" value="PID">idOrPid</InputParameter>
										<InputParameter id="4">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The naming option in the ArrayOptions@options attribute should contain a list of PIDs referencing existing parameters.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>NamingRefersToNonExistingParam</Name>
								<GroupDescription />
								<Description templateId="8201">
									<InputParameters>
										<InputParameter id="0" value="naming">optionName</InputParameter>
										<InputParameter id="1" value="ArrayOptions@options">attribute</InputParameter>
										<InputParameter id="2" value="Param">referenceKind</InputParameter>
										<InputParameter id="3" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="4">referencedPid</InputParameter>
										<InputParameter id="5" value="Table">itemKind</InputParameter>
										<InputParameter id="6" value="PID">idOrPidForItem</InputParameter>
										<InputParameter id="7">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The naming option in the ArrayOptions@options attribute should contain a list of PIDs referencing existing parameters.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>RemovedLoggerTableDatabaseLink</Name>
								<GroupDescription />
								<Description>
									<Format>Database link for logger table '{0}' was removed.</Format>
									<InputParameters>
										<InputParameter id="0">paramPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>PreserveStateShouldBeAvoided</Name>
								<GroupDescription />
								<Description>
									<Format>Unrecommended use of the "preserve state" option on table '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Use a QAction to compare the previous and new values of the cells, and calculate the state of each row.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The use of the "preserve state" option on tables should be avoided as it requires sig­nificantly more processing.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>ViewTableInvalidReference</Name>
								<GroupDescription />
								<Description>
									<Format>Table view option '{0}' must refer to an existing table excluding the view table itself. View table PID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">viewOption</InputParameter>
										<InputParameter id="1">viewTablePid</InputParameter>
									</InputParameters>
								</Description>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Make sure the view table refers to an existing table, excluding view tables.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="8">
								<Name>ViewTableFilterChangeInvalidColumns</Name>
								<GroupDescription />
								<Description>
									<Format>Column '{0}' specified in the filterChange option must refer to a column of the view table '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">columnPid</InputParameter>
										<InputParameter id="1">viewTablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="9">
								<Name>ViewTableDirectViewInvalidColumn</Name>
								<GroupDescription />
								<Description>
									<Format>Column '{0}' specified in the directView option of view table '{1}' must refer to a column of another table.</Format>
									<InputParameters>
										<InputParameter id="0">columnPid</InputParameter>
										<InputParameter id="1">viewTablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="20">
						<Name namespace="Protocol.Params.Param.Interprete.Type">CheckTypeTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>UpdatedValue</Name>
								<GroupDescription />
								<Description>
									<Format>Interprete type on Param '{0}' has been changed from '{1}' to '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">paramId</InputParameter>
										<InputParameter id="1">oldTypeValue</InputParameter>
										<InputParameter id="2">newTypeValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>RemovedTag</Name>
								<GroupDescription />
								<Description>
									<Format>Interprete type on Param '{0}' has been removed.</Format>
									<InputParameters>
										<InputParameter id="0">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>AddedTag</Name>
								<GroupDescription />
								<Description>
									<Format>New Type tag '{0}' for interprete in Param '{1}' was added.</Format>
									<InputParameters>
										<InputParameter id="0">typeValue</InputParameter>
										<InputParameter id="1">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="21">
						<Name namespace="Protocol.Params.Param.Type">CheckOptionsAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="2">
								<Name>MatrixDimensionsChanged</Name>
								<GroupDescription />
								<Description>
									<Format>Matrix Dimensions on Param '{0}' was changed from '{1}' to '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">matrixPid</InputParameter>
										<InputParameter id="1">oldDimensions</InputParameter>
										<InputParameter id="2">newDimensions</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>MatrixDimensionsRemoved</Name>
								<GroupDescription />
								<Description>
									<Format>Matrix Dimensions '{0}' on Param '{1}' were removed.</Format>
									<InputParameters>
										<InputParameter id="0">matrixDimensions</InputParameter>
										<InputParameter id="1">matrixPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>MissingHeaderTrailerLinkOptions</Name>
								<GroupDescription />
								<Description>
									<Format>HeaderTrailerLink option should be defined on {0} with PID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">headerOrTrailer</InputParameter>
										<InputParameter id="1">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>InvalidHeaderTrailerLinkOptions</Name>
								<GroupDescription />
								<Description>
									<Format>HeaderTrailerLink option is wrongly defined on {0} with PID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">headerOrTrailer</InputParameter>
										<InputParameter id="1">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>ExcessiveHeaderTrailerLinkOptions</Name>
								<GroupDescription />
								<Description>
									<Format>HeaderTrailerLink option should not be defined on Param '{0}' as it is nor a header nor a trailer.</Format>
									<InputParameters>
										<InputParameter id="0">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[Remove the option.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>DuplicateHeaderTrailerLinkOptions</Name>
								<GroupDescription />
								<Description>
									<Format>HeaderTrailerLink with ID '{0}' defined on more than 1 {1}. PIDs {2}.</Format>
									<InputParameters>
										<InputParameter id="0">linkId</InputParameter>
										<InputParameter id="1">headerOrTrailer</InputParameter>
										<InputParameter id="2">paramPids</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="8">
								<Name>InconsistentColumnTypeDimensions</Name>
								<GroupDescription />
								<Description>
									<Format>Matrix option '{0}' not inline with option '{1}'. Matrix PID '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">columnTypes</InputParameter>
										<InputParameter id="1">dimensions</InputParameter>
										<InputParameter id="2">matrixPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="9">
								<Name>InvalidColumnTypeParamRawType</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid Interprete/RawType '{0}' for 'Matrix ColumnType Param'. ColumnType PID '{1}'. Matrix PID '{2}'. Possible values 'numeric text, unsigned number'.</Format>
									<InputParameters>
										<InputParameter id="0">rawType</InputParameter>
										<InputParameter id="1">columnTypePid</InputParameter>
										<InputParameter id="2">matrixPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Either by changing the reference to the columntype parameter withing the matrix parameter.[NewLine]Either by changing the RawType of the parameter currently referenced as bying the columntype parameter.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="11">
								<Name>MissingMatrixOptions</Name>
								<GroupDescription />
								<Description>
									<Format>Missing '{0}' option for matrix. Param ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">optionName</InputParameter>
										<InputParameter id="1">matrixPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Make sure both dimensions and columntypes options are correctly defined via the Param/Type@options attribute.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Following options in Param/Type@options attribute are required for matrixes.[NewLine] - dimensions=rowCount,columnCount[NewLine] - columnTypes=pid:minDiscreetValue-maxDiscreetValue]]></Details>
							</ErrorMessage>
							<ErrorMessage id="12">
								<Name>MissingAttributeForMatrix</Name>
								<GroupDescription />
								<Description templateId="1101">
									<InputParameters>
										<InputParameter id="0" value="Param/Type@options">attributeName</InputParameter>
										<InputParameter id="1" value="Matrix">itemKind</InputParameter>
										<InputParameter id="2">matrixPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Following options in Param/Type@options attribute are required for matrixes.[NewLine] - dimensions=rowCount,columnCount[NewLine] - columnTypes=pid:minDiscreetValue-maxDiscreetValue]]></Details>
							</ErrorMessage>
							<ErrorMessage id="13">
								<Name>InvalidMatrixParamType</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid Param Type '{0}' on matrix. Matrix PID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">paramType</InputParameter>
										<InputParameter id="1">matrixPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="14">
								<Name>InvalidMatrixOption</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid syntax for the '{0}' option. Matrix PID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">optionName</InputParameter>
										<InputParameter id="1">matrixPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Make sure both dimensions and columntypes options are correctly defined.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Following options in Param/Type@options attribute are required for matrixes.[NewLine] - dimensions=rowCount,columnCount[NewLine] - columnTypes=pid:minDiscreetValue-maxDiscreetValue]]></Details>
							</ErrorMessage>
							<ErrorMessage id="15">
								<Name>InvalidColumnTypeParamLengthType</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid Interprete/LengthType '{0}' for 'Matrix ColumnType Param'. ColumnType PID '{1}'. Matrix PID '{2}'. Possible values 'next param, fixed'.</Format>
									<InputParameters>
										<InputParameter id="0">lengthType</InputParameter>
										<InputParameter id="1">columnTypePid</InputParameter>
										<InputParameter id="2">matrixPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Either by changing the reference to the columntype parameter withing the matrix parameter.[NewLine]Either by changing the LengthType of the parameter currently referenced as bying the columntype parameter.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="16">
								<Name>InvalidColumnTypeParamType</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid Interprete/Type '{0}' for 'Matrix ColumnType Param'. ColumnType PID '{1}'. Matrix PID '{2}'. Possible values 'double'.</Format>
									<InputParameters>
										<InputParameter id="0">type</InputParameter>
										<InputParameter id="1">columnTypePid</InputParameter>
										<InputParameter id="2">matrixPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Either by changing the reference to the columntype parameter withing the matrix parameter.[NewLine]Either by changing the Inteprete/Type of the parameter currently referenced as bying the columntype parameter.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="17">
								<Name>MissingColumnTypeParam</Name>
								<GroupDescription />
								<Description>
									<Format>Missing 'columntypes' Param with ID '{0}' for matrix Param with ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">missingColumnTypePid</InputParameter>
										<InputParameter id="1">matrixPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="18">
								<Name>MissingColumnTypeParamInterprete</Name>
								<GroupDescription />
								<Description>
									<Format>Missing 'Interprete' Tag on matrix ColumnType Param with ID '{0}' for matrix Param with ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">missingColumnTypePid</InputParameter>
										<InputParameter id="1">matrixPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="19">
								<Name>InvalidColumnTypeParamInterprete</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid Interprete for 'Matrix ColumnType Param'. ColumnType PID '{0}'. Matrix PID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">columnTypePid</InputParameter>
										<InputParameter id="1">matrixPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Either by changing the reference to the columntype parameter withing the matrix parameter.[NewLine]Either by changing the Inteprete of the parameter currently referenced as bying the columntype parameter.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="20">
								<Name>UnrecommendedSshOptions</Name>
								<GroupDescription />
								<Description>
									<Format>Unrecommended option '{0}' in Param '{1}'</Format>
									<InputParameters>
										<InputParameter id="0">option</InputParameter>
										<InputParameter id="1">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Remove the option from the parameter.[NewLine]Reference the parameter in the PortSettings.]]></HowToFix>
								<ExampleCode><![CDATA[ <PortSettings name="SSH Connection">[NewLine]  <IPport>[NewLine]   <DefaultValue>22</DefaultValue>[NewLine]  </IPport>[NewLine]  <BusAddress>[NewLine]   <Disabled>true</Disabled>[NewLine]  </BusAddress>[NewLine]  <PortTypeSerial>[NewLine]   <Disabled>true</Disabled>[NewLine]  </PortTypeSerial>[NewLine]  <PortTypeUDP>[NewLine]   <Disabled>true</Disabled>[NewLine]  </PortTypeUDP>[NewLine]  <SSH>[NewLine]   <Credentials>[NewLine]    <Username pid="1" />[NewLine]    <Password pid="2" />[NewLine]   </Credentials>[NewLine]  </SSH>[NewLine] </PortSettings>]]></ExampleCode>
								<Details><![CDATA[Using SSH Username, SSH Password, or SSH Options will restrict the protocol to a single SSH connection over port 22. Attempting to use these with additional SSH connections or a different port may result in unpredictable behavior.[NewLine][NewLine]It is recommended to reference the parameter in the PortSettings instead. This allows you to define multiple SSH connections and configure any port number.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="21">
								<Name>InvalidMixOfSshOptionsAndPortSettings</Name>
								<GroupDescription />
								<Description>
									<Format>Mixing option {0} and PortSettings SSH is invalid. Param ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">option</InputParameter>
										<InputParameter id="1">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Remove the option from the parameter.[NewLine]Reference the parameter in the PortSettings.]]></HowToFix>
								<ExampleCode><![CDATA[<PortSettings name="SSH Connection">[NewLine]    <IPport>[NewLine]        <DefaultValue>22</DefaultValue>[NewLine]    </IPport>[NewLine]    <BusAddress>[NewLine]        <Disabled>true</Disabled>[NewLine]    </BusAddress>[NewLine]    <PortTypeSerial>[NewLine]        <Disabled>true</Disabled>[NewLine]    </PortTypeSerial>[NewLine]    <PortTypeUDP>[NewLine]        <Disabled>true</Disabled>[NewLine]    </PortTypeUDP>[NewLine]    <SSH>[NewLine]        <Credentials>[NewLine]            <Username pid="1100"/>[NewLine]            <Password pid="1101"/>[NewLine]        </Credentials>[NewLine]    </SSH>[NewLine]</PortSettings>]]></ExampleCode>
								<Details><![CDATA[Conflicting SSH configurations detected.[NewLine]You're using both SSH Username, SSH Password, SSH Options and 'PortSettings/SSH'.[NewLine]SSH Username, SSH Password, SSH Options are restricted to one SSH connection on port 22 only and shouldn't be mixed with 'PortSettings/SSH'.[NewLine]Use only one of these configurations.[NewLine]'PortSettings/SSH' is generally better as it supports multiple SSH connections and use any port number.[NewLine]]]></Details>
							</ErrorMessage>
							<ErrorMessage id="22">
								<Name>HeaderTrailerLinkShouldHaveConnection</Name>
								<GroupDescription />
								<Description>
									<Format>Connection option should be defined on {0} with PID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">headerOrTrailer</InputParameter>
										<InputParameter id="1">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Add a connection]]></HowToFix>
								<ExampleCode><![CDATA[<Type options="headerTrailerLink=1;connection=0">]]></ExampleCode>
								<Details><![CDATA[When a connection is not specified, then ALL connections will listen for this header/trailer. Even though a connection could have a response without a trailer, it will still be listening for that trailer to appear.[NewLine]When SLPort is listening for a trailer, it will reject the data when the trailer is not present.[NewLine]Rejected data by SLPort will not appear in the StreamViewer and is therefore harder to investigate.[NewLine]It is strongly recommended to always use headerTrailerLink option in combination with a specified intended connection, even when there would be only one connection present as it could quickly result into issues when another connection is added in the future.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="23">
								<Name>HeaderTrailerConnectionShouldBeValid</Name>
								<GroupDescription />
								<Description>
									<Format>The connection '{0}' needs to be a valid connection type when used on a {1} with PID '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">connectionId</InputParameter>
										<InputParameter id="1">headerOrTrailer</InputParameter>
										<InputParameter id="2">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Assign the connection to an ID of a valid connection type]]></HowToFix>
								<ExampleCode><![CDATA[<Type options="headerTrailerLink=1;connection=0">]]></ExampleCode>
								<Details><![CDATA[When a connection is specified then this header/trailer parameter will only be taken into account when the connection ID matches.[NewLine]If the connection id is being specified on a different connection type, like SNMP, then it makes no sense to specify the parameter as header/trailer type on such a connection type.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="22">
						<Name namespace="Protocol.Params.Param.Display.Positions.Position.Page">CheckPageTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>RemovedFromPage</Name>
								<GroupDescription />
								<Description>
									<Format>Param '{0}' was removed from page '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">paramPid</InputParameter>
										<InputParameter id="1">pageName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>MissingTag</Name>
								<GroupDescription />
								<Description templateId="1001">
									<InputParameters>
										<InputParameter id="0" value="Position/Page">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A Position tag should always contain a Page tag.[NewLine]Note that, exept for title end parameters, the same parameter should not be displayed more than once on the same page.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="Position/Page">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A Position tag should always contain a Page tag.[NewLine]Note that, exept for title end parameters, the same parameter should not be displayed more than once on the same page.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>UntrimmedTag</Name>
								<GroupDescription />
								<Description templateId="3001">
									<InputParameters>
										<InputParameter id="0" value="Position/Page">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A Position tag should always contain a Page tag.[NewLine]Note that, exept for title end parameters, the same parameter should not be displayed more than once on the same page.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>DuplicatedValue</Name>
								<GroupDescription />
								<Description templateId="6101">
									<InputParameters>
										<InputParameter id="0" value="Param">itemKind</InputParameter>
										<InputParameter id="1" value="Position/Page">valueKind</InputParameter>
										<InputParameter id="2">duplicateValue</InputParameter>
										<InputParameter id="3">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A Position tag should always contain a Page tag.[NewLine]Note that, exept for title end parameters, the same parameter should not be displayed more than once on the same page.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>WrongCasing_Sub</Name>
								<GroupDescription />
								<Description templateId="11001">
									<InputParameters>
										<InputParameter id="0">currentValue</InputParameter>
										<InputParameter id="1">expectedValue</InputParameter>
										<InputParameter id="2" value="Param">itemKind</InputParameter>
										<InputParameter id="3" value="ID">idOrPid</InputParameter>
										<InputParameter id="4">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Position/Page values should follow following title case rules:[NewLine]- Should start with a capital[NewLine]    - First and last word[NewLine]    - Important words (verbs, nouns, adjective, adverb, etc)[NewLine]- Should not start with a capital[NewLine]    - Articles (a, an, the)[NewLine]    - Coordinating conjuctions (and, but, for, nor, or, so, yet)[NewLine]    - Preposition with <4 chars (at, by, to...)]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>WrongCasing</Name>
								<GroupDescription />
								<Description templateId="12000">
									<InputParameters>
										<InputParameter id="0" value="Position/Page">xmlElementPath</InputParameter>
										<InputParameter id="1" value="title casing">casingRule</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Position/Page values should follow following title case rules:[NewLine]- Should start with a capital[NewLine]    - First and last word[NewLine]    - Important words (verbs, nouns, adjective, adverb, etc)[NewLine]- Should not start with a capital[NewLine]    - Articles (a, an, the)[NewLine]    - Coordinating conjuctions (and, but, for, nor, or, so, yet)[NewLine]    - Preposition with <4 chars (at, by, to...)]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="23">
						<Name namespace="Protocol.Params.Param.Alarm">CheckTypeAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>RemovedNormalizationAlarmType</Name>
								<GroupDescription />
								<Description>
									<Format>Normalization with Alarm type '{0}' on Param '{1}' was removed.</Format>
									<InputParameters>
										<InputParameter id="0">alarmType</InputParameter>
										<InputParameter id="1">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>UpdatedNormalizationAlarmType</Name>
								<GroupDescription />
								<Description>
									<Format>Normalization with Alarm type '{0}' on Param '{1}' was changed into '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">alarmType</InputParameter>
										<InputParameter id="1">paramId</InputParameter>
										<InputParameter id="2">newAlarmType</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>AddedNormalizationAlarmType</Name>
								<GroupDescription />
								<Description>
									<Format>Normalization with Alarm type '{0}' on Param '{1}' was added.</Format>
									<InputParameters>
										<InputParameter id="0">normalizationType</InputParameter>
										<InputParameter id="1">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="24">
						<Name namespace="Protocol.Params.Param.Alarm.Monitored">CheckMonitoredTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>RemovedAlarming</Name>
								<GroupDescription />
								<Description>
									<Format>Alarming for Param '{0}' was removed.</Format>
									<InputParameters>
										<InputParameter id="0">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>MissingTag</Name>
								<GroupDescription />
								<Description templateId="1001">
									<InputParameters>
										<InputParameter id="0" value="Alarm/Monitored">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="Alarm/Monitored">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidTag</Name>
								<GroupDescription />
								<Description templateId="4011">
									<InputParameters>
										<InputParameter id="0" value="Alarm/Monitored">tagName</InputParameter>
										<InputParameter id="1">tagValue</InputParameter>
										<InputParameter id="2" value="true, false">allowedValues</InputParameter>
										<InputParameter id="3" value="Param">itemKind</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
										<InputParameter id="5">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>UntrimmedTag</Name>
								<GroupDescription />
								<Description templateId="3001">
									<InputParameters>
										<InputParameter id="0" value="Alarm/Monitored">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>RTDisplayExpected</Name>
								<GroupDescription />
								<Description>
									<Format>RTDisplay(true) expected on alarmed (monitored) parameters. Param ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Double check if alarming is really needed:[NewLine]- if not, remove the full Alarm tag.[NewLine]- If so, set RTDisplay tag to true.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="25">
						<Name namespace="Protocol.Params.Param.ArrayOptions.ColumnOption">CheckIdxAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>UpdatedIdxValue</Name>
								<GroupDescription />
								<Description>
									<Format>Column with PID '{0}' had its SLProtocol position changed from '{1}' into '{2}'. Table PID '{3}'.</Format>
									<InputParameters>
										<InputParameter id="0">columnPid</InputParameter>
										<InputParameter id="1">oldSLProtocolPosition</InputParameter>
										<InputParameter id="2">newSLProtocolPosition</InputParameter>
										<InputParameter id="3">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The SLProtocol position is based on the idx of the columns and will typically match with it.[NewLine]However, note that columns with type="displaykey" are not known to SLProtocol.[NewLine]This means that even though the SLProtocol position is based on idx value, it will not alway match with it.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>UpdatedIdxValue_Parent</Name>
								<GroupDescription />
								<Description>
									<Format>Some columns have their SLProtocol position changed. Table PID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The SLProtocol position is based on the idx of the columns and will typically match with it.[NewLine]However, note that columns with type="displaykey" are not known to SLProtocol.[NewLine]This means that even though the SLProtocol position is based on idx value, it will not alway match with it.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="26">
						<Name namespace="Protocol.Params.Param.ArrayOptions">CheckPartialAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>EnabledPartial</Name>
								<GroupDescription />
								<Description>
									<Format>Partial Table option was enabled on table '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="27">
						<Name namespace="Protocol.Params.Param.ArrayOptions">CheckLoggerTable</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>RemovedLoggerColumn</Name>
								<GroupDescription />
								<Description>
									<Format>Column with PID '{0}' was removed from logger table '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">columnPid</InputParameter>
										<InputParameter id="1">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="28">
						<Name namespace="Protocol.Params.Param.Database.ColumnDefinition">CheckColumnDefinitionTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>ChangedLoggerDataType</Name>
								<GroupDescription />
								<Description>
									<Format>Database type '{0}' for columns on table '{1}' was changed into '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">oldType</InputParameter>
										<InputParameter id="1">tablePid</InputParameter>
										<InputParameter id="2">newType</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="29">
						<Name namespace="Protocol.Params.Param">CheckHistorySetAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>EnabledHistorySet</Name>
								<GroupDescription />
								<Description>
									<Format>HistorySet attribute was enabled on Param '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="30">
						<Name namespace="Protocol.Params.Param.Display.Trending.Type">CheckTypeTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>UpdatedTrendType</Name>
								<GroupDescription />
								<Description>
									<Format>Trend Type '{0}' on Param '{1}' was changed into '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">oldTrendType</InputParameter>
										<InputParameter id="1">paramId</InputParameter>
										<InputParameter id="2">newTrendType</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="31">
						<Name namespace="Protocol.Params.Param.Measurement.Type">CheckOptionsAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>ColumnOrderChanged</Name>
								<GroupDescription />
								<Description>
									<Format>Displayed column order with PID's '{0}' in table '{1}' was changed to '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">oldColumnOrder</InputParameter>
										<InputParameter id="1">tablePid</InputParameter>
										<InputParameter id="2">newColumnOrder</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>MissingPriorityForSortedColumns</Name>
								<GroupDescription />
								<Description>
									<Format>Missing column sorting priorities on table '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[In case multiple columns are sorted, set a sorting priority for all these columns. In case at least one of the displayed columns is a datetime column, one of these columns should be set as the main column for sorting.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidConnectedMatrixPoints</Name>
								<GroupDescription />
								<Description>
									<Format>'{0}': Invalid '{1}' number of connections for one {2} for matrix '{3}'.</Format>
									<InputParameters>
										<InputParameter id="0">badValue</InputParameter>
										<InputParameter id="1">minOrMax</InputParameter>
										<InputParameter id="2">inputOrOutput</InputParameter>
										<InputParameter id="3">matrixPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Make sure the total number of possible connections for a single input or output is not negative nor exceeds the total dimensions of the matrix.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidColumnDimensionsToOutputCount</Name>
								<GroupDescription />
								<Description>
									<Format>Matrix Param '{0}' Measurement/Type@options - matrix:outputCount of '{1}' does not match Param/Type@options - dimensions: columnCount of '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">matrixPid</InputParameter>
										<InputParameter id="1">measurementOutputCount</InputParameter>
										<InputParameter id="2">dimensionColumnCount</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[Adjust Measurement to match dimensions or vice versa.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>InvalidMatrixDimensionsToInputCount</Name>
								<GroupDescription />
								<Description>
									<Format>Matrix Param '{0}' Measurement/Type@options - matrix:inputCount of '{1}' does not match Param/Type@options - dimensions: rowCount of '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">matrixPid</InputParameter>
										<InputParameter id="1">measurementInputCount</InputParameter>
										<InputParameter id="2">dimensionRowCount</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[Adjust Measurement to match dimensions or vice versa.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>InvalidMatrixOption</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid syntax for the '{0}' option. Matrix PID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">optionName</InputParameter>
										<InputParameter id="1">matrixPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Following options in Measurement/Type@options attribute are required for matrixes:[NewLine] - matrix=InputCount, OutputCount, MinConnectedInputs, MaxConnectedInputs, MinConnectedOutputs, MaxConnectedOutputs]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>MissingMatrixOption</Name>
								<GroupDescription />
								<Description>
									<Format>Missing '{0}' option for matrix Param. Matrix PID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">optionName</InputParameter>
										<InputParameter id="1">matrixPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Following options in Measurement/Type@options attribute are required for matrixes:[NewLine] - matrix=InputCount, OutputCount, MinConnectedInputs, MaxConnectedInputs, MinConnectedOutputs, MaxConnectedOutputs]]></Details>
							</ErrorMessage>
							<ErrorMessage id="8">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1101">
									<InputParameters>
										<InputParameter id="0" value="Measurement/Type@Options">attributeName</InputParameter>
										<InputParameter id="1" value="Matrix">itemKind</InputParameter>
										<InputParameter id="2">matrixPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Following options in Measurement/Type@options attribute are required for matrixes:[NewLine] - matrix=InputCount, OutputCount, MinConnectedInputs, MaxConnectedInputs, MinConnectedOutputs, MaxConnectedOutputs]]></Details>
							</ErrorMessage>
							<ErrorMessage id="9">
								<Name>MissingSortingOnDateTimeColumn</Name>
								<GroupDescription />
								<Description>
									<Format>Table not mainly sorted on one of its date(time) column(s). Table PID '{0}'. Date(time) column PIDs '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">tablePid</InputParameter>
										<InputParameter id="1">columnPids</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Uncertain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[If a table has any column of type date or datetime, one of those columns should typically be used as sorted column with sort priority 0.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="10">
								<Name>ReferencedParamRTDisplayExpected</Name>
								<GroupDescription />
								<Description>
									<Format>RTDisplay(true) expected on Param '{0}' displayed as table column. Table PID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">columnPid</InputParameter>
										<InputParameter id="1">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Columns referred by the 'Measurement/Type@options' attribute of a displayed table should have its RTDisplay tag set to true.[NewLine]A table is considered 'displayed' if its RTDisplay tag and/or its export attribute is set to true.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="32">
						<Name namespace="Protocol.Params.Param.Display.Range.Low">CheckLowTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>UpdatedLowRange</Name>
								<GroupDescription />
								<Description>
									<Format>Low range '{0}' in Param '{1}' increased to '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">previousValue</InputParameter>
										<InputParameter id="1">paramPid</InputParameter>
										<InputParameter id="2">newValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>AddedLowRange</Name>
								<GroupDescription />
								<Description>
									<Format>Low range '{0}' in Param '{1}' was added.</Format>
									<InputParameters>
										<InputParameter id="0">newValue</InputParameter>
										<InputParameter id="1">paramPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="Range/Low">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[If present, the 'Range/Low' tag should be filled in with a numerical value.[NewLine]Its value should be smaller than the one in the 'Range/High' tag.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4001">
									<InputParameters>
										<InputParameter id="0">tagValue</InputParameter>
										<InputParameter id="1" value="Range/Low">tagName</InputParameter>
										<InputParameter id="2" value="Param">itemKind</InputParameter>
										<InputParameter id="3">paramId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[If present, the 'Range/Low' tag should be filled in with a numerical value.[NewLine]Its value should be smaller than the one in the 'Range/High' tag.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>UntrimmedValue</Name>
								<GroupDescription />
								<Description templateId="3001">
									<InputParameters>
										<InputParameter id="0" value="Range/Low">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">paramId</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[If present, the 'Range/Low' tag should be filled in with a numerical value.[NewLine]Its value should be smaller than the one in the 'Range/High' tag.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>LogarithmicLowerOrEqualToZero</Name>
								<GroupDescription />
								<Description>
									<Format>Range/Low '{0}' should be bigger than zero due to Trending@logarithmic 'true'. Param ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">rangeLow</InputParameter>
										<InputParameter id="1">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[When Trending@logarithmic is set to 'true', both 'Range/Low' and 'Range/High' should be bigger than 0.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>WriteDifferentThanRead</Name>
								<GroupDescription />
								<Description>
									<Format>Range/Low on write Param '{0}' is different than the one on read Param '{1}'. Write PID '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">rangeLowOnWrite</InputParameter>
										<InputParameter id="1">rangeLowOnRead</InputParameter>
										<InputParameter id="2">writePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="33">
						<Name namespace="Protocol.Params.Param.Display.Range.High">CheckHighTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>UpdatedHighRange</Name>
								<GroupDescription />
								<Description>
									<Format>High range '{0}' in Param '{1}' decreased to '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">previousValue</InputParameter>
										<InputParameter id="1">paramPid</InputParameter>
										<InputParameter id="2">newValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>AddedHighRange</Name>
								<GroupDescription />
								<Description>
									<Format>High range '{0}' in Param '{1}' was added.</Format>
									<InputParameters>
										<InputParameter id="0">newValue</InputParameter>
										<InputParameter id="1">paramPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="Range/High">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[If present, the 'Range/High' tag should be filled in with a numerical value.[NewLine]Its value should be bigger than the one in the 'Range/Low' tag.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4001">
									<InputParameters>
										<InputParameter id="0">tagValue</InputParameter>
										<InputParameter id="1" value="Range/High">tagName</InputParameter>
										<InputParameter id="2" value="Param">itemKind</InputParameter>
										<InputParameter id="3">paramId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[If present, the 'Range/High' tag should be filled in with a numerical value.[NewLine]Its value should be bigger than the one in the 'Range/Low' tag.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>UntrimmedValue</Name>
								<GroupDescription />
								<Description templateId="3001">
									<InputParameters>
										<InputParameter id="0" value="Range/High">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">paramId</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[If present, the 'Range/High' tag should be filled in with a numerical value.[NewLine]Its value should be bigger than the one in the 'Range/Low' tag.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>LogarithmicLowerOrEqualToZero</Name>
								<GroupDescription />
								<Description>
									<Format>Range/High '{0}' should be bigger than zero due to Trending@logarithmic 'true'. Param ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">rangeHigh</InputParameter>
										<InputParameter id="1">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[When Trending@logarithmic is set to 'true', both 'Range/Low' and 'Range/High' should be bigger than 0.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>WriteDifferentThanRead</Name>
								<GroupDescription />
								<Description>
									<Format>Range/High on write Param '{0}' is different than the one on read Param '{1}'. Write PID '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">rangeHighOnWrite</InputParameter>
										<InputParameter id="1">rangeHighOnRead</InputParameter>
										<InputParameter id="2">writePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="34">
						<Name namespace="Protocol.Params.Param.Alarm">CheckOptionsAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>UpdatedThresholdAlarmType</Name>
								<GroupDescription />
								<Description>
									<Format>Threshold with value '{0}' on Param '{1}' was changed into '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">oldValue</InputParameter>
										<InputParameter id="1">paramPid</InputParameter>
										<InputParameter id="2">newValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>AddedThresholdAlarmType</Name>
								<GroupDescription />
								<Description>
									<Format>Threshold with value '{0}' was added to Param '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">newValue</InputParameter>
										<InputParameter id="1">paramPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>RemovedThresholdAlarmType</Name>
								<GroupDescription />
								<Description>
									<Format>Threshold with value '{0}' was removed from Param '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">oldValue</InputParameter>
										<InputParameter id="1">paramPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="Alarm@option">attributeName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3101">
									<InputParameters>
										<InputParameter id="0" value="Alarm@option">attributeName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7101">
									<InputParameters>
										<InputParameter id="0" value="Alarm@option">attributeName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">referencedPid</InputParameter>
										<InputParameter id="4" value="Param">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>ReferencedParamRTDisplayExpected</Name>
								<GroupDescription />
								<Description>
									<Format>RTDisplay(true) expected on Param '{0}' referenced by a 'Alarm@option' attribute. Param ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">referencedPid</InputParameter>
										<InputParameter id="1">referencingPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="35">
						<Name namespace="Protocol.Params.Param.ArrayOptions.ColumnOption">CheckColumnOptionTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>RemovedColumnOptionTag</Name>
								<GroupDescription />
								<Description>
									<Format>Column with PID '{0}' was removed from table '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">columnPid</InputParameter>
										<InputParameter id="1">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="36">
						<Name namespace="Protocol.Params.Param.Interprete.Exceptions">CheckExceptionsTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>UpdatedExceptionValueTag</Name>
								<GroupDescription />
								<Description>
									<Format>Exception value tag for exception with id '{0}' on Param '{1}' was changed from '{2}' to '{3}'.</Format>
									<InputParameters>
										<InputParameter id="0">exceptionId</InputParameter>
										<InputParameter id="1">paramPid</InputParameter>
										<InputParameter id="2">previousExceptionValue</InputParameter>
										<InputParameter id="3">newExceptionValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Updating the exceptions value tag will have impact on existing alarm templates as an exception value is preceded by a '$' sign in the alarm template.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>RemovedException</Name>
								<GroupDescription />
								<Description>
									<Format>Exception with id '{0}' was removed from Param '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">exceptionId</InputParameter>
										<InputParameter id="1">paramPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Removing an exception value will have impact on existing alarm templates as an exception value is preceded by a '$' sign in the alarm template.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>AddedException</Name>
								<GroupDescription />
								<Description>
									<Format>Exception with id '{0}' was added to Param '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">exceptionId</InputParameter>
										<InputParameter id="1">paramPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Adding an exception will have impact on existing alarm templates as an exception value is preceded by a '$' sign in the alarm template.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>ExceptionIncompatibleWithParamType</Name>
								<GroupDescription />
								<Description>
									<Format>Interprete/Exceptions is incompatible with Param/Type '{0}'. Param ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">paramType</InputParameter>
										<InputParameter id="1">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Use Measurement.Discreets.Discreet tags.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Do not use Exception tags to add exceptions to write parameters.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="37">
						<Name namespace="Protocol.Params.Param.Measurement.Type">CheckTypeTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>TogglebuttonRecommended</Name>
								<GroupDescription />
								<Description>
									<Format>Measurement/Type 'togglebutton' is recommended for Param with ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[Change measurement type to 'togglebutton'.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[When we have only two possible discreet values and it is obvious from reading one what the other one is, we should use a togglebutton.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>MatrixInvalidInterpreteRawType</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid RawType '{0}' for matrix Param '{1}'. Expected RawType 'other'.</Format>
									<InputParameters>
										<InputParameter id="0">rawType</InputParameter>
										<InputParameter id="1">matrixPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>MatrixInvalidInterpreteType</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid Interprete/Type '{0}' for matrix Param '{1}'. Expected Type '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">interpreteType</InputParameter>
										<InputParameter id="1">matrixPid</InputParameter>
										<InputParameter id="2">expectedInterpreteType</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>MatrixInvalidInterpreteLengthType</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid LengthType '{0}' for matrix Param '{1}'. Expected LengthType 'next param'.</Format>
									<InputParameters>
										<InputParameter id="0">lengthType</InputParameter>
										<InputParameter id="1">matrixPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>MatrixAlarmingDisabled</Name>
								<GroupDescription />
								<Description templateId="10">
									<InputParameters>
										<InputParameter id="0" value="Matrix">itemKind</InputParameter>
										<InputParameter id="1">matrixPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[Enable alarming.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Matrix parameters should always be alarmed.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>MatrixTrendingEnabled</Name>
								<GroupDescription />
								<Description templateId="11">
									<InputParameters>
										<InputParameter id="0" value="Matrix">itemKind</InputParameter>
										<InputParameter id="1">matrixPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[Disable trending.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Matrix parameters should never be trended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>MatrixSetterOnWrite</Name>
								<GroupDescription />
								<Description templateId="10111">
									<InputParameters>
										<InputParameter id="0" value="setter">attributeName</InputParameter>
										<InputParameter id="1" value="Matrix">itemKind</InputParameter>
										<InputParameter id="2">matrixPid</InputParameter>
										<InputParameter id="3" value="true">currentValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[Remove the setter attribute.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Matrix write parameters should never have a setter = true.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="8">
								<Name>MatrixInvalidInterprete</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid Interprete for matrix Param '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">matrixPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="9">
								<Name>InvalidParamType</Name>
								<GroupDescription />
								<Description templateId="4301">
									<InputParameters>
										<InputParameter id="0">paramType</InputParameter>
										<InputParameter id="1" value="Param/Type">tagName</InputParameter>
										<InputParameter id="2">measurementType</InputParameter>
										<InputParameter id="3" value="Param">itemKind</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
										<InputParameter id="5">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Following kind of parameters require the Param/Type tag to be set to 'write' or 'writebit':[NewLine]- button[NewLine]- togglebutton[NewLine]- pagebutton]]></Details>
							</ErrorMessage>
							<ErrorMessage id="10">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="Measurement/Type">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="11">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4001">
									<InputParameters>
										<InputParameter id="0">measurementType</InputParameter>
										<InputParameter id="1" value="Measurement/Type">tagName</InputParameter>
										<InputParameter id="2" value="Param">itemKind</InputParameter>
										<InputParameter id="3">paramId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="12">
								<Name>UntrimmedTag</Name>
								<GroupDescription />
								<Description templateId="3001">
									<InputParameters>
										<InputParameter id="0" value="Measurement/Type">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">paramId</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="38">
						<Name namespace="Protocol.Params.Param.ArrayOptions.ColumnOption">CheckOptionsAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>ViewInvalidSyntax</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid syntax on view option of column with IDX '{0}'. View table '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">columnIdx</InputParameter>
										<InputParameter id="1">viewTablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>ViewInvalidColumnReference</Name>
								<GroupDescription />
								<Description>
									<Format>Column view option '{0}' must refer to an existing column of another table. View table PID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">viewOption</InputParameter>
										<InputParameter id="1">viewTablePid</InputParameter>
									</InputParameters>
								</Description>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>ViewInvalidCombinationFilterChange</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid combination of view table filterChange option with column view option. View table PID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">viewTablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[When the filterChange option is used on a view table, its columns can't have the view option.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>ForeignKeyMissingRelation</Name>
								<GroupDescription />
								<Description>
									<Format>Missing Relation between table '{0}' and table '{1}' due to foreignKey on column '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">fkToTablePid</InputParameter>
										<InputParameter id="1">fkFromTablePid</InputParameter>
										<InputParameter id="2">fkColumnPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Tables directly linked via a foreignKey should always be adjacent in, at least one relation path.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>ColumnOptionExpectingRTDisplay</Name>
								<GroupDescription />
								<Description>
									<Format>RTDisplay(true) expected on column Param '{0}' due to '{1}' in 'ColumnOption@options' attribute. Table PID '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">columnPid</InputParameter>
										<InputParameter id="1">option</InputParameter>
										<InputParameter id="2">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Many options from the 'ColumnOption@options' attribute only make sense if the related column is exported or has RTDisplay tag set to true.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>ForeignKeyTargetExpectingRTDisplayOnPK</Name>
								<GroupDescription />
								<Description>
									<Format>RTDisplay(true) expected on PK column Param '{0}' due to '{1}' in 'ColumnOption@options' attribute. Table PID '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">pkColumnPid</InputParameter>
										<InputParameter id="1">foreignKeyOption</InputParameter>
										<InputParameter id="2">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[When a table contains a FK to another table. That other table requires its PK column to have its RTDisplay tag set to true.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>ForeignKeyColumnInvalidInterpreteType</Name>
								<GroupDescription />
								<Description templateId="4021">
									<InputParameters>
										<InputParameter id="1">columnIntrepeteType</InputParameter>
										<InputParameter id="0" value="Interprete/Type">tagName</InputParameter>
										<InputParameter id="2" value="foreign key column">itemSpecificType</InputParameter>
										<InputParameter id="3" value="string">allowedValues</InputParameter>
										<InputParameter id="4" value="FK column">itemKind</InputParameter>
										<InputParameter id="5" value="PID">idOrPid</InputParameter>
										<InputParameter id="6">fkColumnPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A column used as foreign key to a table should be of Interprete/Type 'string'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="8">
								<Name>ForeignKeyColumnInvalidMeasurementType</Name>
								<GroupDescription />
								<Description templateId="4021">
									<InputParameters>
										<InputParameter id="1">columnMeasurementType</InputParameter>
										<InputParameter id="0" value="Measurement/Type">tagName</InputParameter>
										<InputParameter id="2" value="foreign key column">itemSpecificType</InputParameter>
										<InputParameter id="3" value="string, number">allowedValues</InputParameter>
										<InputParameter id="4" value="FK column">itemKind</InputParameter>
										<InputParameter id="5" value="PID">idOrPid</InputParameter>
										<InputParameter id="6">fkColumnPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A column used as foreign key to a table should be of Measurement/Type 'string' or 'number'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="9">
								<Name>ForeignKeyColumnInvalidType</Name>
								<GroupDescription />
								<Description templateId="4021">
									<InputParameters>
										<InputParameter id="1">columnType</InputParameter>
										<InputParameter id="0" value="Param/Type">tagName</InputParameter>
										<InputParameter id="2" value="foreign key column">itemSpecificType</InputParameter>
										<InputParameter id="3" value="read">allowedValues</InputParameter>
										<InputParameter id="4" value="FK column">itemKind</InputParameter>
										<InputParameter id="5" value="PID">idOrPid</InputParameter>
										<InputParameter id="6">fkColumnPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A column used as foreign key to a table should be of Param/Type 'read'.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="39">
						<Name namespace="Protocol.Params.Param.ArrayOptions">CheckDisplayKey</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DuplicateDisplayKeyDefinition</Name>
								<GroupDescription />
								<Description>
									<Format>Table with ID '{0}' has multiple display key definitions.</Format>
									<InputParameters>
										<InputParameter id="0">tableId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[Only keep the most recent syntax of defining the display key.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[When defining the display key via multiple syntaxes, only the most recent syntax is actually used. List of syntaxes from most recent to oldest:[NewLine] - NamingFormat tag[NewLine] - Naming option (ex: options=;naming=/101)[NewLine] - displayColumn attribute[NewLine]]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>DisplayColumnSameAsPK</Name>
								<GroupDescription />
								<Description>
									<Format>DisplayColumn is the same as the primary key. Table PID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[Remove the displayColumn='' attribute.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The excessive displayColumn='' definition has no added value and bad impact on the performance.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>DisplayColumnUnrecommended</Name>
								<GroupDescription />
								<Description>
									<Format>Unrecommended use of displayColumn. Table PID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HowToFix><![CDATA[Replace the displayColumn attribute by the NamingFormat tag.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[It is preferred to define the display key via the NamingFormat tag.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>FormatChanged</Name>
								<GroupDescription />
								<Description>
									<Format>Table display key was changed from {0} '{1}' to {2} '{3}'. Table PID '{4}'.</Format>
									<InputParameters>
										<InputParameter id="0">oldSyntax</InputParameter>
										<InputParameter id="1">oldFormat</InputParameter>
										<InputParameter id="2">newSyntax</InputParameter>
										<InputParameter id="3">newFormat</InputParameter>
										<InputParameter id="4">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The display key of tables can be defined via 'ArrayOptions@option:naming' or via 'ArrayOptions/NamingFormat'.[NewLine]'ArrayOptions/NamingFormat' is the prefered way and going from one syntax to another has no breaking impact as long as the defined format is equivalent.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>FormatRemoved</Name>
								<GroupDescription />
								<Description>
									<Format>Table display key previously defined via '{0}' was removed. Table PID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">oldSyntax</InputParameter>
										<InputParameter id="1">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The display key of tables can be defined via 'ArrayOptions@option:naming' or via 'ArrayOptions/NamingFormat'.[NewLine]'ArrayOptions/NamingFormat' is the prefered way and going from one syntax to another has no breaking impact as long as the defined format is equivalent.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>DisplayKeyColumnInvalidInterpreteType</Name>
								<GroupDescription />
								<Description templateId="4021">
									<InputParameters>
										<InputParameter id="1">columnIntrepeteType</InputParameter>
										<InputParameter id="0" value="Interprete/Type">tagName</InputParameter>
										<InputParameter id="2" value="display key column">itemSpecificType</InputParameter>
										<InputParameter id="3" value="string">allowedValues</InputParameter>
										<InputParameter id="4" value="DK column">itemKind</InputParameter>
										<InputParameter id="5" value="PID">idOrPid</InputParameter>
										<InputParameter id="6">dkColumnPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A column used as table display key should be of Interprete/Type 'string'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>DisplayKeyColumnInvalidMeasurementType</Name>
								<GroupDescription />
								<Description templateId="4021">
									<InputParameters>
										<InputParameter id="1">columnMeasurementType</InputParameter>
										<InputParameter id="0" value="Measurement/Type">tagName</InputParameter>
										<InputParameter id="2" value="display key column">itemSpecificType</InputParameter>
										<InputParameter id="3" value="string, number">allowedValues</InputParameter>
										<InputParameter id="4" value="DK column">itemKind</InputParameter>
										<InputParameter id="5" value="PID">idOrPid</InputParameter>
										<InputParameter id="6">dkColumnPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A column used as table display key should be of Measurement/Type 'string' or 'number'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="8">
								<Name>DisplayKeyColumnInvalidType</Name>
								<GroupDescription />
								<Description templateId="4021">
									<InputParameters>
										<InputParameter id="1">columnType</InputParameter>
										<InputParameter id="0" value="Param/Type">tagName</InputParameter>
										<InputParameter id="2" value="display key column">itemSpecificType</InputParameter>
										<InputParameter id="3" value="read">allowedValues</InputParameter>
										<InputParameter id="4" value="DK column">itemKind</InputParameter>
										<InputParameter id="5" value="PID">idOrPid</InputParameter>
										<InputParameter id="6">dkColumnPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A column used as table display key should be of Param/Type 'read'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="9">
								<Name>DisplayKeyColumnMissing</Name>
								<GroupDescription />
								<Description>
									<Format>Missing column with ColumnOption@type="displaykey". Table PID {0}.</Format>
									<InputParameters>
										<InputParameter id="0">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[When defining display key format via ArrayOption/NamingFormat tag or via naming option in the ArrayOption@options attribute and the display key format does not only consist of a single column content, it is mandatory to add a displayed column with ColumnOption@type="displaykey" attribute value so that the full display key is available to the user.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="10">
								<Name>UnexpectedIdxSuffix</Name>
								<GroupDescription />
								<Description>
									<Format>Unexpected [IDX] suffix on Param/Description. Column Pid {0}.</Format>
									<InputParameters>
										<InputParameter id="0">columnPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The [IDX] suffix on column description is only expected on following columns:[NewLine]- Column included in table with ColumnOption@type="displaykey".[NewLine]- Column referred by the ArrayOption/NamingFormat of the containing table only when NamingFormat only consist of that column (no other column, no additional hard-coded bits).[NewLine]- Column referred by the naming option in the ArrayOption@options attribute of the containing table only when it only consist of that column (no other column).[NewLine]- Column referred by the (obsolete) ArrayOption@displayColumn attribute of the containing table.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="11">
								<Name>DuplicateDisplayKeyColumn</Name>
								<GroupDescription />
								<Description>
									<Format>Table has multiple ColumnOption tags with value 'displaykey' in type attribute. Table Pid {0}.</Format>
									<InputParameters>
										<InputParameter id="0">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A table should have, at most, 1 ColumnOption tag with its type attribute set to 'displaykey'.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="40">
						<Name namespace="Protocol.Params.Param.Interprete.Exceptions.Exception.Display">CheckDisplayTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>UnrecommendedNADisplayValue</Name>
								<GroupDescription />
								<Description>
									<Format>Unrecommended use of Exception Display '{0}' on Param '{1}'. Possible values '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">currentDisplay</InputParameter>
										<InputParameter id="1">paramPid</InputParameter>
										<InputParameter id="2">possibleValues</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>MissingTag</Name>
								<GroupDescription />
								<Description templateId="1001">
									<InputParameters>
										<InputParameter id="0" value="Exception/Display">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Exception tags should always contain a unique Display tag (user-friendly value) and a unique Value tag (internal value).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="Exception/Display">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Exception tags should always contain a unique Display tag (user-friendly value) and a unique Value tag (internal value).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>UntrimmedTag</Name>
								<GroupDescription />
								<Description templateId="3001">
									<InputParameters>
										<InputParameter id="0" value="Exception/Display">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Exception tags should always contain a unique Display tag (user-friendly value) and a unique Value tag (internal value).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>DuplicatedValue</Name>
								<GroupDescription />
								<Description templateId="6101">
									<InputParameters>
										<InputParameter id="0" value="Param">itemKind</InputParameter>
										<InputParameter id="1" value="Exception/Display">valueKind</InputParameter>
										<InputParameter id="2">duplicateValue</InputParameter>
										<InputParameter id="3">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Exception tags should always contain a unique Display tag (user-friendly value) and a unique Value tag (internal value).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>WrongCasing_Sub</Name>
								<GroupDescription />
								<Description templateId="11001">
									<InputParameters>
										<InputParameter id="0">currentValue</InputParameter>
										<InputParameter id="1">expectedValue</InputParameter>
										<InputParameter id="2" value="Param">itemKind</InputParameter>
										<InputParameter id="3" value="ID">idOrPid</InputParameter>
										<InputParameter id="4">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Exception/Display values should follow following title case rules:[NewLine]- Should start with a capital[NewLine]    - First and last word[NewLine]    - Important words (verbs, nouns, adjective, adverb, etc)[NewLine]- Should not start with a capital[NewLine]    - Articles (a, an, the)[NewLine]    - Coordinating conjuctions (and, but, for, nor, or, so, yet)[NewLine]    - Preposition with <4 chars (at, by, to...)]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>WrongCasing</Name>
								<GroupDescription />
								<Description templateId="12000">
									<InputParameters>
										<InputParameter id="0" value="Exception/Display">xmlElementPath</InputParameter>
										<InputParameter id="1" value="title casing">casingRule</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Exception/Display values should follow following title case rules:[NewLine]- Should start with a capital[NewLine]    - First and last word[NewLine]    - Important words (verbs, nouns, adjective, adverb, etc)[NewLine]- Should not start with a capital[NewLine]    - Articles (a, an, the)[NewLine]    - Coordinating conjuctions (and, but, for, nor, or, so, yet)[NewLine]    - Preposition with <4 chars (at, by, to...)]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="41">
						<Name namespace="Protocol.Params.Param.Measurement.Discreets">CheckMatrixDiscreets</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>InvalidDiscreetCount</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid number of Discreets '{0}' for matrix Param. Expected count '{1}'. Param ID '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">discreetCount</InputParameter>
										<InputParameter id="1">expectedDiscreetCount</InputParameter>
										<InputParameter id="2">matrixPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Make sure the number of discreets is equal to the number of inputs + outputs as defined in the Param/Type@options dimension.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[For matrix read parameters, the number of discreets should correspond to sum of the number of inputs and the number of outputs.[NewLine]Their values should be one-based and sequentially increasing by 1.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>MissingDiscreetValue</Name>
								<GroupDescription />
								<Description>
									<Format>Missing matrix Discreet values '{0}'. Param ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">missingValues</InputParameter>
										<InputParameter id="1">matrixPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Make sure Discreet values are sequentially incremented by 1.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[For matrix read parameters, the number of discreets should correspond to sum of the number of inputs and the number of outputs.[NewLine]Their values should be one-based and sequentially increasing by 1.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>DiscreetsNotOneBased</Name>
								<GroupDescription />
								<Description>
									<Format>Matrix Discreet values should be one-based. Param ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">matrixPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Make sure the first discreet value is 1.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[For matrix read parameters, the number of discreets should correspond to sum of the number of inputs and the number of outputs.[NewLine]Their values should be one-based and sequentially increasing by 1.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="42">
						<Name namespace="Protocol.Params.Param.Measurement.Type">CheckLinkAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>InvalidAttribute</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid syntax for 'Measurement/Type@link' attribute on matrix Param. Matrix PID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">matrixPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Make sure the value contains a valid file name including the .xml extension.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[This attribute causes an XML file to be created on the system. Make sure the value contains a valid file name including the .xml extension.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1101">
									<InputParameters>
										<InputParameter id="0" value="Measurement/Type@link">attributeName</InputParameter>
										<InputParameter id="1" value="matrix">type</InputParameter>
										<InputParameter id="2">matrixPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[Add link="XXXXXXXX.xml"]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[This attribute causes an XML file to be created on the system. Make sure the value contains a valid file name including the .xml extension.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="43">
						<Name namespace="Protocol.Params.Param.Display.Positions.Position.Row">CheckRowTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingTag</Name>
								<GroupDescription />
								<Description templateId="1001">
									<InputParameters>
										<InputParameter id="0" value="Position/Row">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="Position/Row">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidTag</Name>
								<GroupDescription />
								<Description templateId="4001">
									<InputParameters>
										<InputParameter id="0">tagValue</InputParameter>
										<InputParameter id="1" value="Position/Row">tagName</InputParameter>
										<InputParameter id="2" value="Param">itemKind</InputParameter>
										<InputParameter id="3">pid</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>UntrimmedTag</Name>
								<GroupDescription />
								<Description templateId="3001">
									<InputParameters>
										<InputParameter id="0" value="Position/Row">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="44">
						<Name namespace="Protocol.Params.Param.Display.Positions.Position.Column">CheckColumnTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingTag</Name>
								<GroupDescription />
								<Description templateId="1001">
									<InputParameters>
										<InputParameter id="0" value="Position/Column">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="Position/Column">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidTag</Name>
								<GroupDescription />
								<Description templateId="4011">
									<InputParameters>
										<InputParameter id="0" value="Position/Column">tagName</InputParameter>
										<InputParameter id="1">tagValue</InputParameter>
										<InputParameter id="2" value="0, 1">allowedValues</InputParameter>
										<InputParameter id="3" value="Param">itemKind</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
										<InputParameter id="5">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>UntrimmedTag</Name>
								<GroupDescription />
								<Description templateId="3001">
									<InputParameters>
										<InputParameter id="0" value="Position/Column">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>UnrecommendedValue</Name>
								<GroupDescription />
								<Description>
									<Format>Unrecommended use of more than 2 columns. Page '{0}'. Param IDs '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">pageName</InputParameter>
										<InputParameter id="1">paramIDs</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Uncertain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Skyline considers it good practice to use 1 column for pages containing tables and 2 columns for pages containing only standalone parameters.[NewLine]However, some exceptions can some times be made.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="45">
						<Name namespace="Protocol.Params.Param.Interprete.Others">CheckOthersTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>UpdateOtherId</Name>
								<GroupDescription />
								<Description>
									<Format>Id attribute '{0}' has been changed to '{1}' for Other tag with Value tag '{2}'. Param ID '{3}'.</Format>
									<InputParameters>
										<InputParameter id="0">oldId</InputParameter>
										<InputParameter id="1">newId</InputParameter>
										<InputParameter id="2">valueTag</InputParameter>
										<InputParameter id="3">paramPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Uncertain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>UpdateOtherDisplay</Name>
								<GroupDescription />
								<Description>
									<Format>Display tag '{0}' has been changed to '{1}' for Other tag with Value tag '{2}'. Param ID '{3}'.</Format>
									<InputParameters>
										<InputParameter id="0">oldDisplayTag</InputParameter>
										<InputParameter id="1">newDisplayTag</InputParameter>
										<InputParameter id="2">valueTag</InputParameter>
										<InputParameter id="3">paramPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Uncertain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>DeletedValue</Name>
								<GroupDescription />
								<Description>
									<Format>Other with Value tag '{0}' has been deleted. Param '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">oldValue</InputParameter>
										<InputParameter id="1">paramPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[If a value is removed from the Other tags, it will have impact on an alarm template for which that value was configured as a threshold value.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>AddedOthers</Name>
								<GroupDescription />
								<Description>
									<Format>Other with Value tag '{0}' has been added. Param '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">newValue</InputParameter>
										<InputParameter id="1">paramPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[If a new value is added to the Other tags and that value is withing the previously allowed range of values for that parameter, it might have an impact on configured alarm templates.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="46">
						<Name namespace="Protocol.Params.Param.ArrayOptions">CheckIndexAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1101">
									<InputParameters>
										<InputParameter id="0" value="index">attributeName</InputParameter>
										<InputParameter id="1" value="table">itemKind</InputParameter>
										<InputParameter id="2">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[Add the attribute with value 0.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The value should correspond to one of the column IDXs. '0' (corresponding to the first column) is the recommended value. The referred column should be of Interprete/Type 'string'.[NewLine]If the table is a logger table of type DirectConnection, the index needs to be '1'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="index">attributeName</InputParameter>
										<InputParameter id="1" value="table">itemKind</InputParameter>
										<InputParameter id="2">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[ Add the attribute with value 0.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The value should correspond to one of the column IDXs. '0' (corresponding to the first column) is the recommended value. The referred column should be of Interprete/Type 'string'.[NewLine]If the table is a logger table of type DirectConnection, the index needs to be '1'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidAttributeValue</Name>
								<GroupDescription />
								<Description templateId="10111">
									<InputParameters>
										<InputParameter id="0" value="index">attributeName</InputParameter>
										<InputParameter id="1" value="table">itemKind</InputParameter>
										<InputParameter id="2">tablePid</InputParameter>
										<InputParameter id="3">currentValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The value should correspond to one of the column IDXs. '0' (corresponding to the first column) is the recommended value. The referred column should be of Interprete/Type 'string'.[NewLine]If the table is a logger table of type DirectConnection, the index needs to be '1'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>NonExistingColumn</Name>
								<GroupDescription />
								<Description>
									<Format>Reference to non-existing column with IDX '{0}' in attribute 'index'. Table ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">indexValue</InputParameter>
										<InputParameter id="1">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The value should correspond to one of the column IDXs. '0' (corresponding to the first column) is the recommended value. The referred column should be of Interprete/Type 'string'.[NewLine]If the table is a logger table of type DirectConnection, the index needs to be '1'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>UnrecommendedValue</Name>
								<GroupDescription />
								<Description>
									<Format>Unrecommended value '{0}' in attribute 'index'. Recommended values '{2}'. Table ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">indexValue</InputParameter>
										<InputParameter id="1">tablePid</InputParameter>
										<InputParameter id="2">recommendedIndex</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The value should correspond to one of the column IDXs. '0' (corresponding to the first column) is the recommended value. The referred column should be of Interprete/Type 'string'.[NewLine]If the table is a logger table of type DirectConnection, the index needs to be '1'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3101">
									<InputParameters>
										<InputParameter id="0" value="index">attributeName</InputParameter>
										<InputParameter id="1" value="table">itemKind</InputParameter>
										<InputParameter id="2">tablePid</InputParameter>
										<InputParameter id="3">untrimmedIndex</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The value should correspond to one of the column IDXs. '0' (corresponding to the first column) is the recommended value. The referred column should be of Interprete/Type 'string'.[NewLine]If the table is a logger table of type DirectConnection, the index needs to be '1'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>InvalidColumnInterpreteType</Name>
								<GroupDescription />
								<Description templateId="4021">
									<InputParameters>
										<InputParameter id="1">columnIntrepeteType</InputParameter>
										<InputParameter id="0" value="Interprete/Type">tagName</InputParameter>
										<InputParameter id="2" value="primary key column">itemSpecificType</InputParameter>
										<InputParameter id="3" value="string">allowedValues</InputParameter>
										<InputParameter id="4" value="PK column">itemKind</InputParameter>
										<InputParameter id="5" value="PID">idOrPid</InputParameter>
										<InputParameter id="6">pkColumnPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The column used as primary key of a table should be of Interprete/Type 'string'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="8">
								<Name>InvalidColumnMeasurementType</Name>
								<GroupDescription />
								<Description templateId="4021">
									<InputParameters>
										<InputParameter id="1">columnMeasurementType</InputParameter>
										<InputParameter id="0" value="Measurement/Type">tagName</InputParameter>
										<InputParameter id="2" value="primary key column">itemSpecificType</InputParameter>
										<InputParameter id="3" value="string, number">allowedValues</InputParameter>
										<InputParameter id="4" value="PK column">itemKind</InputParameter>
										<InputParameter id="5" value="PID">idOrPid</InputParameter>
										<InputParameter id="6">pkColumnPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The column used as primary key of a table should be of Mesurement/Type 'string' or 'number'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="9">
								<Name>InvalidColumnType</Name>
								<GroupDescription />
								<Description templateId="4021">
									<InputParameters>
										<InputParameter id="1">columnType</InputParameter>
										<InputParameter id="0" value="Param/Type">tagName</InputParameter>
										<InputParameter id="2" value="primary key column">itemSpecificType</InputParameter>
										<InputParameter id="3" value="read">allowedValues</InputParameter>
										<InputParameter id="4" value="PK column">itemKind</InputParameter>
										<InputParameter id="5" value="PID">idOrPid</InputParameter>
										<InputParameter id="6">pkColumnPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The column used as primary key of a table should be of Param/Type 'read'.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="47">
						<Name namespace="Protocol.Params.Param.SNMP.OID">CheckOidTagIdAttrCombo</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>ExcessiveAttribute</Name>
								<GroupDescription />
								<Description templateId="10101">
									<InputParameters>
										<InputParameter id="0" value="SNMP/OID@id">attributeName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2" value="">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The SNMP/OID@id attribute needs to refer to a standalone read Param and can be used in following situations:[NewLine]- Subtables: the id should refer to a parameter that will allow to filter on the list of instances to be polled.[NewLine]- Tables with filtered rows: each column should contain an id attribute that refers to a parameter that will allow to filter on the instances to be polled.[NewLine]- Dynamic OID: the id should refer to a parameter that will allow to dynamically define the full OID.[NewLine]Except for subtables, the id attribute only makes sense in case a wildcard is present in the OID tag value.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>InvalidCombo</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid combination of OID value '{0}' and SNMP/OID@id value '{1}' in Param '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">oidValue</InputParameter>
										<InputParameter id="1">idValue</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The SNMP/OID@id attribute needs to refer to a standalone read Param and can be used in following situations:[NewLine]- Subtables: the id should refer to a parameter that will allow to filter on the list of instances to be polled.[NewLine]- Tables with filtered rows: each column should contain an id attribute that refers to a parameter that will allow to filter on the instances to be polled.[NewLine]- Dynamic OID: the id should refer to a parameter that will allow to dynamically define the full OID.[NewLine]Except for subtables, the id attribute only makes sense in case a wildcard is present in the OID tag value.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="48">
						<Name namespace="Protocol.Params.Param.SNMP.OID">CheckIdAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="SNMP/OID@id">attributeName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2" value="">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The SNMP/OID@id attribute needs to refer to a standalone read or bus Param and can be used in following situations:[NewLine]- Subtables: the id should refer to a parameter that will allow to filter on the list of instances to be polled.[NewLine]- Tables with filtered rows: each column should contain an id attribute that refers to a parameter that will allow to filter on the instances to be polled.[NewLine]- Dynamic OID: the id should refer to a parameter that will allow to dynamically define the full OID.[NewLine]Except for subtables, the id attribute only makes sense in case a wildcard is present in the OID tag value.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>InvalidAttributeValue</Name>
								<GroupDescription />
								<Description templateId="10111">
									<InputParameters>
										<InputParameter id="0" value="SNMP/OID@id">attributeName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2" value="">pid</InputParameter>
										<InputParameter id="3" value="">currentValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The SNMP/OID@id attribute needs to refer to a standalone read or bus Param and can be used in following situations:[NewLine]- Subtables: the id should refer to a parameter that will allow to filter on the list of instances to be polled.[NewLine]- Tables with filtered rows: each column should contain an id attribute that refers to a parameter that will allow to filter on the instances to be polled.[NewLine]- Dynamic OID: the id should refer to a parameter that will allow to dynamically define the full OID.[NewLine]Except for subtables, the id attribute only makes sense in case a wildcard is present in the OID tag value.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>NonExistingParam</Name>
								<GroupDescription />
								<Description templateId="7101">
									<InputParameters>
										<InputParameter id="0" value="SNMP/OID@id">attributeName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">referencedPid</InputParameter>
										<InputParameter id="4" value="Param">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The SNMP/OID@id attribute needs to refer to a standalone read or bus Param and can be used in following situations:[NewLine]- Subtables: the id should refer to a parameter that will allow to filter on the list of instances to be polled.[NewLine]- Tables with filtered rows: each column should contain an id attribute that refers to a parameter that will allow to filter on the instances to be polled.[NewLine]- Dynamic OID: the id should refer to a parameter that will allow to dynamically define the full OID.[NewLine]Except for subtables, the id attribute only makes sense in case a wildcard is present in the OID tag value.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>UnsupportedParam</Name>
								<GroupDescription />
								<Description>
									<Format>Unsupported Param '{0}' reference in attribute 'SNMP/OID@id' in Param '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">idAttributeValue</InputParameter>
										<InputParameter id="1">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Refer to a standalone read param.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The SNMP/OID@id attribute needs to refer to a standalone read or bus Param and can be used in following situations:[NewLine]- Subtables: the id should refer to a parameter that will allow to filter on the list of instances to be polled.[NewLine]- Tables with filtered rows: each column should contain an id attribute that refers to a parameter that will allow to filter on the instances to be polled.[NewLine]- Dynamic OID: the id should refer to a parameter that will allow to dynamically define the full OID.[NewLine]Except for subtables, the id attribute only makes sense in case a wildcard is present in the OID tag value.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3101">
									<InputParameters>
										<InputParameter id="0" value="SNMP/OID@id">attributeName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2" value="">pid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The SNMP/OID@id attribute needs to refer to a standalone read or bus Param and can be used in following situations:[NewLine]- Subtables: the id should refer to a parameter that will allow to filter on the list of instances to be polled.[NewLine]- Tables with filtered rows: each column should contain an id attribute that refers to a parameter that will allow to filter on the instances to be polled.[NewLine]- Dynamic OID: the id should refer to a parameter that will allow to dynamically define the full OID.[NewLine]Except for subtables, the id attribute only makes sense in case a wildcard is present in the OID tag value.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="49">
						<Name namespace="Protocol.Params.Param.Message">CheckMessageTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingTag</Name>
								<GroupDescription />
								<Description templateId="1001">
									<InputParameters>
										<InputParameter id="0" value="Param/Message">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>BubbleUp</Severity>
								<Certainty>Uncertain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[<Message>Are you sure you want to restart the device?</Message>]]></ExampleCode>
								<Details><![CDATA[A button executing a critical action should have a confirmation message.[NewLine]This can be done by adding a 'Param/Message' tag.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>MissingTag_Sub</Name>
								<GroupDescription />
								<Description>
									<Format>Missing tag 'Param/Message' for button with caption '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">discreetDisplayValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Uncertain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[<Message>Are you sure you want to restart the device?</Message>]]></ExampleCode>
								<Details><![CDATA[A button executing a critical action should have a confirmation message.[NewLine]This can be done by adding a 'Param/Message' tag.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="50">
						<Name namespace="Protocol.Params.Param.Measurement.Discreets.Discreet">CheckOptionsAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MisconfiguredConfirmOptions</Name>
								<GroupDescription />
								<Description>
									<Format>Misconfigured 'confirm' option(s) in 'Discreet@options' for ContextMenu. Param ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>BubbleUp</Severity>
								<Certainty>Uncertain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[<Discreet options="confirm:The selected item(s) will be deleted permanently.">[NewLine]    <Display>Delete selected row(s)</Display>[NewLine]    <Value>delete</Value>[NewLine]</Discreet>]]></ExampleCode>
								<Details><![CDATA[A context menu action executing a critical action should have a confirmation message.[NewLine]This can be done by adding the confirm option via the 'Discreet@options' attribute.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>MissingConfirmOption</Name>
								<GroupDescription />
								<Description templateId="1211">
									<InputParameters>
										<InputParameter id="0" value="confirm">valueName</InputParameter>
										<InputParameter id="1" value="Discreet@options">attributeName</InputParameter>
										<InputParameter id="2" value="context-menu item">itemKind</InputParameter>
										<InputParameter id="3">contextMenuItem</InputParameter>
										<InputParameter id="4" value="Param">componentKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPid</InputParameter>
										<InputParameter id="6">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Uncertain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[<Discreet options="confirm:The selected item(s) will be deleted permanently.">[NewLine]    <Display>Delete selected row(s)</Display>[NewLine]    <Value>delete</Value>[NewLine]</Discreet>]]></ExampleCode>
								<Details><![CDATA[A context menu action executing a critical action should have a confirmation message.[NewLine]This can be done by adding the confirm option via the 'Discreet@options' attribute.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>EmptyConfirmOption</Name>
								<GroupDescription />
								<Description templateId="2211">
									<InputParameters>
										<InputParameter id="0" value="confirm">valueName</InputParameter>
										<InputParameter id="1" value="Discreet@options">attributeName</InputParameter>
										<InputParameter id="2" value="context-menu item">itemKind</InputParameter>
										<InputParameter id="3">contextMenuItem</InputParameter>
										<InputParameter id="4" value="Param">componentKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPid</InputParameter>
										<InputParameter id="6">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[<Discreet options="confirm:The selected item(s) will be deleted permanently.">[NewLine]    <Display>Delete selected row(s)</Display>[NewLine]    <Value>delete</Value>[NewLine]</Discreet>]]></ExampleCode>
								<Details><![CDATA[A context menu action executing a critical action should have a confirmation message.[NewLine]This can be done by adding the confirm option via the 'Discreet@options' attribute.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>UntrimmedConfirmOption</Name>
								<GroupDescription />
								<Description templateId="3211">
									<InputParameters>
										<InputParameter id="0" value="confirm">valueName</InputParameter>
										<InputParameter id="1" value="Discreet@options">attributeName</InputParameter>
										<InputParameter id="2" value="context-menu item">itemKind</InputParameter>
										<InputParameter id="3">contextMenuItem</InputParameter>
										<InputParameter id="4" value="Param">componentKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPid</InputParameter>
										<InputParameter id="6">pid</InputParameter>
										<InputParameter id="7">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[<Discreet options="confirm:The selected item(s) will be deleted permanently.">[NewLine]    <Display>Delete selected row(s)</Display>[NewLine]    <Value>delete</Value>[NewLine]</Discreet>]]></ExampleCode>
								<Details><![CDATA[A context menu action executing a critical action should have a confirmation message.[NewLine]This can be done by adding the confirm option via the 'Discreet@options' attribute.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="51">
						<Name namespace="Protocol.Params.Param.Measurement.Discreets">CheckDiscreetsTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingTag</Name>
								<GroupDescription />
								<Description templateId="1020">
									<InputParameters>
										<InputParameter id="0" value="Measurement/Discreets">tagName</InputParameter>
										<InputParameter id="1">paramDisplayType</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Button, pagebutton and discreet parameters should always have the Discreets tag.[NewLine]Additionally, Discreets tags should always have at least one of the following:[NewLine]- Discreet tag(s)[NewLine]- dependencyId attribute.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="52">
						<Name namespace="Protocol.Params.Param.Measurement.Discreets.Discreet">CheckDiscreetTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingTag</Name>
								<GroupDescription />
								<Description>
									<Format>Missing 'Discreet' tag(s) in 'Measurement/Discreets' tag. Param ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Discreets tags should always have at least one of the following:[NewLine]- Discreet tag(s)[NewLine]- dependencyId attribute.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="53">
						<Name namespace="Protocol.Params.Param.Name">CheckColumnNames</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingTableNameAsPrefixes</Name>
								<GroupDescription />
								<Description>
									<Format>Missing table name '{0}' in front of column names. Table PID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">tableName</InputParameter>
										<InputParameter id="1">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The name of column parameters should start with the name of the table they belong to.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>MissingTableNameAsPrefix</Name>
								<GroupDescription />
								<Description>
									<Format>Missing table name '{0}' in front of column name '{1}'. Column PID '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">tableName</InputParameter>
										<InputParameter id="1">columnName</InputParameter>
										<InputParameter id="2">columnPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The name of column parameters should start with the name of the table they belong to.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="54">
						<Name namespace="Protocol.Params.Param.Measurement.Discreets">CheckDependencyId</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="Discreets@dependencyId">attributeName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Discreets@dependencyId attribute should contain the ID of a Param.[NewLine]The referenced Param is expected to:[NewLine]- Be of type 'read' or 'read bit'.[NewLine]- Have RTDisplay tag set to 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3101">
									<InputParameters>
										<InputParameter id="0" value="Discreets@dependencyId">attributeName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Discreets@dependencyId attribute should contain the ID of a Param.[NewLine]The referenced Param is expected to:[NewLine]- Be of type 'read' or 'read bit'.[NewLine]- Have RTDisplay tag set to 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4101">
									<InputParameters>
										<InputParameter id="0" value="Discreets@dependencyId">attributeName</InputParameter>
										<InputParameter id="1">attributeValue</InputParameter>
										<InputParameter id="2" value="Param">itemKind</InputParameter>
										<InputParameter id="3">pid</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Discreets@dependencyId attribute should contain the ID of a Param.[NewLine]The referenced Param is expected to:[NewLine]- Be of type 'read' or 'read bit'.[NewLine]- Have RTDisplay tag set to 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7101">
									<InputParameters>
										<InputParameter id="0" value="Discreets@dependencyId">attributeName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">referencedPid</InputParameter>
										<InputParameter id="4" value="Param">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Discreets@dependencyId attribute should contain the ID of a Param.[NewLine]The referenced Param is expected to:[NewLine]- Be of type 'read' or 'read bit'.[NewLine]- Have RTDisplay tag set to 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>ReferencedParamWrongType</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid Param Type '{0}' on Param referenced by a 'Discreets@dependencyId' attribute. Param ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">referencedParamType</InputParameter>
										<InputParameter id="1">referencedPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Discreets@dependencyId attribute should contain the ID of a Param.[NewLine]The referenced Param is expected to:[NewLine]- Be of type 'read' or 'read bit'.[NewLine]- Have RTDisplay tag set to 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>ReferencedParamRTDisplayExpected</Name>
								<GroupDescription />
								<Description>
									<Format>RTDisplay(true) expected on Param '{0}' referenced by a 'Discreets@dependencyId' attribute. Param ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">referencedPid</InputParameter>
										<InputParameter id="1">referencingPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Discreets@dependencyId attribute should contain the ID of a Param.[NewLine]The referenced Param is expected to:[NewLine]- Be of type 'read' or 'read bit'.[NewLine]- Have RTDisplay tag set to 'true'.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="55">
						<Name namespace="Protocol.Params.Param.SNMP.TrapOID">CheckMapAlarmAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="SNMP/TrapOID@mapAlarm">attributeName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3101">
									<InputParameters>
										<InputParameter id="0" value="SNMP/TrapOID@mapAlarm">attributeName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>RTDisplayExpected</Name>
								<GroupDescription />
								<Description>
									<Format>RTDisplay(true) expected on Param '{0}' generating alarms based on traps.</Format>
									<InputParameters>
										<InputParameter id="0">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['Param/SNMP/TrapOID@mapAlarm' attribute of a Param starts with 'TRUE' when the param is expected to generate alarm or information event on received traps.[NewLine]Such feature requires the parameter RTDisplay tag set to 'true'.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="56">
						<Name namespace="Protocol.Params">CheckLoadSequenceAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2100">
									<InputParameters>
										<InputParameter id="0" value="Params@loadSequence">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['Params@loadSequence' expects a semicolon separated list of Param IDs allowing to define the order in which saved parameter values are loaded in SLElement.[NewLine]Referenced parameters are expected to:[NewLine]- Have the save attribute set to 'true'[NewLine]- Have the RTDisplay tag set to 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3100">
									<InputParameters>
										<InputParameter id="0" value="Params@loadSequence">attributeName</InputParameter>
										<InputParameter id="1">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['Params@loadSequence' expects a semicolon separated list of Param IDs allowing to define the order in which saved parameter values are loaded in SLElement.[NewLine]Referenced parameters are expected to:[NewLine]- Have the save attribute set to 'true'[NewLine]- Have the RTDisplay tag set to 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7100">
									<InputParameters>
										<InputParameter id="0" value="Params">tagName</InputParameter>
										<InputParameter id="1" value="loadSequence">attributeName</InputParameter>
										<InputParameter id="2" value="Param">referenceKind</InputParameter>
										<InputParameter id="3" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="4">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['Params@loadSequence' expects a semicolon separated list of Param IDs allowing to define the order in which saved parameter values are loaded in SLElement.[NewLine]Referenced parameters are expected to:[NewLine]- Have the save attribute set to 'true'[NewLine]- Have the RTDisplay tag set to 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>ReferencedParamSaveExpected</Name>
								<GroupDescription />
								<Description>
									<Format>Param '{0}' referenced by 'Params@loadSequence' attribute is expected to be saved.</Format>
									<InputParameters>
										<InputParameter id="0">referencedPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['Params@loadSequence' expects a semicolon separated list of Param IDs allowing to define the order in which saved parameter values are loaded in SLElement.[NewLine]Referenced parameters are expected to:[NewLine]- Have the save attribute set to 'true'[NewLine]- Have the RTDisplay tag set to 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>ReferencedParamRTDisplayExpected</Name>
								<GroupDescription />
								<Description>
									<Format>RTDisplay(true) expected on Param '{0}' referenced by 'Params@loadSequence' attribute.</Format>
									<InputParameters>
										<InputParameter id="0">referencedPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['Params@loadSequence' expects a semicolon separated list of Param IDs allowing to define the order in which saved parameter values are loaded in SLElement.[NewLine]Referenced parameters are expected to:[NewLine]- Have the save attribute set to 'true'[NewLine]- Have the RTDisplay tag set to 'true'.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="57">
						<Name namespace="Protocol.Params.Param.Display.Positions">CheckPositionsTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="1001">
									<InputParameters>
										<InputParameter id="0" value="Display/Positions">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A 'Display/Positions' should always have, at least, one Position tag.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>RTDisplayExpected</Name>
								<GroupDescription />
								<Description>
									<Format>RTDisplay(true) expected on Param '{0}' which is positioned.</Format>
									<InputParameters>
										<InputParameter id="0">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A positioned Param (with Display/Positions tag) requires its RTDisplay to be set to true in order to be properly displayed.[NewLine]Note that an exception to this rule can be made when a Param is only meant to be displayed on a DVE protocol and not on the main one.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="58">
						<Name namespace="Protocol.Params.Param.Type">CheckVirtualAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="Type@virtual">attributeName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3101">
									<InputParameters>
										<InputParameter id="0" value="Type@virtual">attributeName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>RTDisplayExpected</Name>
								<GroupDescription />
								<Description>
									<Format>RTDisplay(true) expected on parameters used as virtual source. Param ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="59">
						<Name namespace="Protocol.Params.Param.Measurement.Discreets.Discreet">CheckDependencyValuesAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="Discreet@dependencyValues">attributeName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Discreet@dependencyValues attribute can be used in 2 scenarios:[NewLine]- In combination with Discreets@dependencyId attribute.[NewLine]- On a table contextMenu Param.[NewLine]    - All referenced Params then require their RTDisplay tag to be set to true.[NewLine][NewLine]See the guides for more info.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3101">
									<InputParameters>
										<InputParameter id="0" value="Discreet@dependencyValues">attributeName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Discreet@dependencyValues attribute can be used in 2 scenarios:[NewLine]- In combination with Discreets@dependencyId attribute.[NewLine]- On a table contextMenu Param.[NewLine]    - All referenced Params then require their RTDisplay tag to be set to true.[NewLine][NewLine]See the guides for more info.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7101">
									<InputParameters>
										<InputParameter id="0" value="Discreet@dependencyValues">attributeName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">referencePid</InputParameter>
										<InputParameter id="4" value="Param">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Discreet@dependencyValues attribute can be used in 2 scenarios:[NewLine]- In combination with Discreets@dependencyId attribute.[NewLine]- On a table contextMenu Param.[NewLine]    - All referenced Params then require their RTDisplay tag to be set to true.[NewLine][NewLine]See the guides for more info.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>ReferencedParamExpectingRTDisplay</Name>
								<GroupDescription />
								<Description>
									<Format>RTDisplay(true) expected on Param '{0}' referenced in 'Discreet@dependencyValues' attribute. Param ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">referencePid</InputParameter>
										<InputParameter id="1">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Discreet@dependencyValues attribute can be used in 2 scenarios:[NewLine]- In combination with Discreets@dependencyId attribute.[NewLine]- On a table contextMenu Param.[NewLine]    - All referenced Params then require their RTDisplay tag to be set to true.[NewLine][NewLine]See the guides for more info.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="60">
						<Name namespace="Protocol.Params.Param.Display">CheckDisplayTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="1001">
									<InputParameters>
										<InputParameter id="0" value="Display">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A 'Param/Display' should always contain, at least, one child tag.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="61">
						<Name namespace="Protocol.Params.Param.Type">CheckTypeTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingTag</Name>
								<GroupDescription />
								<Description templateId="1001">
									<InputParameters>
										<InputParameter id="0" value="Param/Type">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[All parameters must have a properly filled-in 'Param/Type' tag.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="Param/Type">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[All parameters must have a properly filled-in 'Param/Type' tag.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedTag</Name>
								<GroupDescription />
								<Description templateId="3001">
									<InputParameters>
										<InputParameter id="0" value="Param/Type">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[All parameters must have a properly filled-in 'Param/Type' tag.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4001">
									<InputParameters>
										<InputParameter id="0">tagValue</InputParameter>
										<InputParameter id="1" value="Param/Type">tagName</InputParameter>
										<InputParameter id="2" value="Param">itemKind</InputParameter>
										<InputParameter id="3">pid</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[All parameters must have a properly filled-in 'Param/Type' tag.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="62">
						<Name namespace="Protocol.Params.Param.Type">CheckIdAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="Type@id">attributeName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Depending on the Param.Type tag value, this attribute should refer to an existing protocol items:[NewLine]- read bit: ID of the corresponding group param (mandatory).[NewLine]- write bit: ID of the corresponding group param (mandatory).[NewLine]- response: ID of the response responsible to further parse the value of this param (mandatory).[NewLine]- array: Semi-column list of column Param IDs (optional: depends on the type of table and the presence of ArrayOptions/ColumnOptions tags).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3101">
									<InputParameters>
										<InputParameter id="0" value="Type@id">attributeName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Depending on the Param.Type tag value, this attribute should refer to an existing protocol items:[NewLine]- read bit: ID of the corresponding group param (mandatory).[NewLine]- write bit: ID of the corresponding group param (mandatory).[NewLine]- response: ID of the response responsible to further parse the value of this param (mandatory).[NewLine]- array: Semi-column list of column Param IDs (optional: depends on the type of table and the presence of ArrayOptions/ColumnOptions tags).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>NonExistingParam</Name>
								<GroupDescription />
								<Description templateId="7101">
									<InputParameters>
										<InputParameter id="0" value="Type@id">attributeName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">referencedPid</InputParameter>
										<InputParameter id="4" value="Param">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Depending on the Param.Type tag value, this attribute should refer to an existing protocol items:[NewLine]- read bit: ID of the corresponding group param (mandatory).[NewLine]- write bit: ID of the corresponding group param (mandatory).[NewLine]- response: ID of the response responsible to further parse the value of this param (mandatory).[NewLine]- array: Semi-column list of column Param IDs (optional: depends on the type of table and the presence of ArrayOptions/ColumnOptions tags).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>NonExistingResponse</Name>
								<GroupDescription />
								<Description templateId="7101">
									<InputParameters>
										<InputParameter id="0" value="Type@id">attributeName</InputParameter>
										<InputParameter id="1" value="Response">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">responseId</InputParameter>
										<InputParameter id="4" value="Param">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Depending on the Param.Type tag value, this attribute should refer to an existing protocol items:[NewLine]- read bit: ID of the corresponding group param (mandatory).[NewLine]- write bit: ID of the corresponding group param (mandatory).[NewLine]- response: ID of the response responsible to further parse the value of this param (mandatory).[NewLine]- array: Semi-column list of column Param IDs (optional: depends on the type of table and the presence of ArrayOptions/ColumnOptions tags).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>NonExistingColumn</Name>
								<GroupDescription />
								<Description templateId="7101">
									<InputParameters>
										<InputParameter id="0" value="Type@id">attributeName</InputParameter>
										<InputParameter id="1" value="Column">referenceKind</InputParameter>
										<InputParameter id="2" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="3">columnPid</InputParameter>
										<InputParameter id="4" value="Param">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Depending on the Param.Type tag value, this attribute should refer to an existing protocol items:[NewLine]- read bit: ID of the corresponding group param (mandatory).[NewLine]- write bit: ID of the corresponding group param (mandatory).[NewLine]- response: ID of the response responsible to further parse the value of this param (mandatory).[NewLine]- array: Semi-column list of column Param IDs (optional: depends on the type of table and the presence of ArrayOptions/ColumnOptions tags).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1111">
									<InputParameters>
										<InputParameter id="0" value="Type@id">attributeName</InputParameter>
										<InputParameter id="1" value="Param/Type">reasonTitle</InputParameter>
										<InputParameter id="2">paramType</InputParameter>
										<InputParameter id="3" value="Param">itemKind</InputParameter>
										<InputParameter id="4" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="5">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Depending on the Param.Type tag value, this attribute should refer to an existing protocol items:[NewLine]- read bit: ID of the corresponding group param (mandatory).[NewLine]- write bit: ID of the corresponding group param (mandatory).[NewLine]- response: ID of the response responsible to further parse the value of this param (mandatory).[NewLine]- array: Semi-column list of column Param IDs (optional: depends on the type of table and the presence of ArrayOptions/ColumnOptions tags).]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="63">
						<Name namespace="Protocol.Params.Param.ArrayOptions.ColumnOption">CheckPidAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1101">
									<InputParameters>
										<InputParameter id="0" value="ColumnOption@pid">attributeName</InputParameter>
										<InputParameter id="1" value="table">itemKind</InputParameter>
										<InputParameter id="2">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The ColumnOption@pid attribute is mandatory and should be filled in with the ID of an existing column Param.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="ColumnOption@pid">attributeName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The ColumnOption@pid attribute is mandatory and should be filled in with the ID of an existing column Param.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3101">
									<InputParameters>
										<InputParameter id="0" value="ColumnOption@pid">attributeName</InputParameter>
										<InputParameter id="1" value="Table">itemKind</InputParameter>
										<InputParameter id="2">tablePid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The ColumnOption@pid attribute is mandatory and should be filled in with the ID of an existing column Param.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>NonExistingParam</Name>
								<GroupDescription />
								<Description templateId="7101">
									<InputParameters>
										<InputParameter id="0" value="ColumnOption@pid">attributeName</InputParameter>
										<InputParameter id="1" value="column">referenceKind</InputParameter>
										<InputParameter id="2" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="3">columnPid</InputParameter>
										<InputParameter id="4" value="Table">itemKind</InputParameter>
										<InputParameter id="5" value="PID">idOrPidForItem</InputParameter>
										<InputParameter id="6">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The ColumnOption@pid attribute is mandatory and should be filled in with the ID of an existing column Param.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="64">
						<Name namespace="Protocol.Params.Param">CheckColumns</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>ColumnInvalidType</Name>
								<GroupDescription />
								<Description templateId="4021">
									<InputParameters>
										<InputParameter id="1">columnType</InputParameter>
										<InputParameter id="0" value="Param/Type">tagName</InputParameter>
										<InputParameter id="2" value="column">itemSpecificType</InputParameter>
										<InputParameter id="3" value="read, write, group, read bit, write bit">allowedValues</InputParameter>
										<InputParameter id="4" value="Column">itemKind</InputParameter>
										<InputParameter id="5" value="PID">idOrPid</InputParameter>
										<InputParameter id="6">columnPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A column should be of Param/Type 'read', 'write', 'group', 'read bit' or 'write bit'.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="65">
						<Name namespace="Protocol.Params.Param.ArrayOptions.NamingFormat">CheckNamingFormatTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="ArrayOptions/NamingFormat">tagName</InputParameter>
										<InputParameter id="1" value="Table">itemKind</InputParameter>
										<InputParameter id="2">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['ArrayOptions/NamingFormat' tag should start by a separator followed by a separated list of display key parts.[NewLine]- Numeric parts will be considered as dynamic display key parts and should refer to an existing Param.[NewLine]- Non-Numeric parts will be considered as hard-coded display key parts.[NewLine][NewLine]NamingFormat should contain, at least, 1 dynamic part.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>UntrimmedTag</Name>
								<GroupDescription />
								<Description templateId="3001">
									<InputParameters>
										<InputParameter id="0" value="ArrayOptions/NamingFormat">tagName</InputParameter>
										<InputParameter id="1" value="Table">itemKind</InputParameter>
										<InputParameter id="2">tablePid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['ArrayOptions/NamingFormat' tag should start by a separator followed by a separated list of display key parts.[NewLine]- Numeric parts will be considered as dynamic display key parts and should refer to an existing Param.[NewLine]- Non-Numeric parts will be considered as hard-coded display key parts.[NewLine][NewLine]NamingFormat should contain, at least, 1 dynamic part.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>NonExistingParam</Name>
								<GroupDescription />
								<Description templateId="7001">
									<InputParameters>
										<InputParameter id="0" value="ArrayOptions/NamingFormat">tagName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">referencedPid</InputParameter>
										<InputParameter id="4" value="Table">itemKind</InputParameter>
										<InputParameter id="5" value="PID">idOrPidForItem</InputParameter>
										<InputParameter id="6">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['ArrayOptions/NamingFormat' tag should start by a separator followed by a separated list of display key parts.[NewLine]- Numeric parts will be considered as dynamic display key parts and should refer to an existing Param.[NewLine]- Non-Numeric parts will be considered as hard-coded display key parts.[NewLine][NewLine]NamingFormat should contain, at least, 1 dynamic part.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>MissingDynamicPart</Name>
								<GroupDescription />
								<Description>
									<Format>Missing dynamic part(s) in 'ArrayOptions/NamingFormat' tag. Table PID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="1">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['ArrayOptions/NamingFormat' tag should start by a separator followed by a separated list of display key parts.[NewLine]- Numeric parts will be considered as dynamic display key parts and should refer to an existing Param.[NewLine]- Non-Numeric parts will be considered as hard-coded display key parts.[NewLine][NewLine]NamingFormat should contain, at least, 1 dynamic part.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="66">
						<Name namespace="Protocol.Params.Param.Information.Includes">CheckIncludesTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>ObsoleteTag</Name>
								<GroupDescription />
								<Description templateId="14001">
									<InputParameters>
										<InputParameter id="0" value="Information/Includes">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="1" value="ID">idOrPid</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['Information/Includes' tag was only used in the past by SystemDisplay. Today, it is considered obsolete.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="67">
						<Name namespace="Protocol.Params.Param.Dependencies.Id">CheckIdTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="1001">
									<InputParameters>
										<InputParameter id="0" value="Dependencies/Id">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A 'Dependencies/Id' tag should contain the ID of an existing Param. Both the referencing and the referenced Param should have their RTDisplay tag set to 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>UntrimmedTag</Name>
								<GroupDescription />
								<Description templateId="3001">
									<InputParameters>
										<InputParameter id="0" value="Dependencies/Id">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A 'Dependencies/Id' tag should contain the ID of an existing Param. Both the referencing and the referenced Param should have their RTDisplay tag set to 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7101">
									<InputParameters>
										<InputParameter id="0" value="Dependencies/Id">attributeName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">referencedPid</InputParameter>
										<InputParameter id="4" value="Param">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A 'Dependencies/Id' tag should contain the ID of an existing Param. Both the referencing and the referenced Param should have their RTDisplay tag set to 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>RTDisplayExpected</Name>
								<GroupDescription />
								<Description>
									<Format>RTDisplay(true) expected on Param '{0}' containing 'Dependencies/Id' tag(s).</Format>
									<InputParameters>
										<InputParameter id="0">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A 'Dependencies/Id' tag should contain the ID of an existing Param. Both the referencing and the referenced Param should have their RTDisplay tag set to 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>RTDisplayExpectedOnReferencedParam</Name>
								<GroupDescription />
								<Description>
									<Format>RTDisplay(true) expected on Param '{0}' referenced by a 'Dependencies/Id' tag. Param ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">referencedPid</InputParameter>
										<InputParameter id="1">referencingPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A 'Dependencies/Id' tag should contain the ID of an existing Param. Both the referencing and the referenced Param should have their RTDisplay tag set to 'true'.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="68">
						<Name namespace="Protocol.Params.Param.Interprete.DefaultValue">CheckDefaultValueTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>UnsupportedTag</Name>
								<GroupDescription />
								<Description templateId="10001">
									<InputParameters>
										<InputParameter id="0" value="DefaultValue">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Interprete/DefaultValue tag allows to give a default value to a parameter.[NewLine]This is currently only supported on standalone read parameters and the given value should be compatible with the Inteprete/Type.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>NotYetSupportedTag</Name>
								<GroupDescription />
								<Description templateId="10001">
									<InputParameters>
										<InputParameter id="0" value="DefaultValue">tagName</InputParameter>
										<InputParameter id="1" value="Column">itemKind</InputParameter>
										<InputParameter id="2">columnPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Interprete/DefaultValue tag allows to give a default value to a parameter.[NewLine]This is currently only supported on standalone read parameters and the given value should be compatible with the Inteprete/Type.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>ValueIncompatibleWithInterpreteType</Name>
								<GroupDescription />
								<Description>
									<Format>Interprete/DefaultValue '{0}' is incompatible with Interprete/Type '{1}'. Param ID '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">defaultValue</InputParameter>
										<InputParameter id="1">interpreteType</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Interprete/DefaultValue tag allows to give a default value to a parameter.[NewLine]This is currently only supported on standalone read parameters and the given value should be compatible with the Inteprete/Type.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="69">
						<Name namespace="Protocol.Params.Param.Interprete.LengthType">CheckIdAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1111">
									<InputParameters>
										<InputParameter id="0" value="Interprete/LengthType@id">attributeName</InputParameter>
										<InputParameter id="1" value="LengthType">reasonTitle</InputParameter>
										<InputParameter id="2" value="other param">reasonValue</InputParameter>
										<InputParameter id="3" value="Param">itemKind</InputParameter>
										<InputParameter id="4" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="5">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[When Interprete/LengthType tag is set to 'other param', the id attribute should be added to it and should refer to the id of an existing parameter of Interprete/Type double.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="Interprete/LengthType@id">attributeName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[When Interprete/LengthType tag is set to 'other param', the id attribute should be added to it and should refer to the id of an existing parameter of Interprete/Type double.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3101">
									<InputParameters>
										<InputParameter id="0" value="id">attributeName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">paramId</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[When Interprete/LengthType tag is set to 'other param', the id attribute should be added to it and should refer to the id of an existing parameter of Interprete/Type double.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7101">
									<InputParameters>
										<InputParameter id="0" value="Interprete/LengthType@id">attributeName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">nonExistingParamId</InputParameter>
										<InputParameter id="4" value="Param">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[When Interprete/LengthType tag is set to 'other param', the id attribute should be added to it and should refer to the id of an existing parameter of Interprete/Type double.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>ReferencedParamWrongInterpreteType</Name>
								<GroupDescription />
								<Description templateId="4401">
									<InputParameters>
										<InputParameter id="0" value="Interprete/Type">invalidTitle</InputParameter>
										<InputParameter id="1">interpreteType</InputParameter>
										<InputParameter id="2" value="Interprete/LengthType@id">referenceTitle</InputParameter>
										<InputParameter id="3" value="double">expectedValue</InputParameter>
										<InputParameter id="4" value="Param">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPid</InputParameter>
										<InputParameter id="6">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[When Interprete/LengthType tag is set to 'other param', the id attribute should be added to it and should refer to the id of an existing parameter of Interprete/Type double.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="70">
						<Name namespace="Protocol.Params.Param.Interprete.Exceptions.Exception">CheckValueAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1101">
									<InputParameters>
										<InputParameter id="0" value="Exception@value">attributeName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[For each exception, the Exception@value attribute is required in order to define the incoming value that should be interpreted as exceptional.[NewLine]The value should be compliant with the defined Param/Interprete/Type.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>ValueIncompatibleWithInterpreteType</Name>
								<GroupDescription />
								<Description templateId="9001">
									<InputParameters>
										<InputParameter id="0" value="Exception@value">item1Title</InputParameter>
										<InputParameter id="1">exceptionValue</InputParameter>
										<InputParameter id="2" value="Interprete/Type">item2Title</InputParameter>
										<InputParameter id="3">interpreteType</InputParameter>
										<InputParameter id="4" value="Param">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPid</InputParameter>
										<InputParameter id="6">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[For each exception, the Exception@value attribute is required in order to define the incoming value that should be interpreted as exceptional.[NewLine]The value should be compliant with the defined Param/Interprete/Type.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="71">
						<Name namespace="Protocol.Params.Param.Interprete.Exceptions.Exception.Value">CheckValueTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingTag</Name>
								<GroupDescription />
								<Description templateId="1001">
									<InputParameters>
										<InputParameter id="0" value="Exception/Value">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[For each exception, the Exception/Value tag is required in order to define the value that should be stored in memory and database.[NewLine]The value should be compliant with the defined Param/Interprete/Type.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>UntrimmedTag</Name>
								<GroupDescription />
								<Description templateId="3001">
									<InputParameters>
										<InputParameter id="0" value="Exception/Value">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[For each exception, the Exception/Value tag is required in order to define the value that should be stored in memory and database.[NewLine]The value should be compliant with the defined Param/Interprete/Type.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>ValueIncompatibleWithInterpreteType</Name>
								<GroupDescription />
								<Description templateId="9001">
									<InputParameters>
										<InputParameter id="0" value="Exception/Value">item1Title</InputParameter>
										<InputParameter id="1">exceptionValue</InputParameter>
										<InputParameter id="2" value="Interprete/Type">item2Title</InputParameter>
										<InputParameter id="3">interpreteType</InputParameter>
										<InputParameter id="4" value="Param">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPid</InputParameter>
										<InputParameter id="6">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[For each exception, the Exception/Value tag is required in order to define the value that should be stored in memory and database.[NewLine]The value should be compliant with the defined Param/Interprete/Type.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="72">
						<Name namespace="Protocol.Params.Param.Alarm.Monitored">CheckDisabledIfAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="Monitored@disabledIf">attributeName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Monitored@disabledIf attribute should follow the following format 'pid,value' where:[NewLine]- pid: refers to the ID of an existing parameter.[NewLine]  The referenced Param is expected to:[NewLine]    - Have RTDisplay tag set to 'true'.[NewLine]- value: correspond to the value of the referenced parameter which will cause the monitoring to be disabled.[NewLine]  When using discreet values, it is only possible to set a condition on the discreet value, not on the display value.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3101">
									<InputParameters>
										<InputParameter id="0" value="Monitored@disabledIf">attributeName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Monitored@disabledIf attribute should follow the following format 'pid,value' where:[NewLine]- pid: refers to the ID of an existing parameter.[NewLine]  The referenced Param is expected to:[NewLine]    - Have RTDisplay tag set to 'true'.[NewLine]- value: correspond to the value of the referenced parameter which will cause the monitoring to be disabled.[NewLine]  When using discreet values, it is only possible to set a condition on the discreet value, not on the display value.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4101">
									<InputParameters>
										<InputParameter id="0" value="Monitored@disabledIf">attributeName</InputParameter>
										<InputParameter id="1">attributeValue</InputParameter>
										<InputParameter id="2" value="Param">itemKind</InputParameter>
										<InputParameter id="3">pid</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Monitored@disabledIf attribute should follow the following format 'pid,value' where:[NewLine]- pid: refers to the ID of an existing parameter.[NewLine]  The referenced Param is expected to:[NewLine]    - Have RTDisplay tag set to 'true'.[NewLine]- value: correspond to the value of the referenced parameter which will cause the monitoring to be disabled.[NewLine]  When using discreet values, it is only possible to set a condition on the discreet value, not on the display value.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7101">
									<InputParameters>
										<InputParameter id="0" value="Monitored@disabledIf">attributeName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">referencedPid</InputParameter>
										<InputParameter id="4" value="Param">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Monitored@disabledIf attribute should follow the following format 'pid,value' where:[NewLine]- pid: refers to the ID of an existing parameter.[NewLine]  The referenced Param is expected to:[NewLine]    - Have RTDisplay tag set to 'true'.[NewLine]- value: correspond to the value of the referenced parameter which will cause the monitoring to be disabled.[NewLine]  When using discreet values, it is only possible to set a condition on the discreet value, not on the display value.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>ReferencedParamWrongType</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid Param Type '{0}' on Param referenced by a 'Monitored@disabledIf' attribute. Param ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">referencedParamType</InputParameter>
										<InputParameter id="1">referencedPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Monitored@disabledIf attribute should follow the following format 'pid,value' where:[NewLine]- pid: refers to the ID of an existing parameter.[NewLine]  The referenced Param is expected to:[NewLine]    - Have RTDisplay tag set to 'true'.[NewLine]- value: correspond to the value of the referenced parameter which will cause the monitoring to be disabled.[NewLine]  When using discreet values, it is only possible to set a condition on the discreet value, not on the display value.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>ReferencedParamRTDisplayExpected</Name>
								<GroupDescription />
								<Description>
									<Format>RTDisplay(true) expected on Param '{0}' referenced by a 'Monitored@disabledIf' attribute. Param ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">referencedPid</InputParameter>
										<InputParameter id="1">referencingPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Monitored@disabledIf attribute should follow the following format 'pid,value' where:[NewLine]- pid: refers to the ID of an existing parameter.[NewLine]  The referenced Param is expected to:[NewLine]    - Have RTDisplay tag set to 'true'.[NewLine]- value: correspond to the value of the referenced parameter which will cause the monitoring to be disabled.[NewLine]  When using discreet values, it is only possible to set a condition on the discreet value, not on the display value.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="73">
						<Name namespace="Protocol.Params.Param.Interprete.LengthType">CheckLengthTypeTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingTag</Name>
								<GroupDescription />
								<Description templateId="1001">
									<InputParameters>
										<InputParameter id="0" value="LengthType">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Add LengthType tag to the document.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="LengthType">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4001">
									<InputParameters>
										<InputParameter id="0">tagValue</InputParameter>
										<InputParameter id="1" value="LengthType">tagName</InputParameter>
										<InputParameter id="2" value="Param">itemKind</InputParameter>
										<InputParameter id="3" value="">paramId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[When 'Param/Type' is 'fixed', 'Interprete/LengthType' should also be 'fixed'.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="74">
						<Name namespace="Protocol.Params.Param.Interprete.Length">CheckLengthTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingTag</Name>
								<GroupDescription />
								<Description templateId="1001">
									<InputParameters>
										<InputParameter id="0" value="Length">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="Length">tagName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4001">
									<InputParameters>
										<InputParameter id="0">tagValue</InputParameter>
										<InputParameter id="1" value="Length">tagName</InputParameter>
										<InputParameter id="2" value="Param">itemKind</InputParameter>
										<InputParameter id="3" value="">paramId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Length' tag needs to be an unsigned integer.[NewLine]When the parameter is of type 'length', the 'Length' tag can not be larger than 4.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="75">
						<Name namespace="Protocol.Params.Param.Interprete.Exceptions.Exception.Display">CheckStateAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>UnrecommendedEnabledValue</Name>
								<GroupDescription />
								<Description>
									<Format>Exception with state 'enabled'. Param '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Uncertain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Default behavior is that the state attribute of an exception should be 'disabled'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1101">
									<InputParameters>
										<InputParameter id="0" value="state">attributeName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2" value="">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Uncertain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[Add missing state attribute]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Default behavior is that the state attribute of an exception should be 'disabled'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="state">attributeName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Default behavior is that the state attribute of an exception should be 'disabled'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidAttributeValue</Name>
								<GroupDescription />
								<Description templateId="4101">
									<InputParameters>
										<InputParameter id="0" value="Display@state">attributeName</InputParameter>
										<InputParameter id="1">attributeValue</InputParameter>
										<InputParameter id="2" value="Param">itemKind</InputParameter>
										<InputParameter id="3">pid</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Default behavior is that the state attribute of an exception should be 'disabled'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>UntrimmedAttributeValue</Name>
								<GroupDescription />
								<Description templateId="3101">
									<InputParameters>
										<InputParameter id="0" value="Display@state">attributeName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">pid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Default behavior is that the state attribute of an exception should be 'disabled'.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="76">
						<Name namespace="Protocol.Params.Param.SNMP.OID">CheckOptionsAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="SNMP/OID@options">attributeName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3101">
									<InputParameters>
										<InputParameter id="0" value="SNMP/OID@options">attributeName</InputParameter>
										<InputParameter id="1" value="Param">itemKind</InputParameter>
										<InputParameter id="2">paramId</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>MissingInstanceOption</Name>
								<GroupDescription />
								<Description templateId="1201">
									<InputParameters>
										<InputParameter id="0" value="instance">valueName</InputParameter>
										<InputParameter id="1" value="SNMP/OID@options">attributeName</InputParameter>
										<InputParameter id="2" value="Table">itemKind</InputParameter>
										<InputParameter id="3" value="PID">idOrPid</InputParameter>
										<InputParameter id="4">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The instance option is always required when using the partialSNMP option. If not present, the data in the table can be incomplete or shifted.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
				</Checks>
			</Category>
			<Category id="3">
				<Name>QAction</Name>
				<Checks>
					<Check id="1">
						<Name namespace="Protocol.QActions.QAction">CheckNameAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DuplicatedValue</Name>
								<GroupDescription />
								<Description templateId="6101">
									<InputParameters>
										<InputParameter id="0" value="QAction">itemKind</InputParameter>
										<InputParameter id="1" value="Name">valueKind</InputParameter>
										<InputParameter id="2">duplicateName</InputParameter>
										<InputParameter id="3">qactionIds</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="2">
						<Name namespace="Protocol.QActions.QAction">CheckTriggersAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1101">
									<InputParameters>
										<InputParameter id="0" value="triggers">attributeName</InputParameter>
										<InputParameter id="1" value="QAction">itemKind</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[QActions should always have the QAction@triggers defined. It should contain a 'semi-colon' separated list of parameter IDs.[NewLine]Exceptions are to be made in following cases:[NewLine] - Precompiled QActions: no triggers attribute required.[NewLine] - QActions triggered by multi-threaded timers: no triggers attribute required.[NewLine] - QAction using the options="group": triggers required but refers to Groups instead of Params.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="triggers">attributeName</InputParameter>
										<InputParameter id="1" value="QAction">itemKind</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[QActions should always have the QAction@triggers defined. It should contain a 'semi-colon' separated list of parameter IDs.[NewLine]Exceptions are to be made in following cases:[NewLine] - Precompiled QActions: no triggers attribute required.[NewLine] - QActions triggered by multi-threaded timers: no triggers attribute required.[NewLine] - QAction using the options="group": triggers required but refers to Groups instead of Params.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidAttribute</Name>
								<GroupDescription />
								<Description templateId="4101">
									<InputParameters>
										<InputParameter id="0" value="triggers">attributeName</InputParameter>
										<InputParameter id="1">triggersValue</InputParameter>
										<InputParameter id="2" value="QAction">itemKind</InputParameter>
										<InputParameter id="3">qactionId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[QActions should always have the QAction@triggers defined. It should contain a 'semi-colon' separated list of parameter IDs.[NewLine]Exceptions are to be made in following cases:[NewLine] - Precompiled QActions: no triggers attribute required.[NewLine] - QActions triggered by multi-threaded timers: no triggers attribute required.[NewLine] - QAction using the options="group": triggers required but refers to Groups instead of Params.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>NonExistingParam</Name>
								<GroupDescription />
								<Description templateId="7101">
									<InputParameters>
										<InputParameter id="0" value="triggers">attributeName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">pid</InputParameter>
										<InputParameter id="4" value="QAction">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[QActions should always have the QAction@triggers defined. It should contain a 'semi-colon' separated list of parameter IDs.[NewLine]Exceptions are to be made in following cases:[NewLine] - Precompiled QActions: no triggers attribute required.[NewLine] - QActions triggered by multi-threaded timers: no triggers attribute required.[NewLine] - QAction using the options="group": triggers required but refers to Groups instead of Params.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>NonExistingGroup</Name>
								<GroupDescription />
								<Description templateId="7101">
									<InputParameters>
										<InputParameter id="0" value="triggers">attributeName</InputParameter>
										<InputParameter id="1" value="Group">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">triggerId</InputParameter>
										<InputParameter id="4" value="QAction">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[QActions should always have the QAction@triggers defined. It should contain a 'semi-colon' separated list of parameter IDs.[NewLine]Exceptions are to be made in following cases:[NewLine] - Precompiled QActions: no triggers attribute required.[NewLine] - QActions triggered by multi-threaded timers: no triggers attribute required.[NewLine] - QAction using the options="group": triggers required but refers to Groups instead of Params.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>DuplicateId</Name>
								<GroupDescription />
								<Description templateId="5101">
									<InputParameters>
										<InputParameter id="0">duplicateId</InputParameter>
										<InputParameter id="1" value="QAction@triggers">attributeName</InputParameter>
										<InputParameter id="2" value="QAction">itemKind</InputParameter>
										<InputParameter id="3" value="ID">idOrPid</InputParameter>
										<InputParameter id="4">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[QActions should always have the QAction@triggers defined. It should contain a 'semi-colon' separated list of parameter IDs.[NewLine]Exceptions are to be made in following cases:[NewLine] - Precompiled QActions: no triggers attribute required.[NewLine] - QActions triggered by multi-threaded timers: no triggers attribute required.[NewLine] - QAction using the options="group": triggers required but refers to Groups instead of Params.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="3">
						<Name namespace="Protocol.QActions.QAction">CSharpSLProtocolCheckTrigger</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>NonExistingTrigger</Name>
								<GroupDescription />
								<Description templateId="7301">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol.CheckTrigger">methodName</InputParameter>
										<InputParameter id="1" value="Trigger">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">triggerId</InputParameter>
										<InputParameter id="4">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[SLProtocol.CheckTrigger is used to make a trigger go off.[NewLine]Make sure to provide it with an ID of a trigger that exists.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="4">
						<Name namespace="Protocol.QActions.QAction">CSharpQActionCompilation</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>CompilationFailure</Name>
								<GroupDescription />
								<Description>
									<Format>C# compilation errors. QAction ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>CompilationFailure_Sub</Name>
								<GroupDescription />
								<Description>
									<Format>{0}</Format>
									<InputParameters>
										<InputParameter id="0">errorMessage</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>NoCSharpCodeAnalysisPerformed</Name>
								<GroupDescription />
								<Description>
									<Format>No C# QAction code analysis was performed due to unsupported C# version '{0}' in Visual Studio version '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">cSharpVersion</InputParameter>
										<InputParameter id="1">visualStudioVersion</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Uncertain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Undefined</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[No C# QAction code analysis could be performed due to following mismatch in supported C# syntax versions:[NewLine]- C# syntax up to and including version 7.3 is supported by the protocol (see 'Compliancies/MinimumRequiredVersion' tag).[NewLine]- C# 7.3 syntax is not supported by this Visual Studio (See Visual Studio version).]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="5">
						<Name namespace="Protocol.QActions.QAction">CSharpSLProtocolTriggerAction</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>NonExistingActionId</Name>
								<GroupDescription />
								<Description templateId="7301">
									<InputParameters>
										<InputParameter id="0" value="NotifyProtocol(221/*NT_RUN_ACTION*/, ...)">methodName</InputParameter>
										<InputParameter id="1" value="Action">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">actionId</InputParameter>
										<InputParameter id="4">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[NotifyProtocol 221 is used to trigger an action to go off.[NewLine]Make sure to provide it with an ID of an action that exists.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="6">
						<Name namespace="Protocol.QActions.QAction">CSharpSLProtocolGetParameter</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>NonExistingParam</Name>
								<GroupDescription />
								<Description templateId="7301">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol.GetParameter">methodName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">paramId</InputParameter>
										<InputParameter id="4">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[protocol.GetParameter(Parameter.ParameterName);]]></ExampleCode>
								<Details><![CDATA[SLProtocol.GetParameter is used to get the current value of a standalone parameter.[NewLine]Make sure to provide it with an ID of a standalone parameter that exists.[NewLine]Using Parameter class is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>HardCodedPid</Name>
								<GroupDescription />
								<Description templateId="100003">
									<InputParameters>
										<InputParameter id="0">hardCodedPid</InputParameter>
										<InputParameter id="1" value="Parameter">containerName</InputParameter>
										<InputParameter id="2" value="class">containerType</InputParameter>
										<InputParameter id="3">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[protocol.GetParameter(Parameter.ParameterName);]]></ExampleCode>
								<Details><![CDATA[SLProtocol.GetParameter is used to get the current value of a standalone parameter.[NewLine]Make sure to provide it with an ID of a standalone parameter that exists.[NewLine]Using Parameter class is recommended.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="7">
						<Name namespace="Protocol.QActions.QAction">CSharpSLProtocolSetParameter</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>NonExistingParam</Name>
								<GroupDescription />
								<Description templateId="7301">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol.SetParameter">methodName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">paramId</InputParameter>
										<InputParameter id="4">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[protocol.SetParameter(Parameter.ParameterName, value);]]></ExampleCode>
								<Details><![CDATA[SLProtocol.SetParameter is used to update the value of a standalone parameter.[NewLine]Make sure to provide it with an ID of a standalone parameter that exists.[NewLine]Using Parameter class is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>HardCodedPid</Name>
								<GroupDescription />
								<Description templateId="100003">
									<InputParameters>
										<InputParameter id="0">hardCodedPid</InputParameter>
										<InputParameter id="1" value="Parameter">containerName</InputParameter>
										<InputParameter id="2" value="class">containerType</InputParameter>
										<InputParameter id="3">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[protocol.SetParameter(Parameter.ParameterName, value);]]></ExampleCode>
								<Details><![CDATA[SLProtocol.SetParameter is used to update the value of a standalone parameter.[NewLine]Make sure to provide it with an ID of a standalone parameter that exists.[NewLine]Using Parameter class is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>ParamMissingHistorySet</Name>
								<GroupDescription />
								<Description templateId="100006">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol.SetParameter">method</InputParameter>
										<InputParameter id="1" value="ValueType timeInfo">argument</InputParameter>
										<InputParameter id="2" value="Param@historySet=true">option</InputParameter>
										<InputParameter id="3" value="Param">referenceKind</InputParameter>
										<InputParameter id="4" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="5">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Every overload of the 'SLProtocol.SetParameter' method having the 'ValueType timeInfo' argument is meant to execute a historySet on a standlone parameter.[NewLine]Such method requires the standalone parameter to be set to have the 'Param@historySet' attribute set to 'true'.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="8">
						<Name namespace="Protocol.QActions.QAction">CSharpSLProtocolSetRow</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>NonExistingParam</Name>
								<GroupDescription />
								<Description templateId="7301">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol.SetRow">methodName</InputParameter>
										<InputParameter id="1" value="table">referenceKind</InputParameter>
										<InputParameter id="2" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="3">tablePid</InputParameter>
										<InputParameter id="4">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[protocol.SetRow(Parameter.TableName.tablePid, key, row);]]></ExampleCode>
								<Details><![CDATA[SLProtocol.SetRow is used to update the values of a table row.[NewLine]Make sure to provide it with an ID of a table parameter that exists.[NewLine]Using Parameter class is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>HardCodedPid</Name>
								<GroupDescription />
								<Description templateId="100003">
									<InputParameters>
										<InputParameter id="0">hardCodedTablePid</InputParameter>
										<InputParameter id="1" value="Parameter">containerName</InputParameter>
										<InputParameter id="2" value="class">containerType</InputParameter>
										<InputParameter id="3">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[protocol.SetRow(Parameter.TableName.tablePid, key, row);]]></ExampleCode>
								<Details><![CDATA[SLProtocol.SetRow is used to update the values of a table row.[NewLine]Make sure to provide it with an ID of a table parameter that exists.[NewLine]Using Parameter class is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>ParamMissingHistorySet</Name>
								<GroupDescription />
								<Description templateId="100006">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol.SetRow">method</InputParameter>
										<InputParameter id="1" value="ValueType timeInfo">argument</InputParameter>
										<InputParameter id="2" value="Param@historySet=true">option</InputParameter>
										<InputParameter id="3" value="column">referenceKind</InputParameter>
										<InputParameter id="4" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="5">columnPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Every overload of the 'SLProtocol.SetRow' method having the 'ValueType timeInfo' argument is meant to execute a historySet.[NewLine]Such method requires the columns of table to be set to have the 'Param@historySet' attribute set to 'true'.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="9">
						<Name namespace="Protocol.QActions.QAction">CSharpSLProtocolFillArray</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>NonExistingParam</Name>
								<GroupDescription />
								<Description templateId="7301">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol.FillArray">methodName</InputParameter>
										<InputParameter id="1" value="table">referenceKind</InputParameter>
										<InputParameter id="2" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="3">tablePid</InputParameter>
										<InputParameter id="4">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[protocol.FillArray(Parameter.TableName.tablePid, ..);]]></ExampleCode>
								<Details><![CDATA[SLProtocol.FillArray is used to update a table with new values.[NewLine]Make sure to provide it with an ID of a table parameter that exists.[NewLine]Using Parameter class is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>ParamMissingHistorySet</Name>
								<GroupDescription />
								<Description templateId="100006">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol.FillArray">method</InputParameter>
										<InputParameter id="1" value="DateTime? timeInfo">argument</InputParameter>
										<InputParameter id="2" value="Param@historySet=true">option</InputParameter>
										<InputParameter id="3" value="column">referenceKind</InputParameter>
										<InputParameter id="4" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="5">columnPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Every overload of the 'SLProtocol.FillArray' method having the 'DateTime? timeInfo' argument is meant to execute a historySet.[NewLine]Such method requires the columns of the table to be set to have the 'Param@historySet' attribute set to 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>HardCodedPid</Name>
								<GroupDescription />
								<Description templateId="100003">
									<InputParameters>
										<InputParameter id="0">hardCodedTablePid</InputParameter>
										<InputParameter id="1" value="Parameter">containerName</InputParameter>
										<InputParameter id="2" value="class">containerType</InputParameter>
										<InputParameter id="3">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[protocol.FillArray(Parameter.TableName.tablePid, ..);]]></ExampleCode>
								<Details><![CDATA[SLProtocol.FillArray is used to update a table with new values.[NewLine]Make sure to provide it with an ID of a table parameter that exists.[NewLine]Using Parameter class is recommended.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="10">
						<Name namespace="Protocol.QActions.QAction">CSharpSLProtocolFillArrayNoDelete</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>NonExistingParam</Name>
								<GroupDescription />
								<Description templateId="7301">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol.FillArrayNoDelete">methodName</InputParameter>
										<InputParameter id="1" value="table">referenceKind</InputParameter>
										<InputParameter id="2" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="3">tablePid</InputParameter>
										<InputParameter id="4">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[protocol.FillArrayNoDelete(Parameter.TableName.tablePid, ..);]]></ExampleCode>
								<Details><![CDATA[SLProtocol.FillArrayNoDelete is used to update a table with new values.[NewLine]Make sure to provide it with an ID of a table parameter that exists.[NewLine]Using Parameter class is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>ParamMissingHistorySet</Name>
								<GroupDescription />
								<Description templateId="100006">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol.FillArrayNoDelete">method</InputParameter>
										<InputParameter id="1" value="DateTime? timeInfo">argument</InputParameter>
										<InputParameter id="2" value="Param@historySet=true">option</InputParameter>
										<InputParameter id="3" value="column">referenceKind</InputParameter>
										<InputParameter id="4" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="5">columnPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Every overload of the 'SLProtocol.FillArrayNoDelete' method having the 'DateTime? timeInfo' argument is meant to execute a historySet.[NewLine]Such method requires the columns of the table to be set to have the 'Param@historySet' attribute set to 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>HardCodedPid</Name>
								<GroupDescription />
								<Description templateId="100003">
									<InputParameters>
										<InputParameter id="0">hardCodedTablePid</InputParameter>
										<InputParameter id="1" value="Parameter">containerName</InputParameter>
										<InputParameter id="2" value="class">containerType</InputParameter>
										<InputParameter id="3">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[protocol.FillArrayNoDelete(Parameter.TableName.tablePid, ..);]]></ExampleCode>
								<Details><![CDATA[SLProtocol.FillArrayNoDelete is used to update a table with new values.[NewLine]Make sure to provide it with an ID of a table parameter that exists.[NewLine]Using Parameter class is recommended.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="11">
						<Name namespace="Protocol.QActions.QAction">CSharpSLProtocolFillArrayWithColumn</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>NonExistingTable</Name>
								<GroupDescription />
								<Description templateId="7301">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol.FillArrayWithColumn">methodName</InputParameter>
										<InputParameter id="1" value="table">referenceKind</InputParameter>
										<InputParameter id="2" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="3">tablePid</InputParameter>
										<InputParameter id="4">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[protocol.FillArrayWithColumn(Parameter.TableName.tablePid, Parameter.TableName.Pid.ColumnName, keys, values);]]></ExampleCode>
								<Details><![CDATA[SLProtocol.FillArrayWithColumn is used to update the values of a column.[NewLine]Make sure to provide it with an ID of a table parameter that exists.[NewLine]Using Parameter class is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>NonExistingColumn</Name>
								<GroupDescription />
								<Description templateId="7301">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol.FillArrayWithColumn">methodName</InputParameter>
										<InputParameter id="1" value="column">referenceKind</InputParameter>
										<InputParameter id="2" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="3">columnPid</InputParameter>
										<InputParameter id="4">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[protocol.FillArrayWithColumn(Parameter.TableName.tablePid, Parameter.TableName.Pid.ColumnName, keys, values);]]></ExampleCode>
								<Details><![CDATA[SLProtocol.FillArrayWithColumn is used to update the values of a column.[NewLine]Make sure to provide it with an ID of a column parameter that exists.[NewLine]Using Parameter class is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>ParamMissingHistorySet</Name>
								<GroupDescription />
								<Description templateId="100006">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol.FillArrayWithColumn">method</InputParameter>
										<InputParameter id="1" value="DateTime? timeInfo">argument</InputParameter>
										<InputParameter id="2" value="Param@historySet=true">option</InputParameter>
										<InputParameter id="3" value="column">referenceKind</InputParameter>
										<InputParameter id="4" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="5">columnPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Every overload of the 'SLProtocol.FillArrayWithColumn' method having the 'DateTime? timeInfo' argument is meant to execute a historySet.[NewLine]Such method requires the column to be set to have the 'Param@historySet' attribute set to 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>HardCodedTablePid</Name>
								<GroupDescription />
								<Description templateId="100003">
									<InputParameters>
										<InputParameter id="0">hardCodedTablePid</InputParameter>
										<InputParameter id="1" value="Parameter">containerName</InputParameter>
										<InputParameter id="2" value="class">containerType</InputParameter>
										<InputParameter id="3">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[protocol.FillArrayWithColumn(Parameter.TableName.tablePid, Parameter.TableName.Pid.ColumnName, keys, values);]]></ExampleCode>
								<Details><![CDATA[SLProtocol.FillArrayWithColumn is used to update the values of a column.[NewLine]Make sure to provide it with an ID of a table parameter that exists.[NewLine]Using Parameter class is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>HardCodedColumnPid</Name>
								<GroupDescription />
								<Description templateId="100003">
									<InputParameters>
										<InputParameter id="0">hardCodedColumnPid</InputParameter>
										<InputParameter id="1" value="Parameter">containerName</InputParameter>
										<InputParameter id="2" value="class">containerType</InputParameter>
										<InputParameter id="3">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[protocol.FillArrayWithColumn(Parameter.TableName.tablePid, Parameter.TableName.Pid.ColumnName, keys, values);]]></ExampleCode>
								<Details><![CDATA[SLProtocol.FillArrayWithColumn is used to update the values of a column.[NewLine]Make sure to provide it with an ID of a column parameter that exists.[NewLine]Using Parameter class is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>ColumnManagedByDataMiner</Name>
								<GroupDescription />
								<Description templateId="10310">
									<InputParameters>
										<InputParameter id="0" value="set">actionType</InputParameter>
										<InputParameter id="1" value="column">itemKind</InputParameter>
										<InputParameter id="2">columnPid</InputParameter>
										<InputParameter id="3">optionLocation</InputParameter>
										<InputParameter id="4">optionName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Some columns are fully managed by DataMiner and therefore cannot be updated from the protocol.[NewLine][NewLine]Examples:[NewLine]- ColumnOption@Type="state".[NewLine]- ColumnOption@Option containing the 'element' option.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>ColumnManagedByProtocolItem</Name>
								<GroupDescription />
								<Description templateId="10311">
									<InputParameters>
										<InputParameter id="0" value="set">actionType</InputParameter>
										<InputParameter id="1" value="column">itemKind</InputParameter>
										<InputParameter id="2">columnPid</InputParameter>
										<InputParameter id="3">managedByItemKind</InputParameter>
										<InputParameter id="4">managedByItemId</InputParameter>
										<InputParameter id="5">optionLocation</InputParameter>
										<InputParameter id="6">optionName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Some columns are fully managed by protocol items and therefore cannot be updated from QActions.[NewLine][NewLine]Examples:[NewLine]- Multi-threaded timers with following ping options: rttColumn, timestampColumn, jitterColumn, latencyColumn, packetLossRateColumn.[NewLine]- Merge actions (result destination).[NewLine]- ...]]></Details>
							</ErrorMessage>
							<ErrorMessage id="8">
								<Name>UnrecommendedSetOnSnmpParam</Name>
								<GroupDescription />
								<Description templateId="13310">
									<InputParameters>
										<InputParameter id="0" value="set">actionType</InputParameter>
										<InputParameter id="1" value="column">itemKind</InputParameter>
										<InputParameter id="2">columnPid</InputParameter>
										<InputParameter id="3" value="ColumnOption@type">optionLocation</InputParameter>
										<InputParameter id="4" value="snmp">optionName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Uncertain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[It is typically unrecommended to update SNMP parameters from within a protocol.[NewLine]Indeed, SNMP parameters should typically strictly be updated via polling.[NewLine][NewLine]Exceptions can sometimes be made when we update SNMP parameters based on received traps which contains, without any possible doubt, the new value.[NewLine][NewLine]Side note: There are alternatives to poll SNMP parameters in an efficient way when, for example, a cell or column or row needs to be updated but you don't want to poll the entire table:[NewLine]- See various snmpSet options[NewLine]- See dynamicSnmpGet feature.[NewLine]- ...]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="12">
						<Name namespace="Protocol.QActions.QAction">CSharpCheckEntryPoints</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingEntryPoint</Name>
								<GroupDescription />
								<Description>
									<Format>Entry point '{0}.{1}' not found in QAction. QAction ID {2}.</Format>
									<InputParameters>
										<InputParameter id="0">entryPointClass</InputParameter>
										<InputParameter id="1">entryPointMethod</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The QAction@entryPoint attribute can optionally be used to overwrite the default entry point of a QAction.[NewLine][NewLine]By default, the entry point will be the method 'Run' that can be found under the class 'QAction'.[NewLine]Defining multiple entry points can be done by providing a semicolon list of entry points.[NewLine]In that case, each entry point corresponds to a QAction trigger.[NewLine][NewLine]One of the two following format can be used in order to overwrite default entry points (curly braces are here used as place holder indicators in the below explanation so are not to be included when defining your entry points):[NewLine]- {entryPointMethod}: the given method name in the 'QAction' class will be the new entry point.[NewLine]- {entryPointClass}.{entryPointMethod}: the given method name in the given class name will be the new entry point.[NewLine][NewLine]Note that both the entry point class and methods are expected to be public and the first argument of the entry point is expected to be of type SLProtocol or SLProtocolExt.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>UnexpectedAccessModifierForEntryPointMethod</Name>
								<GroupDescription />
								<Description>
									<Format>Entry point method '{0}.{1}' has unexpected access modifier '{2}'. QAction ID {3}.</Format>
									<InputParameters>
										<InputParameter id="0">entryPointClass</InputParameter>
										<InputParameter id="1">entryPointMethod</InputParameter>
										<InputParameter id="2">currentAccessModifier</InputParameter>
										<InputParameter id="3">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The QAction@entryPoint attribute can optionally be used to overwrite the default entry point of a QAction.[NewLine][NewLine]By default, the entry point will be the method 'Run' that can be found under the class 'QAction'.[NewLine]Defining multiple entry points can be done by providing a semicolon list of entry points.[NewLine]In that case, each entry point corresponds to a QAction trigger.[NewLine][NewLine]One of the two following format can be used in order to overwrite default entry points (curly braces are here used as place holder indicators in the below explanation so are not to be included when defining your entry points):[NewLine]- {entryPointMethod}: the given method name in the 'QAction' class will be the new entry point.[NewLine]- {entryPointClass}.{entryPointMethod}: the given method name in the given class name will be the new entry point.[NewLine][NewLine]Note that both the entry point class and methods are expected to be public and the first argument of the entry point is expected to be of type SLProtocol or SLProtocolExt.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UnexpectedAccessModifierForEntryPointClass</Name>
								<GroupDescription />
								<Description>
									<Format>Entry point class '{0}' has unexpected access modifier '{1}'. QAction ID {2}.</Format>
									<InputParameters>
										<InputParameter id="0">entryPointClass</InputParameter>
										<InputParameter id="1">currentAccessModifier</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The QAction@entryPoint attribute can optionally be used to overwrite the default entry point of a QAction.[NewLine][NewLine]By default, the entry point will be the method 'Run' that can be found under the class 'QAction'.[NewLine]Defining multiple entry points can be done by providing a semicolon list of entry points.[NewLine]In that case, each entry point corresponds to a QAction trigger.[NewLine][NewLine]One of the two following format can be used in order to overwrite default entry points (curly braces are here used as place holder indicators in the below explanation so are not to be included when defining your entry points):[NewLine]- {entryPointMethod}: the given method name in the 'QAction' class will be the new entry point.[NewLine]- {entryPointClass}.{entryPointMethod}: the given method name in the given class name will be the new entry point.[NewLine][NewLine]Note that both the entry point class and methods are expected to be public and the first argument of the entry point is expected to be of type SLProtocol or SLProtocolExt.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>UnexpectedArg0TypeForEntryPointMethod</Name>
								<GroupDescription />
								<Description>
									<Format>Entry point method '{0}.{1}' has a first argument with unexpected type '{2}'. QAction ID {3}.</Format>
									<InputParameters>
										<InputParameter id="0">entryPointClass</InputParameter>
										<InputParameter id="1">entryPointMethod</InputParameter>
										<InputParameter id="2">arg0Type</InputParameter>
										<InputParameter id="3">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The QAction@entryPoint attribute can optionally be used to overwrite the default entry point of a QAction.[NewLine][NewLine]By default, the entry point will be the method 'Run' that can be found under the class 'QAction'.[NewLine]Defining multiple entry points can be done by providing a semicolon list of entry points.[NewLine]In that case, each entry point corresponds to a QAction trigger.[NewLine][NewLine]One of the two following format can be used in order to overwrite default entry points (curly braces are here used as place holder indicators in the below explanation so are not to be included when defining your entry points):[NewLine]- {entryPointMethod}: the given method name in the 'QAction' class will be the new entry point.[NewLine]- {entryPointClass}.{entryPointMethod}: the given method name in the given class name will be the new entry point.[NewLine][NewLine]Note that both the entry point class and methods are expected to be public and the first argument of the entry point is expected to be of type SLProtocol or SLProtocolExt.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="13">
						<Name namespace="Protocol.QActions.QAction">CSharpCheckPreprocessorDirective</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>ObsoleteDcfV1</Name>
								<GroupDescription />
								<Description templateId="100001">
									<InputParameters>
										<InputParameter id="0" value="DCFv1">preprocessorDirective</InputParameter>
										<InputParameter id="1">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[DCFv1 preprocessor directive was used in the past in order to support older DM versions that didn't support DCF yet.[NewLine]However, by now, our minimum DM supported version already has DCF support so this DCFv1 preprocessor directive is of no use anymore.[NewLine]Moreover, in some cases, such preprocessor directive makes it harder to pinpoint issues so we highly recommend to fully remove the now useless DCFv1 directives (even commented out ones) from all protocols.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="14">
						<Name namespace="Protocol.QActions.QAction">CSharpCheckQActionImplementedInterface</Name>
						<ErrorMessages />
					</Check>
					<Check id="15">
						<Name namespace="Protocol.QActions.QAction">CSharpCheckUnrecommendedMethod</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>UnrecommendedThreadAbort</Name>
								<GroupDescription />
								<Description templateId="100005">
									<InputParameters>
										<InputParameter id="0" value="System.Threading.Thread">methodClassType</InputParameter>
										<InputParameter id="1" value="Abort">unrecommendedMethod</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Thread.Abort method should be used with caution.[NewLine]Particularly when you call it to abort a thread other than the current thread, you do not know what code has executed or failed to execute when the ThreadAbortException is thrown.[NewLine]You also cannot be certain of the state of your application or any application and user state that it's responsible for preserving.[NewLine]For example, calling Thread.Abort may prevent the execution of static constructors or the release of unmanaged resources.[NewLine][NewLine]Instead, some logic to nicely end the thread should be implemented.[NewLine]This is usually implemented according to the cooperative cancellation model.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>UnrecommendedSlProtocolGetParameterIndex</Name>
								<GroupDescription />
								<Description templateId="100005">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="GetParameterIndex">unrecommendedMethod</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['SLProtocol.GetParameterIndex' method is used to get the value of a specific cell in a table.[NewLine]The problem with this call is that it relies on an indexer to identify the row for which a cell value needs to be retrieved.[NewLine]However, the order of rows in element tables is not guaranteed.[NewLine]Meaning, using an index (row position) is not ideal.[NewLine][NewLine]Instead, it is recommended to use the 'SLProtocol.GetParameterIndexByKey' method which relies on the primary key of the rows.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UnrecommendedSlProtocolSetParameterIndex</Name>
								<GroupDescription />
								<Description templateId="100005">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="SetParameterIndex">unrecommendedMethod</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['SLProtocol.SetParameterIndex' method is used to set the value of a specific cell in a table.[NewLine]The problem with this call is that it relies on an indexer to identify the row for which a cell value needs to be updated.[NewLine]However, the order of rows in element tables is not guaranteed.[NewLine]Meaning, using an index (row position) is not ideal.[NewLine][NewLine]Instead, it is recommended to use the 'SLProtocol.SetParameterIndexByKey' method which relies on the primary key of the rows.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>UnrecommendedSlProtocolSetParametersIndex</Name>
								<GroupDescription />
								<Description templateId="100005">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="SetParametersIndex">unrecommendedMethod</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['SLProtocol.SetParametersIndex' method is used to set the value of a specific cells in a table.[NewLine]The problem with this call is that it relies on an indexer to identify the rows for which a cells values need to be updated.[NewLine]However, the order of rows in element tables is not guaranteed.[NewLine]Meaning, using an index (row position) is not ideal.[NewLine][NewLine]Instead, it is recommended to use the 'SLProtocol.SetParametersIndexByKey' method which relies on the primary key of the rows.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>UnrecommendedNotifyDataMinerNTGetRemoteTrend</Name>
								<GroupDescription />
								<Description templateId="100005">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyDataMiner(216/*NT_GET_REMOTE_TREND*/, ...)">unrecommendedMethod</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['SLProtocol.NotifyDataMiner(216/*NT_GET_REMOTE_TREND*/, ...)' method is now considered obsolete.[NewLine][NewLine]Instead, the 'GetTrendDataMessage' SLNet message is recommended as it is more efficient and up to date.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>UnrecommendedNotifyDataMinerNTGetRemoteTrendAvg</Name>
								<GroupDescription />
								<Description templateId="100005">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyDataMiner(260/*NT_GET_REMOTE_TREND_AVG*/, ...)">unrecommendedMethod</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['SLProtocol.NotifyDataMiner(260/*NT_GET_REMOTE_TREND_AVG*/, ...)' method is now considered obsolete.[NewLine][NewLine]Instead, the 'GetTrendDataMessage' SLNet message is recommended as it is more efficient and up to date.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>UnrecommendedNotifyProtocolNTDeleteRow</Name>
								<GroupDescription />
								<Description templateId="100005">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyProtocol(156/*NT_DELETE_ROW*/, ...)">unrecommendedMethod</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['SLProtocol.NotifyProtocol(156/*NT_DELETE_ROW*/, ...)' method is now considered unrecommended.[NewLine][NewLine]Instead, the wrapper method 'SLProtocol.DeleteRow()' is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="8">
								<Name>UnrecommendedNotifyProtocolNTAddRow</Name>
								<GroupDescription />
								<Description templateId="100005">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyProtocol(149/*NT_ADD_ROW*/, ...)">unrecommendedMethod</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['SLProtocol.NotifyProtocol(149/*NT_ADD_ROW*/, ...)' method is now considered unrecommended.[NewLine][NewLine]Instead, the wrapper method 'SLProtocol.AddRow()' is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="9">
								<Name>UnrecommendedNotifyProtocolNT_CHECK_TRIGGER</Name>
								<GroupDescription />
								<Description templateId="100005">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyProtocol(134/*NT_CHECK_TRIGGER*/, ...)">unrecommendedMethod</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['SLProtocol.NotifyProtocol(134/*NT_CHECK_TRIGGER*/, ...)' method is now considered unrecommended.[NewLine][NewLine]Instead, the wrapper method 'SLProtocol.CheckTrigger()' is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="10">
								<Name>UnrecommendedNotifyProtocolNT_GET_DATA</Name>
								<GroupDescription />
								<Description templateId="100005">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyProtocol(60/*NT_GET_DATA*/, ...)">unrecommendedMethod</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['SLProtocol.NotifyProtocol(60/*NT_GET_DATA*/, ...)' method is now considered unrecommended.[NewLine][NewLine]Instead, the wrapper method 'SLProtocol.GetData()' is recommended.[NewLine][NewLine]If the intention was only to check if the parameter is empty, then 'SLProtocol.IsEmpty()' is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="11">
								<Name>UnrecommendedNotifyProtocolNT_GET_KEY_POSITION</Name>
								<GroupDescription />
								<Description templateId="100005">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyProtocol(163/*NT_GET_KEY_POSITION*/, ...)">unrecommendedMethod</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['SLProtocol.NotifyProtocol(163/*NT_GET_KEY_POSITION*/, ...)' method is now considered obsolete.[NewLine][NewLine]Instead of relying on row positions, working directly with calls relying on primary keys is recommended[NewLine][NewLine]Examples:[NewLine] - Use 'SLProtocol.GetParameterIndexByKey()' instead of 'SLProtocol.GetParameterIndex()'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="12">
								<Name>UnrecommendedNotifyProtocolNT_GET_PARAMETER</Name>
								<GroupDescription />
								<Description templateId="100005">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyProtocol(73/*NT_GET_PARAMETER*/, ...)">unrecommendedMethod</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['SLProtocol.NotifyProtocol(73/*NT_GET_PARAMETER*/, ...)' method is now considered unrecommended.[NewLine][NewLine]Instead, the wrapper method 'SLProtocol.GetParameter()' or 'SLProtocol.GetParameters()' is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="13">
								<Name>UnrecommendedNotifyProtocolNT_GET_PARAMETER_BY_DATA</Name>
								<GroupDescription />
								<Description templateId="100005">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyProtocol( 87/*NT_GET_PARAMETER_BY_DATA*/, ...)">unrecommendedMethod</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['SLProtocol.NotifyProtocol( 87/*NT_GET_PARAMETER_BY_DATA*/, ...)' method is now considered unrecommended.[NewLine][NewLine]Instead, the wrapper method 'SLProtocol.GetParameterByData()' is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="14">
								<Name>UnrecommendedNotifyProtocolNT_GET_PARAMETER_BY_NAME</Name>
								<GroupDescription />
								<Description templateId="100005">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyProtocol(85/*NT_GET_PARAMETER_BY_NAME*/, ...)">unrecommendedMethod</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['SLProtocol.NotifyProtocol(85/*NT_GET_PARAMETER_BY_NAME*/, ...)' method is now considered unrecommended.[NewLine][NewLine]Instead, the wrapper method 'SLProtocol.GetParameterByName()' is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="15">
								<Name>UnrecommendedNotifyProtocolNT_GET_DESCRIPTION</Name>
								<GroupDescription />
								<Description templateId="100005">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyProtocol(77/*NT_GET_DESCRIPTION*/, ...)">unrecommendedMethod</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['SLProtocol.NotifyProtocol(77/*NT_GET_DESCRIPTION*/, ...)' method is now considered unrecommended.[NewLine][NewLine]Instead, the wrapper method 'SLProtocol.GetParameterDescription()' is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="16">
								<Name>UnrecommendedNotifyProtocolNT_GET_PARAMETER_INDEX</Name>
								<GroupDescription />
								<Description templateId="100005">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyProtocol(122/*NT_GET_PARAMETER_INDEX*/, ...)">unrecommendedMethod</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['SLProtocol.NotifyProtocol(122/*NT_GET_PARAMETER_INDEX*/, ...)' method is now considered unrecommended.[NewLine][NewLine]Instead, the wrapper method 'SLProtocol.GetParameterIndexByKey()' is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="17">
								<Name>UnrecommendedNotifyProtocolNT_GET_ITEM_DATA</Name>
								<GroupDescription />
								<Description templateId="100005">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyProtocol(88/*NT_GET_ITEM_DATA*/, ...)">unrecommendedMethod</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['SLProtocol.NotifyProtocol(88/*NT_GET_ITEM_DATA*/, ...)' method is now considered unrecommended.[NewLine][NewLine]Instead, the wrapper method 'SLProtocol.GetParameterItemData()' is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="18">
								<Name>UnrecommendedNotifyProtocolNT_GET_ROW</Name>
								<GroupDescription />
								<Description templateId="100005">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyProtocol(215/*NT_GET_ROW*/, ...)">unrecommendedMethod</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['SLProtocol.NotifyProtocol(215/*NT_GET_ROW*/, ...)' method is now considered unrecommended.[NewLine][NewLine]Instead, the wrapper method 'SLProtocol.GetRow()' is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="19">
								<Name>UnrecommendedNotifyProtocolNT_ARRAY_ROW_COUNT</Name>
								<GroupDescription />
								<Description templateId="100005">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyProtocol(195/*NT_ARRAY_ROW_COUNT*/, ...)">unrecommendedMethod</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['SLProtocol.NotifyProtocol(195/*NT_ARRAY_ROW_COUNT*/, ...)' method is now considered unrecommended.[NewLine][NewLine]Instead, the wrapper method 'SLProtocol.RowCount()' is recommended.[NewLine][NewLine]If the intention is to loop over rows based on the result, using a call to get columns straight away is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="20">
								<Name>UnrecommendedNotifyProtocolNT_NOTIFY_DISPLAY</Name>
								<GroupDescription />
								<Description templateId="100005">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyProtocol(123/*NT_NOTIFY_DISPLAY*/, ...)">unrecommendedMethod</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['SLProtocol.NotifyProtocol(123/*NT_NOTIFY_DISPLAY*/, ...)' method is now considered unrecommended.[NewLine][NewLine]Instead, the wrapper method 'SLProtocol.SendToDisplay()' is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="21">
								<Name>UnrecommendedNotifyProtocolNT_SET_PARAMETER_WITH_HISTORY</Name>
								<GroupDescription />
								<Description templateId="100005">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyProtocol(256/*NT_SET_PARAMETER_WITH_HISTORY*/, ...)">unrecommendedMethod</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['SLProtocol.NotifyProtocol(256/*NT_SET_PARAMETER_WITH_HISTORY*/, ...)' method is now considered unrecommended.[NewLine][NewLine]Instead, the wrapper method 'SLProtocol.SetParameter()' is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="22">
								<Name>UnrecommendedNotifyProtocolNT_SET_PARAMETER_BY_DATA</Name>
								<GroupDescription />
								<Description templateId="100005">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyProtocol(86/*NT_SET_PARAMETER_BY_DATA*/, ...)">unrecommendedMethod</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['SLProtocol.NotifyProtocol(86/*NT_SET_PARAMETER_BY_DATA*/, ...)' method is now considered unrecommended.[NewLine][NewLine]Instead, the wrapper method 'SLProtocol.SetParameterByData()' is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="23">
								<Name>UnrecommendedNotifyProtocolNT_SET_PARAMETER_BY_NAME</Name>
								<GroupDescription />
								<Description templateId="100005">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyProtocol(84/*NT_SET_PARAMETER_BY_NAME*/, ...)">unrecommendedMethod</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['SLProtocol.NotifyProtocol(84/*NT_SET_PARAMETER_BY_NAME*/, ...)' method is now considered unrecommended.[NewLine][NewLine]Instead, the wrapper method 'SLProtocol.SetParameterByName()' is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="24">
								<Name>UnrecommendedNotifyProtocolNT_SET_DESCRIPTION</Name>
								<GroupDescription />
								<Description templateId="100005">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyProtocol(131/*NT_SET_DESCRIPTION*/, ...)">unrecommendedMethod</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['SLProtocol.NotifyProtocol(131/*NT_SET_DESCRIPTION*/, ...)' method is now considered unrecommended.[NewLine][NewLine]Instead, the wrapper method 'SLProtocol.SetParameterDescription()' is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="25">
								<Name>UnrecommendedNotifyProtocolNT_SET_ITEM_DATA</Name>
								<GroupDescription />
								<Description templateId="100005">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyProtocol(89/*NT_SET_ITEM_DATA*/, ...)">unrecommendedMethod</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['SLProtocol.NotifyProtocol(89/*NT_SET_ITEM_DATA*/, ...)' method is now considered unrecommended.[NewLine][NewLine]Instead, the wrapper method 'SLProtocol.SetParameterItemData()' is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="26">
								<Name>UnrecommendedNotifyProtocolNT_SET_ROW</Name>
								<GroupDescription />
								<Description templateId="100005">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyProtocol(225/*NT_SET_ROW*/, ...)">unrecommendedMethod</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['SLProtocol.NotifyProtocol(225/*NT_SET_ROW*/, ...)' method is now considered unrecommended.[NewLine][NewLine]Instead, the wrapper method 'SLProtocol.SetRow()' is recommended.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="16">
						<Name namespace="Protocol.QActions.QAction">CSharpNotifyDataMinerNTSetElementState</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DeltIncompatible</Name>
								<GroupDescription />
								<Description templateId="100004">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyDataMiner(Queued)(115/*NT_SET_ELEMENT_STATE*/, ...)">incompatibleMethod</InputParameter>
										<InputParameter id="2" value="DELT">incompatibleComponent</InputParameter>
										<InputParameter id="3">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[uint[] elementDetails = new uint[] { elementId, state, deleteOptions, dmaID };[NewLine]protocol.NotifyDataMiner(115 /*NT_SET_ELEMENT_STATE*/ , elementDetails, null);]]></ExampleCode>
								<Details><![CDATA[To make this call DELT compatible, the DMA ID needs to be provided as argument.[NewLine]See Example code.[NewLine][NewLine]More information about the syntax can be found in the DataMiner Development Library.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="17">
						<Name namespace="Protocol.QActions.QAction">CSharpNotifyDataMinerNTSetAlarmState</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DeltIncompatible</Name>
								<GroupDescription />
								<Description templateId="100004">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyDataMiner(Queued)(116/*NT_SET_ALARM_STATE*/, ...)">incompatibleMethod</InputParameter>
										<InputParameter id="2" value="DELT">incompatibleComponent</InputParameter>
										<InputParameter id="3">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[object elementDetails = new uint[] {elementID, state, dmaID};[NewLine]object maskDetails = new string[] {maskType, comment};[NewLine][NewLine]protocol.NotifyDataMiner(116 /* NT_SET_ALARM_STATE */, elementDetails, maskDetails);]]></ExampleCode>
								<Details><![CDATA[To make this call DELT compatible, the DMA ID needs to be provided as argument.[NewLine]See Example code.[NewLine][NewLine]More information about the syntax can be found in the DataMiner Development Library.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="18">
						<Name namespace="Protocol.QActions.QAction">CSharpNotifyDataMinerNTGetParameter</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DeltIncompatible</Name>
								<GroupDescription />
								<Description templateId="100004">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyDataMiner(73/*NT_GET_PARAMETER*/, ...)">incompatibleMethod</InputParameter>
										<InputParameter id="2" value="DELT">incompatibleComponent</InputParameter>
										<InputParameter id="3">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[uint[] ids = new uint[] { dmaID, elementID, parameterID };[NewLine]object[] result = (object[])protocol.NotifyDataMiner(73/*NT_GET_PARAMETER*/, ids, null);]]></ExampleCode>
								<Details><![CDATA[To make this call DELT compatible, the DMA ID needs to be provided as argument.[NewLine]See Example code.[NewLine][NewLine]More information about the syntax can be found in the DataMiner Development Library.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="19">
						<Name namespace="Protocol.QActions.QAction">CSharpNotifyDataMinerNTAssignAlarmTemplate</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DeltIncompatible</Name>
								<GroupDescription />
								<Description templateId="100004">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyDataMiner(Queued)(117/*NT_ASSIGN_ALARM_TEMPLATE*/, ...)">incompatibleMethod</InputParameter>
										<InputParameter id="2" value="DELT">incompatibleComponent</InputParameter>
										<InputParameter id="3">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[uint[] elementDetails = { agentId, elementId };[NewLine]string[] alarmTemplate = new string[] { "Alarm Template 1" };[NewLine][NewLine]protocol.NotifyDataMiner(117/*NT_ASSIGN_ALARM_TEMPLATE*/, elementDetails, alarmTemplate);]]></ExampleCode>
								<Details><![CDATA[To make this call DELT compatible, the DMA ID needs to be provided as argument.[NewLine]See Example code.[NewLine][NewLine]More information about the syntax can be found in the DataMiner Development Library.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="20">
						<Name namespace="Protocol.QActions.QAction">CSharpNotifyDataMinerNTUpdatePortsXml</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DeltIncompatible</Name>
								<GroupDescription />
								<Description templateId="100004">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyDataMiner(Queued)(128/*NT_UPDATE_PORTS_XML*/, ...)">incompatibleMethod</InputParameter>
										<InputParameter id="2" value="DELT">incompatibleComponent</InputParameter>
										<InputParameter id="3">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[string updateConfig = changeType + ";" + elementId + ";" + parameterId + ";" + agentId;[NewLine]string updateValue = inputs + ";" + outputs;[NewLine][NewLine]int result = (int) protocol.NotifyDataMinerQueued(128/*NT_UPDATE_PORTS_XML*/, updateConfig, updateValue);]]></ExampleCode>
								<Details><![CDATA[To make this call DELT compatible, the DMA ID needs to be provided as argument.[NewLine]See Example code.[NewLine][NewLine]More information about the syntax can be found in the DataMiner Development Library.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="21">
						<Name namespace="Protocol.QActions.QAction">CSharpNotifyDataMinerNTEditProperty</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DeltIncompatible</Name>
								<GroupDescription />
								<Description templateId="100004">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyDataMiner(Queued)(62/*NT_EDIT_PROPERTY*/, ...)">incompatibleMethod</InputParameter>
										<InputParameter id="2" value="DELT">incompatibleComponent</InputParameter>
										<InputParameter id="3">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[string propertyLocation = "element:"+ elementId + ":" + agentId;[NewLine]string[] propertyDetails = new string[3] {"DeviceKey", "read-write", "2100"};[NewLine][NewLine]protocol.NotifyDataMinerQueued(62/*NT_EDIT_PROPERTY*/ , propertyLocation, propertyDetails);]]></ExampleCode>
								<Details><![CDATA[To make this call DELT compatible, the DMA ID needs to be provided as argument.[NewLine]See Example code.[NewLine][NewLine]More information about the syntax can be found in the DataMiner Development Library.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="22">
						<Name namespace="Protocol.QActions.QAction">CSharpNotifyDataMinerNTTrendingAssignTemplate</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DeltIncompatible</Name>
								<GroupDescription />
								<Description templateId="100004">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyDataMiner(Queued)(14/*NT_TRENDING_ASSIGN_TEMPLATE*/, ...)">incompatibleMethod</InputParameter>
										<InputParameter id="2" value="DELT">incompatibleComponent</InputParameter>
										<InputParameter id="3">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[uint[] elementDetails = { agentId, elementId };[NewLine]string[] trendTemplate = new string[] { "Template 1" };[NewLine][NewLine]protocol.NotifyDataMiner(14 /*NT_TRENDING_ASSIGN_TEMPLATE*/, elementDetails, trendTemplate);]]></ExampleCode>
								<Details><![CDATA[To make this call DELT compatible, the DMA ID needs to be provided as argument.[NewLine]See Example code.[NewLine][NewLine]More information about the syntax can be found in the DataMiner Development Library.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="23">
						<Name namespace="Protocol.QActions.QAction">CSharpNotifyDataMinerNTUpdateDescriptionXml</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DeltIncompatible</Name>
								<GroupDescription />
								<Description templateId="100004">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyDataMiner(Queued)(127/*NT_UPDATE_DESCRIPTION_XML*/, ...)">incompatibleMethod</InputParameter>
										<InputParameter id="2" value="DELT">incompatibleComponent</InputParameter>
										<InputParameter id="3">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[uint[] elementDetails = new uint[] { agentId, elementId };[NewLine]object[] updates = new object[] { update1, update2 };[NewLine][NewLine]int result = (int) protocol.NotifyDataMinerQueued(127/*NT_UPDATE_DESCRIPTION_XML */ , elementDetails, updates);]]></ExampleCode>
								<Details><![CDATA[To make this call DELT compatible, the DMA ID needs to be provided as argument.[NewLine]See Example code.[NewLine][NewLine]More information about the syntax can be found in the DataMiner Development Library.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="24">
						<Name namespace="Protocol.QActions.QAction">CSharpNotifyDataMinerNTAssignSimulation</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DeltIncompatible</Name>
								<GroupDescription />
								<Description templateId="100004">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyDataMiner(Queued)(76/*NT_ASSIGN_SIMULATION*/, ...)">incompatibleMethod</InputParameter>
										<InputParameter id="2" value="DELT">incompatibleComponent</InputParameter>
										<InputParameter id="3">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[uint[] elementDetails = new uint[] { agentId, elementId };[NewLine]bool assignSimulation = false;[NewLine][NewLine]protocol.NotifyDataMinerQueued(76 /*NT_ASSIGN_SIMULATION*/ , elementDetails, assignSimulation);]]></ExampleCode>
								<Details><![CDATA[To make this call DELT compatible, the DMA ID needs to be provided as argument.[NewLine]See Example code.[NewLine][NewLine]More information about the syntax can be found in the DataMiner Development Library.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="25">
						<Name namespace="Protocol.QActions.QAction">CSharpNotifyDataMinerNTGetValue</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DeltIncompatible</Name>
								<GroupDescription />
								<Description templateId="100004">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyDataMiner(69/*NT_GET_VALUE*/, ...)">incompatibleMethod</InputParameter>
										<InputParameter id="2" value="DELT">incompatibleComponent</InputParameter>
										<InputParameter id="3">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[uint[] elementDetails = new uint[] { agentId, elementId };[NewLine]int parameterId = 120;[NewLine][NewLine]object[] result = (object[]) protocol.NotifyDataMiner(69 /*NT_GET_VALUE*/, elementDetails, parameterId);]]></ExampleCode>
								<Details><![CDATA[To make this call DELT compatible, the DMA ID needs to be provided as argument.[NewLine]See Example code.[NewLine][NewLine]More information about the syntax can be found in the DataMiner Development Library.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="26">
						<Name namespace="Protocol.QActions.QAction">CSharpNotifyDataMinerNTGetAlarmInfo</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DeltIncompatible</Name>
								<GroupDescription />
								<Description templateId="100004">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyDataMiner(48/*NT_GET_ALARM_INFO*/, ...)">incompatibleMethod</InputParameter>
										<InputParameter id="2" value="DELT">incompatibleComponent</InputParameter>
										<InputParameter id="3">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[uint[] elementInfo = new uint[] { dmaId, elementId };[NewLine]uint[] parameterIds = new uint[] { 100, 300 };[NewLine][NewLine]object[] result = (object[]) protocol.NotifyDataMiner(48 /* NT_GET_ALARM_INFO */, elementInfo, parameterIds);]]></ExampleCode>
								<Details><![CDATA[To make this call DELT compatible, the DMA ID needs to be provided as argument.[NewLine]See Example code.[NewLine][NewLine]More information about the syntax can be found in the DataMiner Development Library.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="27">
						<Name namespace="Protocol.QActions.QAction">CSharpNotifyDataMinerNTGetElementName</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DeltIncompatible</Name>
								<GroupDescription />
								<Description templateId="100004">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyDataMiner(144/*NT_GET_ELEMENT_NAME*/, ...)">incompatibleMethod</InputParameter>
										<InputParameter id="2" value="DELT">incompatibleComponent</InputParameter>
										<InputParameter id="3">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[uint[] elementDetails = new uint[] { agentId, elementId };[NewLine]string elementName = (string) protocol.NotifyDataMiner(144/*NT_GET_ELEMENT_NAME */, elementDetails, null);]]></ExampleCode>
								<Details><![CDATA[To make this call DELT compatible, the DMA ID needs to be provided as argument.[NewLine]See Example code.[NewLine][NewLine]More information about the syntax can be found in the DataMiner Development Library.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="28">
						<Name namespace="Protocol.QActions.QAction">CSharpNotifyDataMinerNTServiceSetVdx</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DeltIncompatible</Name>
								<GroupDescription />
								<Description templateId="100004">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyDataMiner(Queued)(232/*NT_SERVICE_SET_VDX*/, ...)">incompatibleMethod</InputParameter>
										<InputParameter id="2" value="DELT">incompatibleComponent</InputParameter>
										<InputParameter id="3">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[string serviceInfo = dmaId + "/" + serviceId;[NewLine]string serviceVdx = "Visio|1";[NewLine][NewLine]protocol.NotifyDataMiner(232 /*NT_SERVICE_SET_VDX*/ , serviceInfo, serviceVdx);]]></ExampleCode>
								<Details><![CDATA[To make this call DELT compatible, the DMA ID needs to be provided as argument.[NewLine]See Example code.[NewLine][NewLine]More information about the syntax can be found in the DataMiner Development Library.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="29">
						<Name namespace="Protocol.QActions.QAction">CSharpNotifyProtocolNTSnmpSet</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DeltIncompatible</Name>
								<GroupDescription />
								<Description templateId="100004">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyProtocol(292/*NT_SNMP_SET*/, ...)">incompatibleMethod</InputParameter>
										<InputParameter id="2" value="DELT">incompatibleComponent</InputParameter>
										<InputParameter id="3">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[object[] elementInfo = new object[] { elementId, ipPort, multipleSet, instance, connectionId, setCommunityString, enableRetries, agentId };[NewLine]object[] oidInfo = new object[] { new object[] { oid, newValue, snmpType } };[NewLine][NewLine]object[] result = (object[])protocol.NotifyProtocol(292/*NT_SNMP_SET*/, elementInfo, oidInfo);]]></ExampleCode>
								<Details><![CDATA[To make this call DELT compatible, the DMA ID needs to be provided as argument.[NewLine]See Example code.[NewLine][NewLine]More information about the syntax can be found in the DataMiner Development Library.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="30">
						<Name namespace="Protocol.QActions.QAction">CSharpNotifyProtocolNTSnmpGet</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DeltIncompatible</Name>
								<GroupDescription />
								<Description templateId="100004">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol">methodClassType</InputParameter>
										<InputParameter id="1" value="NotifyProtocol(295/*NT_SNMP_GET*/, ...)">incompatibleMethod</InputParameter>
										<InputParameter id="2" value="DELT">incompatibleComponent</InputParameter>
										<InputParameter id="3">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[object[] elementInfo = new object[] { elementId, ipPort, multipleGet, instance, connectionId, getCommunityString, splitErrors, agentId };[NewLine]string[] oidInfo = new string[] { "1.3.6.1.2.1.1.4.0" };[NewLine][NewLine]object[] result = (object[])protocol.NotifyProtocol(295/*NT_SNMP_GET*/, elementInfo, oidInfo);]]></ExampleCode>
								<Details><![CDATA[To make this call DELT compatible, the DMA ID needs to be provided as argument.[NewLine]See Example code.[NewLine][NewLine]More information about the syntax can be found in the DataMiner Development Library.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="31">
						<Name namespace="Protocol.QActions.QAction">CheckIdAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1100">
									<InputParameters>
										<InputParameter id="0" value="QAction@id">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each qaction.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each qaction should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2100">
									<InputParameters>
										<InputParameter id="0" value="QAction@id">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each qaction.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each qaction should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3100">
									<InputParameters>
										<InputParameter id="0" value="QAction@id">attributeName</InputParameter>
										<InputParameter id="1">attributeValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each qaction.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each qaction should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4101">
									<InputParameters>
										<InputParameter id="0" value="QAction@id">attributeName</InputParameter>
										<InputParameter id="1">qactionId</InputParameter>
										<InputParameter id="2" value="QAction">itemKind</InputParameter>
										<InputParameter id="3">qactionName</InputParameter>
										<InputParameter id="4" value="name">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each qaction.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each qaction should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>DuplicatedId</Name>
								<GroupDescription />
								<Description templateId="6001">
									<InputParameters>
										<InputParameter id="0" value="QAction">itemKind</InputParameter>
										<InputParameter id="1">qactionId</InputParameter>
										<InputParameter id="2">qactionNames</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each qaction.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each qaction should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="33">
						<Name namespace="Protocol.QActions.QAction">CSharpSLProtocolGetParameters</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>UnexpectedImplementation</Name>
								<GroupDescription />
								<Description templateId="100007">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol.GetParameters">method</InputParameter>
										<InputParameter id="1">arguments</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>BubbleUp</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[SLProtocol.GetParameters is used to get current values of standalone parameters.[NewLine]Make sure to provide it with a uint array of existing standalone parameter IDs.[NewLine]Using Parameter class is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>NonExistingParam</Name>
								<GroupDescription />
								<Description templateId="7301">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol.GetParameters">methodName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">paramId</InputParameter>
										<InputParameter id="4">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[protocol.GetParameters(new uint[] { Parameter.ParameterName, Parameter.ParameterName2 });]]></ExampleCode>
								<Details><![CDATA[SLProtocol.GetParameters is used to get current values of standalone parameters.[NewLine]Make sure to provide it with a uint array of existing standalone parameter IDs.[NewLine]Using Parameter class is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>HardCodedPid</Name>
								<GroupDescription />
								<Description templateId="100003">
									<InputParameters>
										<InputParameter id="0">hardCodedPid</InputParameter>
										<InputParameter id="1" value="Parameter">containerName</InputParameter>
										<InputParameter id="2" value="class">containerType</InputParameter>
										<InputParameter id="3">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[protocol.GetParameters(new uint[] { Parameter.ParameterName, Parameter.ParameterName2 });]]></ExampleCode>
								<Details><![CDATA[SLProtocol.GetParameters is used to get current values of standalone parameters.[NewLine]Make sure to provide it with a uint array of existing standalone parameter IDs.[NewLine]Using Parameter class is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>UnsupportedArgumentTypeForIds</Name>
								<GroupDescription />
								<Description templateId="100000">
									<InputParameters>
										<InputParameter id="0" value="SLProtocol.GetParameters">method</InputParameter>
										<InputParameter id="1">argumentType</InputParameter>
										<InputParameter id="2" value="ids">argument</InputParameter>
										<InputParameter id="3">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[SLProtocol.GetParameters is used to get current values of standalone parameters.[NewLine]Make sure to provide it with a uint array of existing standalone parameter IDs.[NewLine]Using Parameter class is recommended.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="34">
						<Name namespace="Protocol.QActions.QAction">CSharpNotifyProtocolNtFillArrayWithColumn</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>UnexpectedImplementation</Name>
								<GroupDescription />
								<Description templateId="100007">
									<InputParameters>
										<InputParameter id="0" value="NotifyProtocol(220/*NT_FILL_ARRAY_WITH_COLUMN*/, ...)">method</InputParameter>
										<InputParameter id="1">arguments</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>BubbleUp</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[NotifyProtocol(220/*NT_FILL_ARRAY_WITH_COLUMN*/, ...) is used to update the values of column(s).[NewLine]See DDL for more information.[NewLine]Also note that using Parameter class is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>NonExistingTable</Name>
								<GroupDescription />
								<Description templateId="7301">
									<InputParameters>
										<InputParameter id="0" value="NotifyProtocol(220/*NT_FILL_ARRAY_WITH_COLUMN*/, ...)">methodName</InputParameter>
										<InputParameter id="1" value="table">referenceKind</InputParameter>
										<InputParameter id="2" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="3">tablePid</InputParameter>
										<InputParameter id="4">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[object[] columnPids = new object[][NewLine]{[NewLine] Parameter.TableName.tablePid,[NewLine] Parameter.TableName.Pid.ColumnName[NewLine]};[NewLine]object[] columnValues = new object[][NewLine]{[NewLine] keys,[NewLine] values[NewLine]};[NewLine]protocol.NotifyProtocol((int)NotifyType.NT_FILL_ARRAY_WITH_COLUMN, columnPids, columnValues);]]></ExampleCode>
								<Details><![CDATA[NotifyProtocol(220/*NT_FILL_ARRAY_WITH_COLUMN*/, ...) is used to update the values of column(s).[NewLine]Make sure to provide it with the ID of a table parameter that exists.[NewLine]Using Parameter class is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>NonExistingColumn</Name>
								<GroupDescription />
								<Description templateId="7301">
									<InputParameters>
										<InputParameter id="0" value="NotifyProtocol(220/*NT_FILL_ARRAY_WITH_COLUMN*/, ...)">methodName</InputParameter>
										<InputParameter id="1" value="column">referenceKind</InputParameter>
										<InputParameter id="2" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="3">columnPid</InputParameter>
										<InputParameter id="4">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[object[] columnPids = new object[][NewLine]{[NewLine] Parameter.TableName.tablePid,[NewLine] Parameter.TableName.Pid.ColumnName[NewLine]};[NewLine]object[] columnValues = new object[][NewLine]{[NewLine] keys,[NewLine] values[NewLine]};[NewLine]protocol.NotifyProtocol((int)NotifyType.NT_FILL_ARRAY_WITH_COLUMN, columnPids, columnValues);]]></ExampleCode>
								<Details><![CDATA[NotifyProtocol(220/*NT_FILL_ARRAY_WITH_COLUMN*/, ...) is used to update the values of column(s).[NewLine]Make sure to provide it with column parameter IDs that exists excluding the index (Primary Key) column.[NewLine]Using Parameter class is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>ColumnMissingHistorySet</Name>
								<GroupDescription />
								<Description>
									<Format>NotifyProtocol(220/*NT_FILL_ARRAY_WITH_COLUMN*/, ...) method with one or more DateTime(s) given to it requires 'Param@historySet=true' on column with PID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">columnPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[NotifyProtocol(220/*NT_FILL_ARRAY_WITH_COLUMN*/, ...) with DateTime given on table or cell level requires related column parameter(s) to be set to have the 'Param@historySet' attribute set to 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>HardCodedTablePid</Name>
								<GroupDescription />
								<Description templateId="100003">
									<InputParameters>
										<InputParameter id="0">hardCodedTablePid</InputParameter>
										<InputParameter id="1" value="Parameter">containerName</InputParameter>
										<InputParameter id="2" value="class">containerType</InputParameter>
										<InputParameter id="3">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[object[] columnPids = new object[][NewLine]{[NewLine] Parameter.TableName.tablePid,[NewLine] Parameter.TableName.Pid.ColumnName[NewLine]};[NewLine]object[] columnValues = new object[][NewLine]{[NewLine] keys,[NewLine] values[NewLine]};[NewLine]protocol.NotifyProtocol((int)NotifyType.NT_FILL_ARRAY_WITH_COLUMN, columnPids, columnValues);]]></ExampleCode>
								<Details><![CDATA[NotifyProtocol(220/*NT_FILL_ARRAY_WITH_COLUMN*/, ...) is used to update the values of column(s).[NewLine]Make sure to provide it with an ID of a table parameter that exists.[NewLine]Using Parameter class is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>HardCodedColumnPid</Name>
								<GroupDescription />
								<Description templateId="100003">
									<InputParameters>
										<InputParameter id="0">hardCodedColumnPid</InputParameter>
										<InputParameter id="1" value="Parameter">containerName</InputParameter>
										<InputParameter id="2" value="class">containerType</InputParameter>
										<InputParameter id="3">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[object[] columnPids = new object[][NewLine]{[NewLine] Parameter.TableName.tablePid,[NewLine] Parameter.TableName.Pid.ColumnName[NewLine]};[NewLine]object[] columnValues = new object[][NewLine]{[NewLine] keys,[NewLine] values[NewLine]};[NewLine]protocol.NotifyProtocol((int)NotifyType.NT_FILL_ARRAY_WITH_COLUMN, columnPids, columnValues);]]></ExampleCode>
								<Details><![CDATA[NotifyProtocol(220/*NT_FILL_ARRAY_WITH_COLUMN*/, ...) is used to update the values of column(s).[NewLine]Make sure to provide it with column parameter IDs that exists excluding the index (Primary Key) column.[NewLine]Using Parameter class is recommended.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>ColumnManagedByDataMiner</Name>
								<GroupDescription />
								<Description templateId="10310">
									<InputParameters>
										<InputParameter id="0" value="set">actionType</InputParameter>
										<InputParameter id="1" value="column">itemKind</InputParameter>
										<InputParameter id="2">columnPid</InputParameter>
										<InputParameter id="3">optionLocation</InputParameter>
										<InputParameter id="4">optionName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Some columns are fully managed by DataMiner and therefore cannot be updated from the protocol.[NewLine][NewLine]Examples:[NewLine]- ColumnOption@Type="state".[NewLine]- ColumnOption@Option containing the 'element' option.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="8">
								<Name>ColumnManagedByProtocolItem</Name>
								<GroupDescription />
								<Description templateId="10311">
									<InputParameters>
										<InputParameter id="0" value="set">actionType</InputParameter>
										<InputParameter id="1" value="column">itemKind</InputParameter>
										<InputParameter id="2">columnPid</InputParameter>
										<InputParameter id="3">managedByItemKind</InputParameter>
										<InputParameter id="4">managedByItemId</InputParameter>
										<InputParameter id="5">optionLocation</InputParameter>
										<InputParameter id="6">optionName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Some columns are fully managed by protocol items and therefore cannot be updated from QActions.[NewLine][NewLine]Examples:[NewLine]- Multi-threaded timers with following ping options: rttColumn, timestampColumn, jitterColumn, latencyColumn, packetLossRateColumn.[NewLine]- Merge actions (result destination).[NewLine]- ...]]></Details>
							</ErrorMessage>
							<ErrorMessage id="9">
								<Name>UnrecommendedSetOnSnmpParam</Name>
								<GroupDescription />
								<Description templateId="13310">
									<InputParameters>
										<InputParameter id="0" value="set">actionType</InputParameter>
										<InputParameter id="1" value="column">itemKind</InputParameter>
										<InputParameter id="2">columnPid</InputParameter>
										<InputParameter id="3" value="ColumnOption@type">optionLocation</InputParameter>
										<InputParameter id="4" value="snmp">optionName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Uncertain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[It is typically unrecommended to update SNMP parameters from within a protocol.[NewLine]Indeed, SNMP parameters should typically strictly be updated via polling.[NewLine][NewLine]Exceptions can sometimes be made when we update SNMP parameters based on received traps which contains, without any possible doubt, the new value.[NewLine][NewLine]Side note: There are alternatives to poll SNMP parameters in an efficient way when, for example, a cell or column or row needs to be updated but you don't want to poll the entire table:[NewLine]- See various snmpSet options[NewLine]- See dynamicSnmpGet feature.[NewLine]- ...]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="35">
						<Name namespace="Protocol.QActions.QAction.Condition">CheckConditionTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>InvalidCondition</Name>
								<GroupDescription />
								<Description templateId="4901">
									<InputParameters>
										<InputParameter id="0">conditionString</InputParameter>
										<InputParameter id="1">invalidityReason</InputParameter>
										<InputParameter id="2" value="QAction">itemKind</InputParameter>
										<InputParameter id="3" value="ID">idOrPid</InputParameter>
										<InputParameter id="4">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A 'QAction/Condition' should always contain a statement returning a boolean.[NewLine]See DDL for more information.[NewLine][NewLine]Here are a few examples of mistakes covered by this error:[NewLine]- Empty condition.[NewLine]- Malformed condition:[NewLine]  - The 'id:' placeholder used to retrieve a parameter value is incorrectly defined.[NewLine]  - The number of opening & closing parentheses is not matching.[NewLine]  - '&&', '||' is used instead of 'AND', 'OR'.[NewLine]- Condition that is not a boolean expression.[NewLine]- Fully hard-coded boolean expression (No reference to any parameter value).[NewLine]- etc.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7001">
									<InputParameters>
										<InputParameter id="0" value="QAction/Condition">tagName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="3">paramId</InputParameter>
										<InputParameter id="4" value="QAction">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A 'QAction/Condition' should always contain a statement returning a boolean.[NewLine]See DDL for more information.[NewLine][NewLine]Here are a few examples of mistakes covered by this error:[NewLine]- Empty condition.[NewLine]- Malformed condition:[NewLine]  - The 'id:' placeholder used to retrieve a parameter value is incorrectly defined.[NewLine]  - The number of opening & closing parentheses is not matching.[NewLine]  - '&&', '||' is used instead of 'AND', 'OR'.[NewLine]- Condition that is not a boolean expression.[NewLine]- Fully hard-coded boolean expression (No reference to any parameter value).[NewLine]- etc.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>ConditionCanBeSimplified</Name>
								<GroupDescription />
								<Description templateId="4902">
									<InputParameters>
										<InputParameter id="0">conditionString</InputParameter>
										<InputParameter id="1" value="QAction">itemKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPid</InputParameter>
										<InputParameter id="3">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'QAction/Condition' can be simplified. Some examples of when the condition can be simplified:[NewLine]  - The condition contains redundant parentheses.[NewLine]  - The condition does not contain a variable and therefore can either be dropped completely (or a variable must be included).]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="36">
						<Name namespace="Protocol.QActions.QAction">CSharpCheckUnrecommendedConstructor</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>UnrecommendedXmlSerializerConstructor</Name>
								<GroupDescription />
								<Description templateId="100008" />
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Use one of the following constructors:[NewLine]- XmlSerializer.XmlSerializer(Type)[NewLine]- XmlSerializer.XmlSerializer(Type, String)]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[As mentioned on Microsoft docs (https://learn.microsoft.com/en-us/dotnet/api/system.xml.serialization.xmlserializer):[NewLine]To increase performance, the XML serialization infrastructure dynamically generates assemblies to serialize and deserialize specified types. The infrastructure finds and reuses those assemblies. This behavior occurs only when using the following constructors:[NewLine]- XmlSerializer.XmlSerializer(Type)[NewLine]- XmlSerializer.XmlSerializer(Type, String)[NewLine]If you use any of the other constructors, multiple versions of the same assembly are generated and never unloaded, which results in a memory leak and poor performance. The easiest solution is to use one of the previously mentioned two constructors.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="37">
						<Name namespace="Protocol.QActions.QAction">CSharpCheckUnrecommendedPropertySet</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>UnrecommendedCultureInfoDefaultThreadCurrentCulture</Name>
								<GroupDescription />
								<Description templateId="100009">
									<InputParameters>
										<InputParameter id="0" value="CultureInfo">propertyClassType</InputParameter>
										<InputParameter id="1" value="DefaultThreadCurrentCulture">unrecommendedProperty</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Changing application domain settings should not be performed as QActions from other connectors might be impacted by this change.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>UnrecommendedThreadCurrentThreadCurrentCulture</Name>
								<GroupDescription />
								<Description templateId="100009">
									<InputParameters>
										<InputParameter id="0" value="Thread.CurrentThread">propertyClassType</InputParameter>
										<InputParameter id="1" value="CurrentCulture">unrecommendedProperty</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[As the threads that execute QAction code are part of a thread pool, changing a setting on a thread in a QAction can affect other QActions of other connectors.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UnrecommendedThreadCurrentThreadCurrentUICulture</Name>
								<GroupDescription />
								<Description templateId="100009">
									<InputParameters>
										<InputParameter id="0" value="Thread.CurrentThread">propertyClassType</InputParameter>
										<InputParameter id="1" value="CurrentUICulture">unrecommendedProperty</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[As the threads that execute QAction code are part of a thread pool, changing a setting on a thread in a QAction can affect other QActions of other connectors.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="38">
						<Name namespace="Protocol.QActions">CheckAssemblies</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>UnconsolidatedPackageReference</Name>
								<GroupDescription />
								<Description>
									<Format>Package '{0}' has multiple versions across different QActions.</Format>
									<InputParameters>
										<InputParameter id="0">packageId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Consolidate the package references so they have the same version across all projects.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[When multiple QActions are using different versions of a NuGet package, it can lead to runtime exceptions such as MissingMethodException or InvalidCastException.[NewLine]To fix these issues, it is important to use the same version of a NuGet package across the entire solution.[NewLine][NewLine]'Skyline.DataMiner.Dev.*' (aka DevPacks) or 'Skyline.DataMiner.Files.*' NuGet packages should also be aligned across all projects of the solution as these packages represent the DataMiner version that is being developed against.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>UnconsolidatedPackageReference_Sub</Name>
								<GroupDescription />
								<Description>
									<Format>QAction '{0}' has package '{1}' with version '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">qactionId</InputParameter>
										<InputParameter id="1">packageId</InputParameter>
										<InputParameter id="2">packageVersion</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Consolidate the package references so they have the same version across all projects.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[When multiple QActions are using different versions of a NuGet package, it can lead to runtime exceptions such as MissingMethodException or InvalidCastException.[NewLine]To fix these issues, it is important to use the same version of a NuGet package across the entire solution.[NewLine][NewLine]'Skyline.DataMiner.Dev.*' (aka DevPacks) or 'Skyline.DataMiner.Files.*' NuGet packages should also be aligned across all projects of the solution as these packages represent the DataMiner version that is being developed against.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="39">
						<Name namespace="Protocol.QActions.QAction">CSharpCoreInterAppBrokerSupport</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>InvalidInterAppReplyLogic</Name>
								<GroupDescription />
								<Description templateId="100004">
									<InputParameters>
										<InputParameter id="0">methodClassType</InputParameter>
										<InputParameter id="1">incompatibleMethod</InputParameter>
										<InputParameter id="2" value="DataMiner.Core.InterApp &gt;= v1.0.1.1">incompatibleComponent</InputParameter>
										<InputParameter id="3">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[To ensure correct handling of messages, always respond to incoming interapp messages by invoking the `.Reply()` method on the original message object received from an external source. [NewLine][NewLine]It is incorrect to use the `.Reply()` method on newly created message objects. [NewLine]Additionally, avoid performing `.SetParameter(9000001, data);` or invoking `.Send` to the `ReturnAddress`, as these actions are also incorrect.]]></HowToFix>
								<ExampleCode><![CDATA[foreach (var receivedMessage in receivedCall.Messages)[NewLine]{[NewLine]    Message response;[NewLine]    receivedMessage.TryExecute(protocol, protocol, Shared.Mapping, out response);[NewLine]    [NewLine]    if (response != null)[NewLine]    {[NewLine]         receivedMessage.Reply(protocol.SLNet.RawConnection, response, Shared.KnownTypes);[NewLine]    }[NewLine]}]]></ExampleCode>
								<Details><![CDATA[To maintain proper message handling, always use the .Reply() method on the original incoming message object received from an external source.[NewLine][NewLine]Do not use .Reply() on messages you create anew. [NewLine]Also, refrain from using .SetParameter(9000001, data); or .Send to the ReturnAddress, as these practices are incorrect.[NewLine][NewLine]Using the .Reply() method is crucial because it incorporates specific logic that optimizes communication between applications. It dynamically chooses the best delivery method, utilizing either SLNet Subscriptions or a more efficient message broker when available, ensuring that responses are handled efficiently and effectively based on the current configuration of the running agent. [NewLine][NewLine]This optimization helps maintain system integrity and improves performance.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="40">
						<Name namespace="Protocol.QActions.QAction">CheckFileEncoding</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>InvalidFileEncoding</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid file encoding '{0}' detected in file '{1}'. QAction ID '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">invalidFileEncoding</InputParameter>
										<InputParameter id="1">fileName</InputParameter>
										<InputParameter id="2">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Each file in a QAction needs to be UTF-8 as otherwise certain characters could be converted to invalid characters.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="41">
						<Name namespace="Protocol.QActions.QAction">CSharpCheckUnrecommendedFinalizer</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>UnrecommendedFinalizer</Name>
								<GroupDescription />
								<Description>
									<Format>Finalizer '{0}' is unrecommended. QAction ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">finalizerName</InputParameter>
										<InputParameter id="1">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Finalizers need careful implementation as any exception thrown in a finalizer will result in a process crash as this code is executed by the finalizer thread. The performance impact arises from the delayed cleanup until the finalizer finalizes the object. Finalizers can clean up unmanaged resources in case the dispose method was not called, but it is preferred to use a SafeHandle to avoid the need for a finalizer. For resource management, it is recommended to use the IDisposable interface and the dispose pattern instead. More information can be found on the Microsoft docs (https://learn.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/finalizers).]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="42">
						<Name namespace="Protocol.QActions.QAction">CheckDataMinerDependency</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MismatchDevPack</Name>
								<GroupDescription />
								<Description>
									<Format>Package '{0}' version '{1}' does not meet the minimum required version '{2}'. QAction ID '{3}'.</Format>
									<InputParameters>
										<InputParameter id="0">packageName</InputParameter>
										<InputParameter id="1">packageVersion</InputParameter>
										<InputParameter id="2">minimumRequiredVersion</InputParameter>
										<InputParameter id="3">qactionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Either increase version in the MinimumRequiredVersion tag or downgrade the package so it matches with the minimum required version.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Using a higher version of the DevPack may introduce new features that are not compatible with the specified version of DataMiner.[NewLine]This can lead to unexpected behavior or errors. Make sure that the DevPack version used in the solution does not exceed the MinimumRequiredVersion.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
				</Checks>
			</Category>
			<Category id="4">
				<Name>Group</Name>
				<Checks>
					<Check id="1">
						<Name namespace="Protocol.Groups.Group.Name">CheckNameTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DuplicatedValue</Name>
								<GroupDescription />
								<Description templateId="6101">
									<InputParameters>
										<InputParameter id="0" value="Group">itemKind</InputParameter>
										<InputParameter id="1" value="Name">valueKind</InputParameter>
										<InputParameter id="2">duplicateName</InputParameter>
										<InputParameter id="3">groupIds</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="2">
						<Name namespace="Protocol.Groups.Group.Content.Param">CheckParamTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7001">
									<InputParameters>
										<InputParameter id="0" value="Content/Param">tagName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">pid</InputParameter>
										<InputParameter id="4" value="Group">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">groupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Group/Content tag should contain a list of 'Param', 'Pair', 'Session', 'Trigger' or 'Action' tags. Note that only one type of them is allowed for a specific Group.[NewLine] - 'Param' tags should refer to the id of an existing Param.[NewLine] - 'Pair' tags should refer to the id of an existing Pair.[NewLine] - 'Session' tags should refer to the id of an existing HTTP/Session.[NewLine] - 'Trigger' tags should refer to the id of an existing Trigger.[NewLine] - 'Action' tags should refer to the id of an existing Action.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyParamTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="Content/Param">tagName</InputParameter>
										<InputParameter id="1" value="Group">itemKind</InputParameter>
										<InputParameter id="2">groupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Group/Content tag should contain a list of 'Param', 'Pair', 'Session', 'Trigger' or 'Action' tags. Note that only one type of them is allowed for a specific Group.[NewLine] - 'Param' tags should refer to the id of an existing Param.[NewLine] - 'Pair' tags should refer to the id of an existing Pair.[NewLine] - 'Session' tags should refer to the id of an existing HTTP/Session.[NewLine] - 'Trigger' tags should refer to the id of an existing Trigger.[NewLine] - 'Action' tags should refer to the id of an existing Action.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidParamTag</Name>
								<GroupDescription />
								<Description templateId="4001">
									<InputParameters>
										<InputParameter id="0">value</InputParameter>
										<InputParameter id="1" value="Content/Param">tagName</InputParameter>
										<InputParameter id="2" value="Group">itemKind</InputParameter>
										<InputParameter id="3">groupId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Group/Content tag should contain a list of 'Param', 'Pair', 'Session', 'Trigger' or 'Action' tags. Note that only one type of them is allowed for a specific Group.[NewLine] - 'Param' tags should refer to the id of an existing Param.[NewLine] - 'Pair' tags should refer to the id of an existing Pair.[NewLine] - 'Session' tags should refer to the id of an existing HTTP/Session.[NewLine] - 'Trigger' tags should refer to the id of an existing Trigger.[NewLine] - 'Action' tags should refer to the id of an existing Action.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidParamSuffix</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid suffix '{0}' in 'Group/Content/Param' element. Group ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">suffix</InputParameter>
										<InputParameter id="1">groupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[<Param>100:tablev2</Param>]]></ExampleCode>
								<Details><![CDATA[Within 'Group/Content/Param' element, following suffixes are allowed:[NewLine] - Single: If ":single" is appended after the parameter ID, this parameter will be retrieved via a separate SNMP Get request.[NewLine] - Instance: Indicates that this parameter holds the instance value. The following parameters in the group will use the value retrieved by this parameter as the instance.[NewLine] - table: (Deprecated) Indicates that the requested parameter represents a table. Use tablev2 instead.[NewLine] - tablev2: Indicates that the requested parameter represents a table.[NewLine] - getnext: Performs a GetNext request.[NewLine][NewLine]Note that all those are meant to poll data via a multi-threaded timer so a group containing such suffixes can only be called from multi-threaded timers.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>ObsoleteSuffixTable</Name>
								<GroupDescription />
								<Description>
									<Format>Suffix 'table' in 'Group/Content/Param' element is considered obsolete. Group ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">groupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[<Param>100:tablev2</Param>]]></ExampleCode>
								<Details><![CDATA[Suffix 'table' is used in 'Group/Content/Param' element to indicate the provided parameter represents a table to be polled.[NewLine]This results in a number of GetNext request operations to retrieve the instances followed by a number of Get request operations to retrieve the table data column by column. This way of polling is inefficient and can some times lead to corrupted data.[NewLine][NewLine]To improve on this, the new suffix 'tablev2' should be used and will result in a number of getBulk request operations to retrieve the table data row by row.[NewLine][NewLine]Note that these suffixes can only be used if the group is called by a multi-threaded timer.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>SuffixRequiresMultiThreadedTimer</Name>
								<GroupDescription />
								<Description>
									<Format>Suffix '{0}' in'Group/Content/Param' element requires the group to be called from a multi-threaded timer. Group ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">suffix</InputParameter>
										<InputParameter id="1">groupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[<Param>100:tablev2</Param>]]></ExampleCode>
								<Details><![CDATA[Within 'Group/Content/Param' element, following suffixes are allowed:[NewLine] - Single: If ":single" is appended after the parameter ID, this parameter will be retrieved via a separate SNMP Get request.[NewLine] - Instance: Indicates that this parameter holds the instance value. The following parameters in the group will use the value retrieved by this parameter as the instance.[NewLine] - table: (Deprecated) Indicates that the requested parameter represents a table. Use tablev2 instead.[NewLine] - tablev2: Indicates that the requested parameter represents a table.[NewLine] - getnext: Performs a GetNext request.[NewLine][NewLine]However, all those are meant to poll data via a multi-threaded timer so a group containing such suffixes can only be called from multi-threaded timers.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="3">
						<Name namespace="Protocol.Groups.Group.Content.Action">CheckActionTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7001">
									<InputParameters>
										<InputParameter id="0" value="Content/Action">tagName</InputParameter>
										<InputParameter id="1" value="Action">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">actionId</InputParameter>
										<InputParameter id="4" value="Group">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">groupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Group/Content tag should contain a list of 'Param', 'Pair', 'Session', 'Trigger' or 'Action' tags. Note that only one type of them is allowed for a specific Group.[NewLine] - 'Param' tags should refer to the id of an existing Param.[NewLine] - 'Pair' tags should refer to the id of an existing Pair.[NewLine] - 'Session' tags should refer to the id of an existing HTTP/Session.[NewLine] - 'Trigger' tags should refer to the id of an existing Trigger.[NewLine] - 'Action' tags should refer to the id of an existing Action.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyActionTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="Content/Action">tagName</InputParameter>
										<InputParameter id="1" value="Group">itemKind</InputParameter>
										<InputParameter id="2">groupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Group/Content tag should contain a list of 'Param', 'Pair', 'Session', 'Trigger' or 'Action' tags. Note that only one type of them is allowed for a specific Group.[NewLine] - 'Param' tags should refer to the id of an existing Param.[NewLine] - 'Pair' tags should refer to the id of an existing Pair.[NewLine] - 'Session' tags should refer to the id of an existing HTTP/Session.[NewLine] - 'Trigger' tags should refer to the id of an existing Trigger.[NewLine] - 'Action' tags should refer to the id of an existing Action.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidActionTag</Name>
								<GroupDescription />
								<Description templateId="4001">
									<InputParameters>
										<InputParameter id="0">value</InputParameter>
										<InputParameter id="1" value="Content/Action">tagName</InputParameter>
										<InputParameter id="2" value="Group">itemKind</InputParameter>
										<InputParameter id="3">groupId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Group/Content tag should contain a list of 'Param', 'Pair', 'Session', 'Trigger' or 'Action' tags. Note that only one type of them is allowed for a specific Group.[NewLine] - 'Param' tags should refer to the id of an existing Param.[NewLine] - 'Pair' tags should refer to the id of an existing Pair.[NewLine] - 'Session' tags should refer to the id of an existing HTTP/Session.[NewLine] - 'Trigger' tags should refer to the id of an existing Trigger.[NewLine] - 'Action' tags should refer to the id of an existing Action.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="4">
						<Name namespace="Protocol.Groups.Group.Content.Pair">CheckPairTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7001">
									<InputParameters>
										<InputParameter id="0" value="Content/Pair">tagName</InputParameter>
										<InputParameter id="1" value="Pair">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">pairId</InputParameter>
										<InputParameter id="4" value="Group">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">groupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Group/Content tag should contain a list of 'Param', 'Pair', 'Session', 'Trigger' or 'Action' tags. Note that only one type of them is allowed for a specific Group.[NewLine] - 'Param' tags should refer to the id of an existing Param.[NewLine] - 'Pair' tags should refer to the id of an existing Pair.[NewLine] - 'Session' tags should refer to the id of an existing HTTP/Session.[NewLine] - 'Trigger' tags should refer to the id of an existing Trigger.[NewLine] - 'Action' tags should refer to the id of an existing Action.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyPairTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="Content/Pair">tagName</InputParameter>
										<InputParameter id="1" value="Group">itemKind</InputParameter>
										<InputParameter id="2">groupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Group/Content tag should contain a list of 'Param', 'Pair', 'Session', 'Trigger' or 'Action' tags. Note that only one type of them is allowed for a specific Group.[NewLine] - 'Param' tags should refer to the id of an existing Param.[NewLine] - 'Pair' tags should refer to the id of an existing Pair.[NewLine] - 'Session' tags should refer to the id of an existing HTTP/Session.[NewLine] - 'Trigger' tags should refer to the id of an existing Trigger.[NewLine] - 'Action' tags should refer to the id of an existing Action.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidPairTag</Name>
								<GroupDescription />
								<Description templateId="4001">
									<InputParameters>
										<InputParameter id="0">value</InputParameter>
										<InputParameter id="1" value="Content/Pair">tagName</InputParameter>
										<InputParameter id="2" value="Group">itemKind</InputParameter>
										<InputParameter id="3">groupId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Group/Content tag should contain a list of 'Param', 'Pair', 'Session', 'Trigger' or 'Action' tags. Note that only one type of them is allowed for a specific Group.[NewLine] - 'Param' tags should refer to the id of an existing Param.[NewLine] - 'Pair' tags should refer to the id of an existing Pair.[NewLine] - 'Session' tags should refer to the id of an existing HTTP/Session.[NewLine] - 'Trigger' tags should refer to the id of an existing Trigger.[NewLine] - 'Action' tags should refer to the id of an existing Action.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="5">
						<Name namespace="Protocol.Groups.Group.Content.Session">CheckSessionTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7001">
									<InputParameters>
										<InputParameter id="0" value="Content/Session">tagName</InputParameter>
										<InputParameter id="1" value="HTTP Session">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">sessionId</InputParameter>
										<InputParameter id="4" value="Group">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">groupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Group/Content tag should contain a list of 'Param', 'Pair', 'Session', 'Trigger' or 'Action' tags. Note that only one type of them is allowed for a specific Group.[NewLine] - 'Param' tags should refer to the id of an existing Param.[NewLine] - 'Pair' tags should refer to the id of an existing Pair.[NewLine] - 'Session' tags should refer to the id of an existing HTTP/Session.[NewLine] - 'Trigger' tags should refer to the id of an existing Trigger.[NewLine] - 'Action' tags should refer to the id of an existing Action.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptySessionTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="Content/Session">tagName</InputParameter>
										<InputParameter id="1" value="Group">itemKind</InputParameter>
										<InputParameter id="2">groupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Group/Content tag should contain a list of 'Param', 'Pair', 'Session', 'Trigger' or 'Action' tags. Note that only one type of them is allowed for a specific Group.[NewLine] - 'Param' tags should refer to the id of an existing Param.[NewLine] - 'Pair' tags should refer to the id of an existing Pair.[NewLine] - 'Session' tags should refer to the id of an existing HTTP/Session.[NewLine] - 'Trigger' tags should refer to the id of an existing Trigger.[NewLine] - 'Action' tags should refer to the id of an existing Action.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidSessionTag</Name>
								<GroupDescription />
								<Description templateId="4001">
									<InputParameters>
										<InputParameter id="0">value</InputParameter>
										<InputParameter id="1" value="Content/Session">tagName</InputParameter>
										<InputParameter id="2" value="Group">itemKind</InputParameter>
										<InputParameter id="3">groupId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Group/Content tag should contain a list of 'Param', 'Pair', 'Session', 'Trigger' or 'Action' tags. Note that only one type of them is allowed for a specific Group.[NewLine] - 'Param' tags should refer to the id of an existing Param.[NewLine] - 'Pair' tags should refer to the id of an existing Pair.[NewLine] - 'Session' tags should refer to the id of an existing HTTP/Session.[NewLine] - 'Trigger' tags should refer to the id of an existing Trigger.[NewLine] - 'Action' tags should refer to the id of an existing Action.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="6">
						<Name namespace="Protocol.Groups.Group.Content.Trigger">CheckTriggerTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7001">
									<InputParameters>
										<InputParameter id="0" value="Content/Trigger">tagName</InputParameter>
										<InputParameter id="1" value="Trigger">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">triggerId</InputParameter>
										<InputParameter id="4" value="Group">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">groupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Group/Content tag should contain a list of 'Param', 'Pair', 'Session', 'Trigger' or 'Action' tags. Note that only one type of them is allowed for a specific Group.[NewLine] - 'Param' tags should refer to the id of an existing Param.[NewLine] - 'Pair' tags should refer to the id of an existing Pair.[NewLine] - 'Session' tags should refer to the id of an existing HTTP/Session.[NewLine] - 'Trigger' tags should refer to the id of an existing Trigger.[NewLine] - 'Action' tags should refer to the id of an existing Action.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyTriggerTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="Content/Trigger">tagName</InputParameter>
										<InputParameter id="1" value="Group">itemKind</InputParameter>
										<InputParameter id="2">groupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Group/Content tag should contain a list of 'Param', 'Pair', 'Session', 'Trigger' or 'Action' tags. Note that only one type of them is allowed for a specific Group.[NewLine] - 'Param' tags should refer to the id of an existing Param.[NewLine] - 'Pair' tags should refer to the id of an existing Pair.[NewLine] - 'Session' tags should refer to the id of an existing HTTP/Session.[NewLine] - 'Trigger' tags should refer to the id of an existing Trigger.[NewLine] - 'Action' tags should refer to the id of an existing Action.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidTriggerTag</Name>
								<GroupDescription />
								<Description templateId="4001">
									<InputParameters>
										<InputParameter id="0">value</InputParameter>
										<InputParameter id="1" value="Content/Trigger">tagName</InputParameter>
										<InputParameter id="2" value="Group">itemKind</InputParameter>
										<InputParameter id="3">groupId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Group/Content tag should contain a list of 'Param', 'Pair', 'Session', 'Trigger' or 'Action' tags. Note that only one type of them is allowed for a specific Group.[NewLine] - 'Param' tags should refer to the id of an existing Param.[NewLine] - 'Pair' tags should refer to the id of an existing Pair.[NewLine] - 'Session' tags should refer to the id of an existing HTTP/Session.[NewLine] - 'Trigger' tags should refer to the id of an existing Trigger.[NewLine] - 'Action' tags should refer to the id of an existing Action.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="7">
						<Name namespace="Protocol.Groups.Group">CheckConnectionPidAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="connectionPid">attributeName</InputParameter>
										<InputParameter id="1" value="Group">itemKind</InputParameter>
										<InputParameter id="2">groupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The connectionPid attribute should contain the id of an existing parameter with the id of the connection.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>InvalidAttribute</Name>
								<GroupDescription />
								<Description templateId="4101">
									<InputParameters>
										<InputParameter id="0" value="connectionPid">attributeName</InputParameter>
										<InputParameter id="1">connectionPid</InputParameter>
										<InputParameter id="2" value="Group">itemKind</InputParameter>
										<InputParameter id="3">groupId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The connectionPid attribute should contain the id of an existing parameter with the id of the connection.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7101">
									<InputParameters>
										<InputParameter id="0" value="connectionPid">attributeName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">pid</InputParameter>
										<InputParameter id="4" value="Group">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">groupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The connectionPid attribute should contain the id of an existing parameter with the id of the connection.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="8">
						<Name namespace="Protocol.Groups.Group">CheckIdAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1100">
									<InputParameters>
										<InputParameter id="0" value="Group@id">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each group.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each group should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2100">
									<InputParameters>
										<InputParameter id="0" value="Group@id">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each group.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each group should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3100">
									<InputParameters>
										<InputParameter id="0" value="Group@id">attributeName</InputParameter>
										<InputParameter id="1">attributeValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each group.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each group should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4101">
									<InputParameters>
										<InputParameter id="0" value="Group@id">attributeName</InputParameter>
										<InputParameter id="1">groupId</InputParameter>
										<InputParameter id="2" value="Group">itemKind</InputParameter>
										<InputParameter id="3">groupName</InputParameter>
										<InputParameter id="4" value="name">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each group.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each group should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>DuplicatedId</Name>
								<GroupDescription />
								<Description templateId="6001">
									<InputParameters>
										<InputParameter id="0" value="Group">itemKind</InputParameter>
										<InputParameter id="1">groupId</InputParameter>
										<InputParameter id="2">groupNames</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each group.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each group should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="9">
						<Name namespace="Protocol.Groups.Group.Condition">CheckConditionTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>InvalidCondition</Name>
								<GroupDescription />
								<Description templateId="4901">
									<InputParameters>
										<InputParameter id="0">conditionString</InputParameter>
										<InputParameter id="1">invalidityReason</InputParameter>
										<InputParameter id="2" value="Group">itemKind</InputParameter>
										<InputParameter id="3" value="ID">idOrPid</InputParameter>
										<InputParameter id="4">groupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A 'Group/Condition' should always contain a statement returning a boolean.[NewLine]See DDL for more information.[NewLine][NewLine]Here are a few examples of mistakes covered by this error:[NewLine]- Empty condition.[NewLine]- Malformed condition:[NewLine]  - The 'id:' placeholder used to retrieve a parameter value is incorrectly defined.[NewLine]  - The number of opening & closing parenthesis is not matching.[NewLine]  - '&&', '||' is used instead of 'AND', 'OR'.[NewLine]- Condition that is not a boolean expression.[NewLine]- Fully hard-coded boolean expression (No reference to any parameter value).[NewLine]- etc.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7001">
									<InputParameters>
										<InputParameter id="0" value="Group/Condition">tagName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="3">paramId</InputParameter>
										<InputParameter id="4" value="Group">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">groupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A 'Group/Condition' should always contain a statement returning a boolean.[NewLine]See DDL for more information.[NewLine][NewLine]Here are a few examples of mistakes covered by this error:[NewLine]- Empty condition.[NewLine]- Malformed condition:[NewLine]  - The 'id:' placeholder used to retrieve a parameter value is incorrectly defined.[NewLine]  - The number of opening & closing parenthesis is not matching.[NewLine]  - '&&', '||' is used instead of 'AND', 'OR'.[NewLine]- Condition that is not a boolean expression.[NewLine]- Fully hard-coded boolean expression (No reference to any parameter value).[NewLine]- etc.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>ConditionCanBeSimplified</Name>
								<GroupDescription />
								<Description templateId="4902">
									<InputParameters>
										<InputParameter id="0">conditionString</InputParameter>
										<InputParameter id="1" value="Group">itemKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPid</InputParameter>
										<InputParameter id="3">groupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Group/Condition' can be simplified. Some examples of when the condition can be simplified:[NewLine]  - The condition contains redundant parentheses.[NewLine]  - The condition does not contain a variable and therefore can either be dropped completely (or a variable must be included).]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="10">
						<Name namespace="Protocol.Groups.Group.Content">CheckContentTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>IncompatibleContentWithGroupType</Name>
								<GroupDescription />
								<Description>
									<Format>Incompatible 'Group/Content' child '{1}' with 'Group/Type' '{0}'. Group ID '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">groupType</InputParameter>
										<InputParameter id="1">contentChildTagName</InputParameter>
										<InputParameter id="2">groupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Depending on the Group/Type, the Group/Content can only contain certain tags:[NewLine]- 'poll': Can contain multiple instances of one of the below tags but not a mix of them:[NewLine]    - 'Param'[NewLine]    - 'Pair'[NewLine]    - 'Session'[NewLine]- 'action' / 'poll action': Can only contain Action tags.[NewLine]- 'trigger' / 'poll trigger': Can only contain Trigger tags.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>MixedTypes</Name>
								<GroupDescription />
								<Description>
									<Format>Unsupported mixed group content '{0}'. Group ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">contentTypes</InputParameter>
										<InputParameter id="1">groupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Depending on the Group/Type, the Group/Content can only contain certain tags:[NewLine]- 'poll': Can contain multiple instances of one of the below tags but not a mix of them:[NewLine]    - 'Param'[NewLine]    - 'Pair'[NewLine]    - 'Session'[NewLine]- 'action' / 'poll action': Can only contain Action tags.[NewLine]- 'trigger' / 'poll trigger': Can only contain Trigger tags.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>MaxItemsMultipleGet</Name>
								<GroupDescription />
								<Description>
									<Format>Group with 'multipleGet' true contains more than 20 content elements. Group ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">groupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[When 'Content@multipleGet' is set to true. It recommended to limit the Group/Content to a max of 20 Param tags.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>MaxItems</Name>
								<GroupDescription />
								<Description>
									<Format>Group contains more than 10 content elements. Group ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">groupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[It is recommended to limit the Group/Content to a max of 10 tags.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>MissingTag</Name>
								<GroupDescription />
								<Description templateId="1001">
									<InputParameters>
										<InputParameter id="0" value="Content">tagName</InputParameter>
										<InputParameter id="1" value="Group">itemKind</InputParameter>
										<InputParameter id="2">groupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Typically, a non-empty 'Group/Content' is mandatory on groups except for the following exceptional cases where the Content tag should be ommitted:[NewLine]- Multi-threaded groups[NewLine]- When the protocol doesn't have any group at all. In that case, it is needed to add a Group without any content.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
				</Checks>
			</Category>
			<Category id="5">
				<Name>Trigger</Name>
				<Checks>
					<Check id="1">
						<Name namespace="Protocol.Triggers.Trigger.On">CheckIdAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1101">
									<InputParameters>
										<InputParameter id="0" value="On@id">attributeName</InputParameter>
										<InputParameter id="1" value="Trigger">itemKind</InputParameter>
										<InputParameter id="2">triggerId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[When triggering on:[NewLine]  - parameter[NewLine]  - command[NewLine]  - response[NewLine]  - pair[NewLine]  - group[NewLine]  - timer[NewLine]  - session[NewLine]A 'Trigger/On@id' attribute is expected and should have one of the following values:[NewLine]  - 'each': in this case, the protocol should have at least one item of the type mentioned in the 'Trigger/On' tag.[NewLine]  - The ID of an item of the type mentioned in the 'Trigger/On' tag.[NewLine][NewLine]When triggering on:[NewLine]  - protocol[NewLine]  - communication[NewLine]No 'Trigger/On@id' attribute is expected.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>ExcessiveAttribute</Name>
								<GroupDescription />
								<Description>
									<Format>Excessive 'id' Attribute in tag 'On' with value '{0}'. Trigger ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">onTagValue</InputParameter>
										<InputParameter id="1">triggerId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[When triggering on:[NewLine]  - parameter[NewLine]  - command[NewLine]  - response[NewLine]  - pair[NewLine]  - group[NewLine]  - timer[NewLine]  - session[NewLine]A 'Trigger/On@id' attribute is expected and should have one of the following values:[NewLine]  - 'each': in this case, the protocol should have at least one item of the type mentioned in the 'Trigger/On' tag.[NewLine]  - The ID of an item of the type mentioned in the 'Trigger/On' tag.[NewLine][NewLine]When triggering on:[NewLine]  - protocol[NewLine]  - communication[NewLine]No 'Trigger/On@id' attribute is expected.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2100">
									<InputParameters>
										<InputParameter id="0" value="id">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[When triggering on:[NewLine]  - parameter[NewLine]  - command[NewLine]  - response[NewLine]  - pair[NewLine]  - group[NewLine]  - timer[NewLine]  - session[NewLine]A 'Trigger/On@id' attribute is expected and should have one of the following values:[NewLine]  - 'each': in this case, the protocol should have at least one item of the type mentioned in the 'Trigger/On' tag.[NewLine]  - The ID of an item of the type mentioned in the 'Trigger/On' tag.[NewLine][NewLine]When triggering on:[NewLine]  - protocol[NewLine]  - communication[NewLine]No 'Trigger/On@id' attribute is expected.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>MultipleIds</Name>
								<GroupDescription />
								<Description>
									<Format>Attribute 'On@id' cannot have multiple values. Trigger ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">triggerId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[When triggering on:[NewLine]  - parameter[NewLine]  - command[NewLine]  - response[NewLine]  - pair[NewLine]  - group[NewLine]  - timer[NewLine]  - session[NewLine]A 'Trigger/On@id' attribute is expected and should have one of the following values:[NewLine]  - 'each': in this case, the protocol should have at least one item of the type mentioned in the 'Trigger/On' tag.[NewLine]  - The ID of an item of the type mentioned in the 'Trigger/On' tag.[NewLine][NewLine]When triggering on:[NewLine]  - protocol[NewLine]  - communication[NewLine]No 'Trigger/On@id' attribute is expected.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4110">
									<InputParameters>
										<InputParameter id="0" value="id">attributeName</InputParameter>
										<InputParameter id="1">attributeValue</InputParameter>
										<InputParameter id="2">allowedValues</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[When triggering on:[NewLine]  - parameter[NewLine]  - command[NewLine]  - response[NewLine]  - pair[NewLine]  - group[NewLine]  - timer[NewLine]  - session[NewLine]A 'Trigger/On@id' attribute is expected and should have one of the following values:[NewLine]  - 'each': in this case, the protocol should have at least one item of the type mentioned in the 'Trigger/On' tag.[NewLine]  - The ID of an item of the type mentioned in the 'Trigger/On' tag.[NewLine][NewLine]When triggering on:[NewLine]  - protocol[NewLine]  - communication[NewLine]No 'Trigger/On@id' attribute is expected.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7101">
									<InputParameters>
										<InputParameter id="0" value="On@id">attributeName</InputParameter>
										<InputParameter id="1">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">referenceId</InputParameter>
										<InputParameter id="4" value="Trigger">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">triggerId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[When triggering on:[NewLine]  - parameter[NewLine]  - command[NewLine]  - response[NewLine]  - pair[NewLine]  - group[NewLine]  - timer[NewLine]  - session[NewLine]A 'Trigger/On@id' attribute is expected and should have one of the following values:[NewLine]  - 'each': in this case, the protocol should have at least one item of the type mentioned in the 'Trigger/On' tag.[NewLine]  - The ID of an item of the type mentioned in the 'Trigger/On' tag.[NewLine][NewLine]When triggering on:[NewLine]  - protocol[NewLine]  - communication[NewLine]No 'Trigger/On@id' attribute is expected.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>LeadingZeros</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid use of leading zeros on 'On@id' attribute. Trigger ID '{0}'. Current value '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">triggerId</InputParameter>
										<InputParameter id="1">attributeValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[When triggering on:[NewLine]  - parameter[NewLine]  - command[NewLine]  - response[NewLine]  - pair[NewLine]  - group[NewLine]  - timer[NewLine]  - session[NewLine]A 'Trigger/On@id' attribute is expected and should have one of the following values:[NewLine]  - 'each': in this case, the protocol should have at least one item of the type mentioned in the 'Trigger/On' tag.[NewLine]  - The ID of an item of the type mentioned in the 'Trigger/On' tag.[NewLine][NewLine]When triggering on:[NewLine]  - protocol[NewLine]  - communication[NewLine]No 'Trigger/On@id' attribute is expected.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="8">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3100">
									<InputParameters>
										<InputParameter id="0" value="id">attributeName</InputParameter>
										<InputParameter id="1">attributeValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[When triggering on:[NewLine]  - parameter[NewLine]  - command[NewLine]  - response[NewLine]  - pair[NewLine]  - group[NewLine]  - timer[NewLine]  - session[NewLine]A 'Trigger/On@id' attribute is expected and should have one of the following values:[NewLine]  - 'each': in this case, the protocol should have at least one item of the type mentioned in the 'Trigger/On' tag.[NewLine]  - The ID of an item of the type mentioned in the 'Trigger/On' tag.[NewLine][NewLine]When triggering on:[NewLine]  - protocol[NewLine]  - communication[NewLine]No 'Trigger/On@id' attribute is expected.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="3">
						<Name namespace="Protocol.Triggers.Trigger.Time">CheckTimeTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MultipleAfterStartup</Name>
								<GroupDescription />
								<Description>
									<Format>Multiple after startup Triggers. Trigger IDs '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">triggerId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Multiple Trigger after Startup Triggers need to be checked and merged into one Trigger.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[When defining multiple 'after startup' triggers, we have no way to know in which order those triggers will be executed. To keep things under control, it's better to have only one 'after startup' trigger.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="5">
						<Name namespace="Protocol.Triggers.Trigger.Condition">CheckConditionTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>InvalidCondition</Name>
								<GroupDescription />
								<Description templateId="4901">
									<InputParameters>
										<InputParameter id="0">conditionString</InputParameter>
										<InputParameter id="1">invalidityReason</InputParameter>
										<InputParameter id="2" value="Trigger">itemKind</InputParameter>
										<InputParameter id="3" value="ID">idOrPid</InputParameter>
										<InputParameter id="4">triggerId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A 'Trigger/Condition' should always contain a statement returning a boolean.[NewLine]See DDL for more information.[NewLine][NewLine]Here are a few examples of mistakes covered by this error:[NewLine]- Empty condition.[NewLine]- Malformed condition:[NewLine]  - The 'id:' placeholder used to retrieve a parameter value is incorrectly defined.[NewLine]  - The number of opening & closing parenthesis is not matching.[NewLine]  - '&&', '||' is used instead of 'AND', 'OR'.[NewLine]- Condition that is not a boolean expression.[NewLine]- Fully hard-coded boolean expression (No reference to any parameter value).[NewLine]- etc.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7001">
									<InputParameters>
										<InputParameter id="0" value="Trigger/Condition">tagName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="3">paramId</InputParameter>
										<InputParameter id="4" value="Trigger">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">triggerId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A 'Trigger/Condition' should always contain a statement returning a boolean.[NewLine]See DDL for more information.[NewLine][NewLine]Here are a few examples of mistakes covered by this error:[NewLine]- Empty condition.[NewLine]- Malformed condition:[NewLine]  - The 'id:' placeholder used to retrieve a parameter value is incorrectly defined.[NewLine]  - The number of opening & closing parenthesis is not matching.[NewLine]  - '&&', '||' is used instead of 'AND', 'OR'.[NewLine]- Condition that is not a boolean expression.[NewLine]- Fully hard-coded boolean expression (No reference to any parameter value).[NewLine]- etc.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>ConditionCanBeSimplified</Name>
								<GroupDescription />
								<Description templateId="4902">
									<InputParameters>
										<InputParameter id="0">conditionString</InputParameter>
										<InputParameter id="1" value="Trigger">itemKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPid</InputParameter>
										<InputParameter id="3">triggerId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Trigger/Condition' can be simplified. Some examples of when the condition can be simplified:[NewLine]  - The condition contains redundant parentheses.[NewLine]  - The condition does not contain a variable and therefore can either be dropped completely (or a variable must be included).]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="6">
						<Name namespace="Protocol.Triggers.Trigger">CheckOnTagTimeTagCombination</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>InvalidOnTagTimeTagCombination</Name>
								<GroupDescription />
								<Description>
									<Format>The On tag value '{0}' can't be used in combination with the Time tag value '{1}'. Trigger ID '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">onTagValue</InputParameter>
										<InputParameter id="1">timeTagValue</InputParameter>
										<InputParameter id="2">triggerId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>DuplicateTrigger</Name>
								<GroupDescription />
								<Description>
									<Format>Multiple triggers with same Time/On combination. Trigger IDs '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">triggerId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="7">
						<Name namespace="Protocol.Triggers.Trigger">CheckAfterStartupFlow</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>InvalidAfterStartupTriggerCondition</Name>
								<GroupDescription />
								<Description>
									<Format>After startup Trigger can't have a Condition. Trigger ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">triggerId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Move the condition to a later step.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A condition should not be used until the after startup flow went through the protocol thread (via a poll group).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>InvalidAfterStartupActionCondition</Name>
								<GroupDescription />
								<Description>
									<Format>After startup Action can't have a Condition. Action ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">actionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Move the condition to a later step.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A condition should not be used until the after startup flow went through the protocol thread (via a poll group).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidAfterStartupTriggerType</Name>
								<GroupDescription />
								<Description>
									<Format>After startup Trigger must have a Type tag with value 'action'. Trigger ID '{0}'</Format>
									<InputParameters>
										<InputParameter id="0">triggerId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[After startup flow must be:[NewLine]Trigger: after startup On protocol -> Action: 'execute next/execute one top/execute/execute one now' On Group -> Group: poll/poll action/poll trigger.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidAfterStartupActionOn</Name>
								<GroupDescription />
								<Description>
									<Format>After startup Action must have an On tag with value 'group'. Action ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">actionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[After startup flow must be:[NewLine]Trigger: after startup On protocol -> Action: 'execute next/execute one top/execute/execute one now' On Group -> Group: poll/poll action/poll trigger.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>InvalidAfterStartupActionType</Name>
								<GroupDescription />
								<Description>
									<Format>After startup Action must have a Type tag with value 'execute next' or 'execute'. Action ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">actionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[After startup flow must be:[NewLine]Trigger: after startup On protocol -> Action: 'execute next/execute one top/execute/execute one now' On Group -> Group: poll/poll action/poll trigger.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>InvalidAfterStartupGroupType</Name>
								<GroupDescription />
								<Description>
									<Format>After startup Group must have a Type tag with value 'poll', 'poll trigger' or 'poll action'. Group ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">groupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[After startup flow must be:[NewLine]Trigger: after startup On protocol -> Action: 'execute next/execute one top/execute/execute one now' On Group -> Group: poll/poll action/poll trigger.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="8">
						<Name namespace="Protocol.Triggers.Trigger">CheckIdAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1100">
									<InputParameters>
										<InputParameter id="0" value="Trigger@id">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each trigger.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each trigger should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2100">
									<InputParameters>
										<InputParameter id="0" value="Trigger@id">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each trigger.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each trigger should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3100">
									<InputParameters>
										<InputParameter id="0" value="Trigger@id">attributeName</InputParameter>
										<InputParameter id="1">attributeValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each trigger.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each trigger should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4101">
									<InputParameters>
										<InputParameter id="0" value="Trigger@id">attributeName</InputParameter>
										<InputParameter id="1">triggerId</InputParameter>
										<InputParameter id="2" value="Trigger">itemKind</InputParameter>
										<InputParameter id="3">triggerName</InputParameter>
										<InputParameter id="4" value="name">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each trigger.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each trigger should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>DuplicatedId</Name>
								<GroupDescription />
								<Description templateId="6001">
									<InputParameters>
										<InputParameter id="0" value="Trigger">itemKind</InputParameter>
										<InputParameter id="1">triggerId</InputParameter>
										<InputParameter id="2">triggerNames</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each trigger.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each trigger should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="9">
						<Name namespace="Protocol.Triggers.Trigger.Name">CheckNameTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DuplicatedValue</Name>
								<GroupDescription />
								<Description templateId="6101">
									<InputParameters>
										<InputParameter id="0" value="Trigger">itemKind</InputParameter>
										<InputParameter id="1" value="Name">valueKind</InputParameter>
										<InputParameter id="2">duplicateName</InputParameter>
										<InputParameter id="3">triggerIds</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="10">
						<Name namespace="Protocol.Triggers.Trigger.Content.Id">CheckIdTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingTag</Name>
								<GroupDescription />
								<Description templateId="1001">
									<InputParameters>
										<InputParameter id="0" value="Content/Id">tagName</InputParameter>
										<InputParameter id="1" value="Trigger">itemKind</InputParameter>
										<InputParameter id="2">triggerId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Content tag of every Trigger should contain at least one Id tag.[NewLine]Such Id tag should contain an unsigned number and refer to the id of an existing Trigger or Action depending on the 'Trigger/Type' tag value.[NewLine][NewLine]Note that only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="Content/Id">tagName</InputParameter>
										<InputParameter id="1" value="Trigger">itemKind</InputParameter>
										<InputParameter id="2">triggerId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Content tag of every Trigger should contain at least one Id tag.[NewLine]Such Id tag should contain an unsigned number and refer to the id of an existing Trigger or Action depending on the 'Trigger/Type' tag value.[NewLine][NewLine]Note that only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedTag</Name>
								<GroupDescription />
								<Description templateId="3001">
									<InputParameters>
										<InputParameter id="0" value="Content/Id">tagName</InputParameter>
										<InputParameter id="1" value="Trigger">itemKind</InputParameter>
										<InputParameter id="2">triggerId</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Content tag of every Trigger should contain at least one Id tag.[NewLine]Such Id tag should contain an unsigned number and refer to the id of an existing Trigger or Action depending on the 'Trigger/Type' tag value.[NewLine][NewLine]Note that only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4001">
									<InputParameters>
										<InputParameter id="0">tagValue</InputParameter>
										<InputParameter id="1" value="Content/Id">tagName</InputParameter>
										<InputParameter id="2" value="Trigger">itemKind</InputParameter>
										<InputParameter id="3">triggerId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Content tag of every Trigger should contain at least one Id tag.[NewLine]Such Id tag should contain an unsigned number and refer to the id of an existing Trigger or Action depending on the 'Trigger/Type' tag value.[NewLine][NewLine]Note that only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7001">
									<InputParameters>
										<InputParameter id="0" value="Content/Id">tagName</InputParameter>
										<InputParameter id="1">targetKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">targetId</InputParameter>
										<InputParameter id="4" value="Trigger">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">triggerId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Content tag of every Trigger should contain at least one Id tag.[NewLine]Such Id tag should contain an unsigned number and refer to the id of an existing Trigger or Action depending on the 'Trigger/Type' tag value.[NewLine][NewLine]Note that only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
				</Checks>
			</Category>
			<Category id="6">
				<Name>Action</Name>
				<Checks>
					<Check id="1">
						<Name namespace="Protocol.Actions.Action.Name">CheckNameTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DuplicatedValue</Name>
								<GroupDescription />
								<Description templateId="6101">
									<InputParameters>
										<InputParameter id="0" value="Action">itemKind</InputParameter>
										<InputParameter id="1" value="Name">valueKind</InputParameter>
										<InputParameter id="2">duplicateName</InputParameter>
										<InputParameter id="3">actionIds</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="2">
						<Name namespace="Protocol.Actions.Action">CheckIdAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1100">
									<InputParameters>
										<InputParameter id="0" value="Action@id">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Action@id attribute is used internally as the identifier for each action.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each action should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2100">
									<InputParameters>
										<InputParameter id="0" value="Action@id">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Action@id attribute is used internally as the identifier for each action.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each action should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3100">
									<InputParameters>
										<InputParameter id="0" value="Action@id">attributeName</InputParameter>
										<InputParameter id="1">attributeValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Action@id attribute is used internally as the identifier for each action.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each action should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4101">
									<InputParameters>
										<InputParameter id="0" value="Action@id">attributeName</InputParameter>
										<InputParameter id="1">actionId</InputParameter>
										<InputParameter id="2" value="Action">itemKind</InputParameter>
										<InputParameter id="3">actionName</InputParameter>
										<InputParameter id="4" value="name">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Action@id attribute is used internally as the identifier for each action.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each action should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>DuplicatedId</Name>
								<GroupDescription />
								<Description templateId="6001">
									<InputParameters>
										<InputParameter id="0" value="Action">itemKind</InputParameter>
										<InputParameter id="1">actionId</InputParameter>
										<InputParameter id="2">actionNames</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Action@id attribute is used internally as the identifier for each action.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each action should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="3">
						<Name namespace="Protocol.Actions.Action.On">CheckIdAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1111">
									<InputParameters>
										<InputParameter id="0" value="Action/On@id">attributeName</InputParameter>
										<InputParameter id="1" value="Action/Type">reasonTitle</InputParameter>
										<InputParameter id="2">actionType</InputParameter>
										<InputParameter id="3" value="Action">itemKind</InputParameter>
										<InputParameter id="4" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="5">actionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Action/On@id' attribute is mandatory if 'Action/Type' is set to one of the following values:[NewLine]add to execute, aggregate, append, append data, change length, clear, clear length info, clear on display, copy, copy reverse, crc, execute, execute next, execute one, execute one now, execute one top, force execute, go, increment, length, make, multiply, normalize, pow, read, read file, read stuffing, replace, replace data, reschedule, restart timer, reverse, run actions, save, set and get with wait, set next, set with wait, start, stop, stuffing, timeout.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttibute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="On@id">attributeName</InputParameter>
										<InputParameter id="1" value="Action">itemKind</InputParameter>
										<InputParameter id="2">actionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Action/On@id' attribute can contain a semicolon list of unsigned number which refer to the id of an existing protocol item. The type of item is specified by the inner value of the 'Action/On' tag.[NewLine]If the 'Action/On@id' attribute is not present, the action will apply to all item of the type given by the value of the 'Action/On' tag.[NewLine][NewLine]Note that only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedValueInAttribute</Name>
								<GroupDescription />
								<Description templateId="3601">
									<InputParameters>
										<InputParameter id="0">untrimmedValue</InputParameter>
										<InputParameter id="1" value="On@id">attributeName</InputParameter>
										<InputParameter id="2" value="Action">itemKind</InputParameter>
										<InputParameter id="3" value="ID">idOrPid</InputParameter>
										<InputParameter id="4">actionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Action/On@id' attribute can contain a semicolon list of unsigned number which refer to the id of an existing protocol item. The type of item is specified by the inner value of the 'Action/On' tag.[NewLine]If the 'Action/On@id' attribute is not present, the action will apply to all item of the type given by the value of the 'Action/On' tag.[NewLine][NewLine]Note that only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4101">
									<InputParameters>
										<InputParameter id="0" value="On@id">attributeName</InputParameter>
										<InputParameter id="1">attributeValue</InputParameter>
										<InputParameter id="2" value="Action">itemKind</InputParameter>
										<InputParameter id="3">actionId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Action/On@id' attribute can contain a semicolon list of unsigned number which refer to the id of an existing protocol item. The type of item is specified by the inner value of the 'Action/On' tag.[NewLine]If the 'Action/On@id' attribute is not present, the action will apply to all item of the type given by the value of the 'Action/On' tag.[NewLine][NewLine]Note that only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7101">
									<InputParameters>
										<InputParameter id="0" value="On@id">attributeName</InputParameter>
										<InputParameter id="1">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">referenceId</InputParameter>
										<InputParameter id="4" value="Action">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">actionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Action/On@id' attribute can contain a semicolon list of unsigned number which refer to the id of an existing protocol item. The type of item is specified by the inner value of the 'Action/On' tag.[NewLine]If the 'Action/On@id' attribute is not present, the action will apply to all item of the type given by the value of the 'Action/On' tag.[NewLine][NewLine]Note that only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="4">
						<Name namespace="Protocol.Actions.Action.Condition">CheckConditionTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>InvalidCondition</Name>
								<GroupDescription />
								<Description templateId="4901">
									<InputParameters>
										<InputParameter id="0">conditionString</InputParameter>
										<InputParameter id="1">invalidityReason</InputParameter>
										<InputParameter id="2" value="Action">itemKind</InputParameter>
										<InputParameter id="3" value="ID">idOrPid</InputParameter>
										<InputParameter id="4">actionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A 'Action/Condition' should always contain a statement returning a boolean.[NewLine]See DDL for more information.[NewLine][NewLine]Here are a few examples of mistakes covered by this error:[NewLine]- Empty condition.[NewLine]- Malformed condition:[NewLine]  - The 'id:' placeholder used to retrieve a parameter value is incorrectly defined.[NewLine]  - The number of opening & closing parentheses is not matching.[NewLine]  - '&&', '||' is used instead of 'AND', 'OR'.[NewLine]- Condition that is not a boolean expression.[NewLine]- Fully hard-coded boolean expression (No reference to any parameter value).[NewLine]- etc.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7001">
									<InputParameters>
										<InputParameter id="0" value="Action/Condition">tagName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="3">paramId</InputParameter>
										<InputParameter id="4" value="Action">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">actionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A 'Action/Condition' should always contain a statement returning a boolean.[NewLine]See DDL for more information.[NewLine][NewLine]Here are a few examples of mistakes covered by this error:[NewLine]- Empty condition.[NewLine]- Malformed condition:[NewLine]  - The 'id:' placeholder used to retrieve a parameter value is incorrectly defined.[NewLine]  - The number of opening & closing parentheses is not matching.[NewLine]  - '&&', '||' is used instead of 'AND', 'OR'.[NewLine]- Condition that is not a boolean expression.[NewLine]- Fully hard-coded boolean expression (No reference to any parameter value).[NewLine]- etc.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>ConditionCanBeSimplified</Name>
								<GroupDescription />
								<Description templateId="4902">
									<InputParameters>
										<InputParameter id="0">conditionString</InputParameter>
										<InputParameter id="1" value="Action">itemKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPid</InputParameter>
										<InputParameter id="3">actionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Action/Condition' can be simplified. Some examples of when the condition can be simplified:[NewLine]  - The condition contains redundant parentheses.[NewLine]  - The condition does not contain a variable and therefore can either be dropped completely (or a variable must be included).]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="5">
						<Name namespace="Protocol.Actions.Action.Type">CheckTypeTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingTag</Name>
								<GroupDescription />
								<Description templateId="1001">
									<InputParameters>
										<InputParameter id="0" value="Type">tagName</InputParameter>
										<InputParameter id="1" value="Action">itemKind</InputParameter>
										<InputParameter id="2">actionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Action/Type' tag is mandatory and should contain one of the following values:[NewLine]add to execute, aggregate, append, append data, change length, clear, clear length info, clear on display, close, copy, copy reverse, crc, execute, execute next, execute one, execute one top, execute one now, force execute, go, increment, length, lock, unlock, make, merge, multiply, normalize, open, pow, priority lock, priority unlock, read, read file, read stuffing, replace, replace data, reschedule, restart timer, reverse, run actions, save, set, set and get with wait, set info, set next, set with wait, sleep, start, stop, stop current group, stuffing, swap column, timeout, wmi.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="Type">tagName</InputParameter>
										<InputParameter id="1" value="Action">itemKind</InputParameter>
										<InputParameter id="2">actionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Action/Type' tag is mandatory and should contain one of the following values:[NewLine]add to execute, aggregate, append, append data, change length, clear, clear length info, clear on display, close, copy, copy reverse, crc, execute, execute next, execute one, execute one top, execute one now, force execute, go, increment, length, lock, unlock, make, merge, multiply, normalize, open, pow, priority lock, priority unlock, read, read file, read stuffing, replace, replace data, reschedule, restart timer, reverse, run actions, save, set, set and get with wait, set info, set next, set with wait, sleep, start, stop, stop current group, stuffing, swap column, timeout, wmi.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedTag</Name>
								<GroupDescription />
								<Description templateId="3001">
									<InputParameters>
										<InputParameter id="0" value="Type">tagName</InputParameter>
										<InputParameter id="1" value="Action">itemKind</InputParameter>
										<InputParameter id="2">actionId</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Action/Type' tag is mandatory and should contain one of the following values:[NewLine]add to execute, aggregate, append, append data, change length, clear, clear length info, clear on display, close, copy, copy reverse, crc, execute, execute next, execute one, execute one top, execute one now, force execute, go, increment, length, lock, unlock, make, merge, multiply, normalize, open, pow, priority lock, priority unlock, read, read file, read stuffing, replace, replace data, reschedule, restart timer, reverse, run actions, save, set, set and get with wait, set info, set next, set with wait, sleep, start, stop, stop current group, stuffing, swap column, timeout, wmi.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4001">
									<InputParameters>
										<InputParameter id="0">actionType</InputParameter>
										<InputParameter id="1" value="Type">tagName</InputParameter>
										<InputParameter id="2" value="Action">itemKind</InputParameter>
										<InputParameter id="3">actionId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Action/Type' tag is mandatory and should contain one of the following values:[NewLine]add to execute, aggregate, append, append data, change length, clear, clear length info, clear on display, close, copy, copy reverse, crc, execute, execute next, execute one, execute one top, execute one now, force execute, go, increment, length, lock, unlock, make, merge, multiply, normalize, open, pow, priority lock, priority unlock, read, read file, read stuffing, replace, replace data, reschedule, restart timer, reverse, run actions, save, set, set and get with wait, set info, set next, set with wait, sleep, start, stop, stop current group, stuffing, swap column, timeout, wmi.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="6">
						<Name namespace="Protocol.Actions.Action.On">CheckOnTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingTag</Name>
								<GroupDescription />
								<Description templateId="1001">
									<InputParameters>
										<InputParameter id="0" value="On">tagName</InputParameter>
										<InputParameter id="1" value="Action">itemKind</InputParameter>
										<InputParameter id="2">actionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Action/On' tag is mandatory and should contain one of the following values:[NewLine]command, group, pair, parameter, protocol, response, timer.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="On">tagName</InputParameter>
										<InputParameter id="1" value="Action">itemKind</InputParameter>
										<InputParameter id="2">actionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Action/On' tag is mandatory and should contain one of the following values:[NewLine]command, group, pair, parameter, protocol, response, timer.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedTag</Name>
								<GroupDescription />
								<Description templateId="3001">
									<InputParameters>
										<InputParameter id="0" value="On">tagName</InputParameter>
										<InputParameter id="1" value="Action">itemKind</InputParameter>
										<InputParameter id="2">actionId</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Action/On' tag is mandatory and should contain one of the following values:[NewLine]command, group, pair, parameter, protocol, response, timer.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4001">
									<InputParameters>
										<InputParameter id="0">actionOn</InputParameter>
										<InputParameter id="1" value="On">tagName</InputParameter>
										<InputParameter id="2" value="Action">itemKind</InputParameter>
										<InputParameter id="3">actionId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Action/On' tag is mandatory and should contain one of the following values:[NewLine]command, group, pair, parameter, protocol, response, timer.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="7">
						<Name namespace="Protocol.Actions.Action">CheckActionTypes</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>IncompatibleTypeVsOnTag</Name>
								<GroupDescription />
								<Description templateId="9001">
									<InputParameters>
										<InputParameter id="0" value="Action/Type">item1Title</InputParameter>
										<InputParameter id="1">actionType</InputParameter>
										<InputParameter id="2" value="Action/On">item2Title</InputParameter>
										<InputParameter id="3">actionOn</InputParameter>
										<InputParameter id="4" value="Action">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPid</InputParameter>
										<InputParameter id="6">actionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Only the following combination of 'Action/On' and 'Action/Type' are supported.[NewLine]- command[NewLine]    - crc[NewLine]    - length[NewLine]    - make[NewLine]    - replace[NewLine]    - replace data[NewLine]    - stuffing[NewLine]- group[NewLine]    - add to execute[NewLine]    - execute[NewLine]    - execute next[NewLine]    - execute one[NewLine]    - execute one top[NewLine]    - execute one now[NewLine]    - force execute[NewLine]    - set[NewLine]    - set with wait[NewLine]- pair[NewLine]    - set next[NewLine]    - timeout[NewLine]- parameter[NewLine]    - aggregate[NewLine]    - append[NewLine]    - append data[NewLine]    - change lenght[NewLine]    - clear[NewLine]    - clear on display[NewLine]    - copy[NewLine]    - copy reverse[NewLine]    - go[NewLine]    - increment[NewLine]    - multiply[NewLine]    - normalize[NewLine]    - pow[NewLine]    - read[NewLine]    - replace data[NewLine]    - reverse[NewLine]    - run actions[NewLine]    - save[NewLine]    - set[NewLine]    - set and get with wait[NewLine]    - set info[NewLine]    - set with wait[NewLine]- protocol[NewLine]    - close[NewLine]    - lock/unlock[NewLine]    - merge[NewLine]    - open[NewLine]    - priority lock/unlock[NewLine]    - read file[NewLine]    - sleep[NewLine]    - stop current group[NewLine]    - swap column[NewLine]    - wmi[NewLine]- response[NewLine]    - clear[NewLine]    - clear length info[NewLine]    - crc[NewLine]    - length[NewLine]    - read[NewLine]    - read stuffing[NewLine]    - replace[NewLine]    - replace data[NewLine]    - stuffing[NewLine]- timer[NewLine]    - restart timer[NewLine]    - start[NewLine]    - stop[NewLine]    - reschedule]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>MissingOnIdAttribute</Name>
								<GroupDescription />
								<Description templateId="1112">
									<InputParameters>
										<InputParameter id="0" value="On@id">attributeName</InputParameter>
										<InputParameter id="1" value="Action/Type">reason1Title</InputParameter>
										<InputParameter id="2">actionType</InputParameter>
										<InputParameter id="3" value="Action/On">reason2Title</InputParameter>
										<InputParameter id="4">actionOn</InputParameter>
										<InputParameter id="5" value="Action">itemKind</InputParameter>
										<InputParameter id="6" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="7">actionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Action/On@id' attribute is mandatory in following cases:[NewLine]- On timer: always.[NewLine]- On pair:[NewLine]    - timeout.[NewLine]- On group:[NewLine]    - All execute flavors: 'add to execute'/'execute'/'execute next'/'execute one'/'execute one top'/'execute one now'/'force execute'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>MissingTypeIdAttribute</Name>
								<GroupDescription />
								<Description templateId="1112">
									<InputParameters>
										<InputParameter id="0" value="Type@id">attributeName</InputParameter>
										<InputParameter id="1" value="Action/Type">reason1Title</InputParameter>
										<InputParameter id="2">actionType</InputParameter>
										<InputParameter id="3" value="Action/On">reason2Title</InputParameter>
										<InputParameter id="4">actionOn</InputParameter>
										<InputParameter id="5" value="Action">itemKind</InputParameter>
										<InputParameter id="6" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="7">actionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Action/Type@id' attribute is mandatory in following cases:[NewLine]- On pair:[NewLine]    - timeout: PID of the parameter that holds the timeout value (in ms).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>MissingOnNrAttribute</Name>
								<GroupDescription />
								<Description templateId="1112">
									<InputParameters>
										<InputParameter id="0" value="On@nr">attributeName</InputParameter>
										<InputParameter id="1" value="Action/Type">reason1Title</InputParameter>
										<InputParameter id="2">actionType</InputParameter>
										<InputParameter id="3" value="Action/On">reason2Title</InputParameter>
										<InputParameter id="4">actionOn</InputParameter>
										<InputParameter id="5" value="Action">itemKind</InputParameter>
										<InputParameter id="6" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="7">actionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Action/On@nr' attribute is mandatory in following cases:[NewLine]- On pair:[NewLine]    - set next: the 1-based position(s) of the pair(s) in the group on which the next value needs to be set.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>NonExistingParamRefInTypeIdAttribute</Name>
								<GroupDescription />
								<Description templateId="7101">
									<InputParameters>
										<InputParameter id="0" value="Type@id">attributeName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">pid</InputParameter>
										<InputParameter id="4" value="Action">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">actionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Action/Type@id' attribute should refer to existing parameter ID in following cases:[NewLine]- On pair:[NewLine]    - timeout: ID of the parameter that holds the timeout value (in ms).[NewLine]    - set next: (optional) ID of the parameter containing the 'time to wait after pair' value (in ms).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>MissingTypeIdOrTypeValueAttribute</Name>
								<GroupDescription />
								<Description templateId="1112">
									<InputParameters>
										<InputParameter id="0" value="Type@id or Type@value">attributeName</InputParameter>
										<InputParameter id="1" value="Action/Type">reason1Title</InputParameter>
										<InputParameter id="2">actionType</InputParameter>
										<InputParameter id="3" value="Action/On">reason2Title</InputParameter>
										<InputParameter id="4">actionOn</InputParameter>
										<InputParameter id="5" value="Action">itemKind</InputParameter>
										<InputParameter id="6" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="7">actionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Following cases require either a 'Action/Type@id' or a 'Action/Type@value' attribute:[NewLine]- On pair:[NewLine]    - set next: define the 'time to wait after pair' value (in ms) either by referencing the ID of a parameter containing the (dynamic) value via 'Type@id' or by hard coding the value via the 'Type@value' attribute.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>ExcessiveTypeIdOrTypeValueAttribute</Name>
								<GroupDescription />
								<Description templateId="15112">
									<InputParameters>
										<InputParameter id="0" value="Type@id or Type@value">attributeName</InputParameter>
										<InputParameter id="1" value="Action/Type">reason1Title</InputParameter>
										<InputParameter id="2">actionType</InputParameter>
										<InputParameter id="3" value="Action/On">reason2Title</InputParameter>
										<InputParameter id="4">actionOn</InputParameter>
										<InputParameter id="5" value="Action">itemKind</InputParameter>
										<InputParameter id="6" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="7">actionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Following cases require either a 'Action/Type@id' or a 'Action/Type@value' attribute (one or the other, not both):[NewLine]- On pair:[NewLine]    - set next: define the 'time to wait after pair' value (in ms) either by referencing the ID of a parameter containing the (dynamic) value via 'Type@id' or by hard coding the value via the 'Type@value' attribute.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="8">
								<Name>NonExistingRefToPairOnTimeoutSetNext</Name>
								<GroupDescription />
								<Description>
									<Format>Attribute 'On@nr' references a non-existing 'Pair' with 1-based position '{0}' in Group '{1}'. Action ID '{2}' triggered by Trigger '{3}'.</Format>
									<InputParameters>
										<InputParameter id="0">pairPosition</InputParameter>
										<InputParameter id="1">groupId</InputParameter>
										<InputParameter id="2">actionId</InputParameter>
										<InputParameter id="3">triggerId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[For pair timeout actions, the 'Action/On@nr' attribute should contain the 1-based position(s) of pair(s) in related group(s).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="9">
								<Name>NonExistingConnectionRefInTypeNrAttribute</Name>
								<GroupDescription />
								<Description templateId="7101">
									<InputParameters>
										<InputParameter id="0" value="Type@nr">attributeName</InputParameter>
										<InputParameter id="1" value="Connection">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">connectionId</InputParameter>
										<InputParameter id="4" value="Action">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">actionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Action/Type@nr' attribute should refer to an existing connection ID (0-based) in following cases:[NewLine]- On group:[NewLine]    - 'set' / 'set with wait' : allowing to set multiple SNMP parameters in one go. The refered connection should be of type SNMP (snmp, snmpV2 or snmpV3).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="10">
								<Name>UnsupportedConnectionTypeDueTo</Name>
								<GroupDescription />
								<Description>
									<Format>{5}'Type@nr' attribute in action of type '{0}' on '{1}' references Connection '{2}' with wrong type '{3}'. Action ID '{4}'.</Format>
									<InputParameters>
										<InputParameter id="0">actionType</InputParameter>
										<InputParameter id="1">actionOn</InputParameter>
										<InputParameter id="2">connectionId</InputParameter>
										<InputParameter id="3">connectionType</InputParameter>
										<InputParameter id="4">actionId</InputParameter>
										<InputParameter id="5">optionalPrefix</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Action/Type@nr' attribute should refer to the ID (0-based) of an existing connection in following cases:[NewLine]- On group:[NewLine]    - 'set' / 'set with wait' : allowing to set multiple SNMP parameters in one go. The refered connection should be of type SNMP (snmp, snmpV2 or snmpV3).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="11">
								<Name>UnsupportedGroupContentDueTo</Name>
								<GroupDescription />
								<Description>
									<Format>Attribute 'On@id' in action of type '{0}' on '{1}' references Group '{2}' which is missing 'Content/Param' tag(s). Action ID '{3}'.</Format>
									<InputParameters>
										<InputParameter id="0">actionType</InputParameter>
										<InputParameter id="1">actionOn</InputParameter>
										<InputParameter id="2">groupId</InputParameter>
										<InputParameter id="3">actionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Action/On@id' attribute should refer to the ID of an existing Group in following cases:[NewLine]- On group:[NewLine]    - 'set' / 'set with wait' : allowing to set multiple SNMP parameters in one go. The group content should refer to SNMP parameters of type 'write'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="12">
								<Name>UnsupportedGroupParamType</Name>
								<GroupDescription />
								<Description>
									<Format>Attribute 'On@id' in action of type '{0}' on '{1}' references Group '{2}' which references Param '{3}' with unsupported 'Param/Type' '{4}'. Action ID '{5}'.</Format>
									<InputParameters>
										<InputParameter id="0">actionType</InputParameter>
										<InputParameter id="1">actionOn</InputParameter>
										<InputParameter id="2">groupId</InputParameter>
										<InputParameter id="3">paramId</InputParameter>
										<InputParameter id="4">paramType</InputParameter>
										<InputParameter id="5">actionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Action/On@id' attribute should refer to the ID of an existing Group in following cases:[NewLine]- On group:[NewLine]    - 'set' / 'set with wait' : allowing to set multiple SNMP parameters in one go. The group content should refer to SNMP parameters Param/Type 'write' and SNMP/Enabled 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="13">
								<Name>UnsupportedGroupParamWithoutSnmp</Name>
								<GroupDescription />
								<Description>
									<Format>Attribute 'On@id' in action of type '{0}' on '{1}' references Group '{2}' which references Param '{3}' with unsupported 'SNMP/Enabled' '{4}'. Action ID '{5}'.</Format>
									<InputParameters>
										<InputParameter id="0">actionType</InputParameter>
										<InputParameter id="1">actionOn</InputParameter>
										<InputParameter id="2">groupId</InputParameter>
										<InputParameter id="3">paramId</InputParameter>
										<InputParameter id="4">snmpEnabledValue</InputParameter>
										<InputParameter id="5">actionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Action/On@id' attribute should refer to the ID of an existing Group in following cases:[NewLine]- On group:[NewLine]    - 'set' / 'set with wait' : allowing to set multiple SNMP parameters in one go. The group content should refer to SNMP parameters Param/Type 'write' and SNMP/Enabled 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="100">
								<Name>UnsupportedAttributeOnNr</Name>
								<GroupDescription />
								<Description templateId="10113">
									<InputParameters>
										<InputParameter id="0" value="Action/On@nr">attributeName</InputParameter>
										<InputParameter id="1" value="Action/Type">reasonTitle1</InputParameter>
										<InputParameter id="2">actionType</InputParameter>
										<InputParameter id="3" value="Action/On">reasonTitle2</InputParameter>
										<InputParameter id="4">actionOn</InputParameter>
										<InputParameter id="5" value="Action">itemKind</InputParameter>
										<InputParameter id="6" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="7">actionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Action/On@nr' attribute only makes sense in following 'Action/On' and 'Action/Type' scenarios:[NewLine]- On param:[NewLine]    - reverse :  Semicolon (;) separated list of 0-based position(s) of the parameter in the command/response.[NewLine]- On pair:[NewLine]    - set next :  Semicolon (;) separated list of 1-based position(s) of the pair(s) in the group.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="8">
						<Name namespace="Protocol.Actions.Action.Type">CheckIdAttribute</Name>
						<ErrorMessages />
					</Check>
					<Check id="9">
						<Name namespace="Protocol.Actions.Action.Type">CheckValueAttribute</Name>
						<ErrorMessages />
					</Check>
					<Check id="10">
						<Name namespace="Protocol.Actions.Action.Type">CheckNrAttribute</Name>
						<ErrorMessages />
					</Check>
					<Check id="11">
						<Name namespace="Protocol.Actions.Action.Type">CheckOptionsAttribute</Name>
						<ErrorMessages />
					</Check>
					<Check id="12">
						<Name namespace="Protocol.Actions.Action.Type">CheckReturnAttribute</Name>
						<ErrorMessages />
					</Check>
					<Check id="13">
						<Name namespace="Protocol.Actions.Action.Type">CheckStartOffsetAttribute</Name>
						<ErrorMessages />
					</Check>
					<Check id="14">
						<Name namespace="Protocol.Actions.Action.Type">CheckEndOffsetAttribute</Name>
						<ErrorMessages />
					</Check>
					<Check id="15">
						<Name namespace="Protocol.Actions.Action.Type">CheckAllowedAttribute</Name>
						<ErrorMessages />
					</Check>
					<Check id="16">
						<Name namespace="Protocol.Actions.Action.Type">CheckRescheduleAttribute</Name>
						<ErrorMessages />
					</Check>
					<Check id="17">
						<Name namespace="Protocol.Actions.Action.Type">CheckScaleAttribute</Name>
						<ErrorMessages />
					</Check>
					<Check id="18">
						<Name namespace="Protocol.Actions.Action.Type">CheckSequenceAttribute</Name>
						<ErrorMessages />
					</Check>
					<Check id="19">
						<Name namespace="Protocol.Actions.Action.Type">CheckScriptAttribute</Name>
						<ErrorMessages />
					</Check>
					<Check id="20">
						<Name namespace="Protocol.Actions.Action.Type">CheckArgumentsAttribute</Name>
						<ErrorMessages />
					</Check>
					<Check id="21">
						<Name namespace="Protocol.Actions.Action.Type">CheckReturnValueAttribute</Name>
						<ErrorMessages />
					</Check>
					<Check id="22">
						<Name namespace="Protocol.Actions.Action.On">CheckNrAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="2">
								<Name>EmptyAttibute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="Action/On@nr">attributeName</InputParameter>
										<InputParameter id="1" value="Action">itemKind</InputParameter>
										<InputParameter id="2">actionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Action/On@nr' attribute only makes sense if 'Action/Type' tag is set to one of the following values:[NewLine]- reverse: Semicolon (;) separated list of 0-based position(s) of the parameter in the command/response.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3601">
									<InputParameters>
										<InputParameter id="0">untrimmedValue</InputParameter>
										<InputParameter id="1" value="Action/On@nr">attributeName</InputParameter>
										<InputParameter id="2" value="Action">itemKind</InputParameter>
										<InputParameter id="3" value="ID">idOrPid</InputParameter>
										<InputParameter id="4">actionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Action/On@nr' attribute only makes sense if 'Action/Type' tag is set to one of the following values:[NewLine]- reverse: Semicolon (;) separated list of 0-based position(s) of the parameter in the command/response.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4101">
									<InputParameters>
										<InputParameter id="0" value="Action/On@nr">attributeName</InputParameter>
										<InputParameter id="1">attributeValue</InputParameter>
										<InputParameter id="2" value="Action">itemKind</InputParameter>
										<InputParameter id="3">actionId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Action/On@nr' attribute only makes sense if 'Action/Type' tag is set to one of the following values:[NewLine]- reverse: Semicolon (;) separated list of 0-based position(s) of the parameter in the command/response.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
				</Checks>
			</Category>
			<Category id="7">
				<Name>Timer</Name>
				<Checks>
					<Check id="1">
						<Name namespace="Protocol.Timers.Timer.Time">CheckTimeTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingTag</Name>
								<GroupDescription />
								<Description templateId="1001">
									<InputParameters>
										<InputParameter id="0" value="Time">tagName</InputParameter>
										<InputParameter id="1" value="Timer">itemKind</InputParameter>
										<InputParameter id="2">timerId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Choose a value between '1' and '2.073.600.000' (included). The max value corresponds to 24 days.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The minimum allowed value for a Timer Time is '1'.[NewLine]The maximum allowed value for a Timer Time tag is '2.073.600.000' which corresponds to 24 days.[NewLine]An altenative possible value is 'loop' which will cause the timer to continuously go off.[NewLine][NewLine]Also note that, due to a software issue, a value higher than '86.400.000' which corresponds to 24 hours will cause issues on DMA version between 8.5.9.1 and 9.0 CU5.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="Time">tagName</InputParameter>
										<InputParameter id="1" value="Timer">itemKind</InputParameter>
										<InputParameter id="2">timerId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Choose a value between '1' and '2.073.600.000' (included). The max value corresponds to 24 days.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The minimum allowed value for a Timer Time is '1'.[NewLine]The maximum allowed value for a Timer Time tag is '2.073.600.000' which corresponds to 24 days.[NewLine]An altenative possible value is 'loop' which will cause the timer to continuously go off.[NewLine][NewLine]Also note that, due to a software issue, a value higher than '86.400.000' which corresponds to 24 hours will cause issues on DMA version between 8.5.9.1 and 9.0 CU5.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedTag</Name>
								<GroupDescription />
								<Description templateId="3001">
									<InputParameters>
										<InputParameter id="0" value="Time">tagName</InputParameter>
										<InputParameter id="1" value="Timer">itemKind</InputParameter>
										<InputParameter id="2">timerId</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[Choose a value between '1' and '2.073.600.000' (included). The max value corresponds to 24 days.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The minimum allowed value for a Timer Time is '1'.[NewLine]The maximum allowed value for a Timer Time tag is '2.073.600.000' which corresponds to 24 days.[NewLine]An altenative possible value is 'loop' which will cause the timer to continuously go off.[NewLine][NewLine]Also note that, due to a software issue, a value higher than '86.400.000' which corresponds to 24 hours will cause issues on DMA version between 8.5.9.1 and 9.0 CU5.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidTagValue</Name>
								<GroupDescription />
								<Description templateId="4010">
									<InputParameters>
										<InputParameter id="0" value="Time">tagName</InputParameter>
										<InputParameter id="1">tagValue</InputParameter>
										<InputParameter id="2">allowedValues</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Choose a value between '1' and '2.073.600.000' (included). The max value corresponds to 24 days.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The minimum allowed value for a Timer Time is '1'.[NewLine]The maximum allowed value for a Timer Time tag is '2.073.600.000' which corresponds to 24 days.[NewLine]An altenative possible value is 'loop' which will cause the timer to continuously go off.[NewLine][NewLine]Also note that, due to a software issue, a value higher than '86.400.000' which corresponds to 24 hours will cause issues on DMA version between 8.5.9.1 and 9.0 CU5.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>TimerTimeCannotBeLargerThan24Days</Name>
								<GroupDescription />
								<Description>
									<Format>Timer Tag value '{0}' is higher than the max allowed value of 24 days. Timer id '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">timeValue</InputParameter>
										<InputParameter id="1">timerId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[Choose a value between '1' and '2.073.600.000' (included). The max value corresponds to 24 days.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The minimum allowed value for a Timer Time is '1'.[NewLine]The maximum allowed value for a Timer Time tag is '2.073.600.000' which corresponds to 24 days.[NewLine]An altenative possible value is 'loop' which will cause the timer to continuously go off.[NewLine][NewLine]Also note that, due to a software issue, a value higher than '86.400.000' which corresponds to 24 hours will cause issues on DMA version between 8.5.9.1 and 9.0 CU5.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>DuplicateTimer</Name>
								<GroupDescription />
								<Description>
									<Format>Duplicate Timer with Time '{0}'. Timer IDs '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">timerTime</InputParameter>
										<InputParameter id="1">timerIDs</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Uncertain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Combine the timers into one.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Each timer is a thread which uses resources. Timers are there to be able to have different polling rates. It should not be used to split groups on other factors than the polling rate.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>TooFastTimer</Name>
								<GroupDescription />
								<Description>
									<Format>Too fast Timer Time '{0}'. Timer ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">timerTime</InputParameter>
										<InputParameter id="1">timerId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Uncertain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Increase the timer time to at least 1s.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="8">
								<Name>TooSimilarTimers</Name>
								<GroupDescription />
								<Description>
									<Format>Timer Time values too similar. Timer IDs '{0}'. Time values '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">timerId</InputParameter>
										<InputParameter id="1">timerTime</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Uncertain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Change the timer time so that the difference between the specified time and the time of the other timers is at least 1s.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="2">
						<Name namespace="Protocol.Timers.Timer.Name">CheckNameTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DuplicatedValue</Name>
								<GroupDescription />
								<Description templateId="6101">
									<InputParameters>
										<InputParameter id="0" value="Timer">itemKind</InputParameter>
										<InputParameter id="1" value="Name">valueKind</InputParameter>
										<InputParameter id="2">duplicateName</InputParameter>
										<InputParameter id="3">timerIds</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="3">
						<Name namespace="Protocol.Timers.Timer">CheckOptionsAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="2">
								<Name>NonExistingIdInOption</Name>
								<GroupDescription />
								<Description>
									<Format>'{0}' option refers to a non-existing {1} '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">timerOption</InputParameter>
										<InputParameter id="1">referItemType</InputParameter>
										<InputParameter id="2">referItemId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidValueInOption</Name>
								<GroupDescription />
								<Description>
									<Format>'{0}' option has an invalid value '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">optionName</InputParameter>
										<InputParameter id="1">optionValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>InvalidAttribute</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid value for Timer@options attribute. Timer ID '{0}'. Current Value '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">timerId</InputParameter>
										<InputParameter id="1">attributeValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>MissingIpOption</Name>
								<GroupDescription />
								<Description>
									<Format>Option '{0}' requires the 'ip' option in Timer@options. Timer ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">optionName</InputParameter>
										<InputParameter id="1">timerId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>InvalidIgnoreIfOption</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid value for 'ignoreIf' option. Expected format: 'ignoreIf:&lt;columnIdx&gt;,&lt;value&gt;'. Current value '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">ignoreIfValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Expected format: "ignoreIf:<columnIdx>,<value>", where <columnIdx> specifies the zero-based column index of a column of the table specified in the "ip" option, which holds the value to be compared with the value specified in <value>.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="8">
								<Name>InvalidEachOption</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid value for 'each' option. Expected format: 'each:&lt;period&gt;'. Current value '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">optionValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Expected format: 'each:<period>', where <period> specifies the period (in ms) that each row should be executed in the table.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="9">
								<Name>InvalidDynamicThreadPoolOption</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid value for 'dynamicThreadPool' option. Expected format: 'dynamicThreadPool:&lt;threadPoolSizeMonitorPid&gt;'. Current value '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">optionValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Expected format: 'dynamicThreadPool:<threadPoolSizeMonitorPid>', where <threadPoolSizeMonitorPid> specifies the ID of the parameter that will be used to show the current size of the thread pool.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="10">
								<Name>InvalidInstanceOption</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid value for 'instance' option. Expected format: 'instance:&lt;tablePid&gt;,&lt;columnIdx&gt;'. Current value '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">optionValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Expected format: 'instance:<tablePid>,<columnIdx>', where  <tablePid> specifies the table parameter ID and <columnIdx> specifies the zero-based column index of the column that holds the instance value.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="11">
								<Name>InvalidIpOption</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid value for 'ip' option. Expected format: 'ip:&lt;tablePid&gt;,&lt;columnIdx&gt;'. Current value '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">optionValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Expected format: 'ip:<tablePid>,<columnIdx>', where <tablePid> specifies the table parameter ID and <columnIdx> specifies the zero-based column index of the column that holds the IP address or the primary key (in case a QAction for each row of the table is executed directly from the timer).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="12">
								<Name>InvalidPollingRateOption</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid value for 'pollingRate' option. Expected format: 'pollingRate:&lt;interval&gt;,&lt;maxCount&gt;,&lt;releaseCount&gt;'. Current value '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">optionValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Expected format: 'pollingRate:<interval>,<maxCount>,<releaseCount>', where  <interval> specifies the interval (in ms).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="13">
								<Name>InvalidQActionOption</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid value for 'qaction' option. Expected format: 'qaction:&lt;qactionId&gt;'. Current value '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">optionValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Expected format: 'qaction:<qactionId>', where <qactionId> specifies the ID of the QAction.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="14">
								<Name>InvalidQActionBeforeOption</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid value for 'qactionBefore' option. Expected format: 'qactionBefore:&lt;qactionId&gt;'. Current value '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">optionValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Expected format: 'qactionBefore:<qactionId>', where <qactionId> specifies the ID of the QAction.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="15">
								<Name>InvalidQActionAfterOption</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid value for 'qactionAfter' option. Expected format: 'qactionAfter:&lt;qactionId&gt;'. Current value '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">optionValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Expected format: 'qactionAfter:<qactionId>', where <qactionId> specifies the ID of the QAction.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="16">
								<Name>InvalidThreadPoolOption</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid value for 'threadPool' option. Expected format: 'threadPool:&lt;size&gt;,&lt;calculationInterval&gt;,&lt;usagePid&gt;,&lt;waitingPid&gt;,&lt;maxDurationPid&gt;,&lt;avgDurationPid&gt;,&lt;counterPid&gt;,&lt;queueSize&gt;'. Current value '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">optionValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Expected format: 'threadPool:<size>,<calculationInterval>,<usagePid>,<waitingPid>,<maxDurationPid>,<avgDurationPid>,<counterPid>,<stackSize>', where: [NewLine] - <size> specifies the  maximum number of threads available in the thread pool.[NewLine] - <calculationInterval> specifies the thread statistics refresh interval (in s).[NewLine] - <usagePid> specifies the ID of the parameter that will display the number of threads that are in use (refreshes each <calculationInterval> s).[NewLine] - <waitingPid> specifies the ID of the parameter that will display the number of threads that are waiting because all the thread pool threads are in use (refreshes each <calculationInterval> s).[NewLine] - <maxDurationPid>: specifies the ID of the parameter that will display how long it took to execute the slowest thread during the last calculation interval (expressed in ms).[NewLine] - <avgDurationPid>: specifies the ID of the parameter that will display how long it took on average to execute a thread during the last calculation interval (expressed in ms).[NewLine] - <counterPid>: specifies the ID of the parameter that will display the number of threads that were finished during the last calculation interval.[NewLine] - <queueSize>: specifies the number of items that can be put in waiting  state. When the waiting thread pool has reached the stack size, a notice alarm is generated.[NewLine]]]></Details>
							</ErrorMessage>
							<ErrorMessage id="17">
								<Name>MissingEachOption</Name>
								<GroupDescription />
								<Description>
									<Format>Option '{0}' requires the 'each' option in Timer@options. Timer ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">optionName</InputParameter>
										<InputParameter id="1">timerId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[This option requires the "each" option to be defined because the "each" option specifies the period (in ms) that each row should be executed in the table.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="18">
								<Name>MissingThreadPoolOption</Name>
								<GroupDescription />
								<Description>
									<Format>Option '{0}' requires the 'threadPool' option in Timer@options. Timer ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">optionName</InputParameter>
										<InputParameter id="1">timerId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="19">
								<Name>NonExistingIdInDynamicThreadPoolOption</Name>
								<GroupDescription />
								<Description templateId="7200">
									<InputParameters>
										<InputParameter id="0" value="dynamicThreadPool">optionName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="20">
								<Name>MissingValueInOption</Name>
								<GroupDescription />
								<Description>
									<Format>Required value '{0}' is not defined.</Format>
									<InputParameters>
										<InputParameter id="0">placeholderName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="21">
								<Name>InvalidPingOption</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid value for 'ping' option. Current value: '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">optionValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The following configuration options are available in the 'ping' option (multiple options are separated with a comma (',') and the option value is defined using the following format <optionName>=<optionValue>):[NewLine] - rttColumn: Specifies the 1-based column where the RTT value (in ms) should be stored. The table this column belongs to is specified in the 'ip' option.[NewLine] - timeoutPid: (Obsolete) Specifies the ID of the parameter that will store the key of the row that resulted in timeout.[NewLine] - ttl: The time to live of the packet (maximum number of hops). Default: 10.[NewLine] - timeout: Max time (in ms) before the ping is flagged as timeout when no response is returned. Default: 500.[NewLine] - timestampColumn: Specifies the 1-based column where the timestamp should be stored when the ping has been executed. The table this column belongs to is specified in the 'ip' option.[NewLine] - type: Specifies the type of ping that is used: ICMP or Winsock. Default: ICMP.[NewLine] - size: Specifies the payload size of the packet that is used to execute the ping. Default: 0.[NewLine] - continueSnmpOnTimeout: Specifies whether the group should be executed when the ping is in timeout.[NewLine] - jitterColumn: Specifies the 1-based column index of the column that will contain the jitter (in ms).  The table this column belongs to is specified in the 'ip' option.[NewLine] - latencyColumn: Specifies the 1-based column index of the column that will contain the latency (in ms).  The table this column belongs to is specified in the 'ip' option.[NewLine] - packetLossRateColumn: Specifies the 1-based column index of the column that will contain the packet loss rate (decimal value ranging from 0.01 to 1).  The table this column belongs to is specified in the 'ip' option.[NewLine] - amountPacketMeasurements: Specifies the number of packets that will be sent for calculating the jitter, latency and packet loss rate.[NewLine] - amountPacketMeasurementsPid: Specifies the ID of the parameter that holds the number of packets that will be sent for calculating the jitter, latency and packet loss rate.[NewLine] - amountPackets: Specifies the number of packets to be sent to the device.[NewLine] - amountPacketsPid: Specifies the ID of the parameter that holds the number of packets to be sent to the device.[NewLine] - excludeWorstResults: Specifies the percentage of worst result to exclude. [NewLine] excludeWorstResultsPid:  Specifies the ID of the parameter that holds the percentage of worst result to exclude.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="22">
								<Name>UnknownOption</Name>
								<GroupDescription />
								<Description>
									<Format>Unknown option '{0}' detected.</Format>
									<InputParameters>
										<InputParameter id="0">optionName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The timer options are formatted as follows: <optionName>:<optionValue> where <optionName> should be one of the following:[NewLine]- each[NewLine]- dynamicThreadPool[NewLine]- ignoreIf[NewLine]- instance[NewLine]- ip[NewLine]- ping[NewLine]- pollingRate[NewLine]- qaction[NewLine]- qactionBefore[NewLine]- qactionAfter[NewLine]- threadPool[NewLine]Options should be separated using semicolons (';').]]></Details>
							</ErrorMessage>
							<ErrorMessage id="23">
								<Name>DuplicateOption</Name>
								<GroupDescription />
								<Description>
									<Format>Duplicate option '{0}' detected.</Format>
									<InputParameters>
										<InputParameter id="0">optionName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="24">
								<Name>UnknownOptionInPingOption</Name>
								<GroupDescription />
								<Description>
									<Format> Unknown option '{0}' detected in 'ping' option.</Format>
									<InputParameters>
										<InputParameter id="0">optionName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The timer options are formatted as follows: <optionName>=<optionValue> where <optionName> should be one of the following:[NewLine] - rttColumn[NewLine] - timeoutPid[NewLine] - ttl[NewLine] - timeout[NewLine] - timestampColumn[NewLine] - type[NewLine] - size[NewLine] - continueSnmpOnTimeout[NewLine] - jitterColumn[NewLine] - latencyColumn[NewLine] - packetLossRateColumn[NewLine] - amountPacketsMeasurements[NewLine] - amountPacketsMeasurementsPid[NewLine] - amountPackets[NewLine] - amountPacketsPid[NewLine] - excludeWorstResults[NewLine] - excludeWorstResultsPid[NewLine]Options should be separated by a comma (',').]]></Details>
							</ErrorMessage>
							<ErrorMessage id="25">
								<Name>DuplicateOptionInPingOption</Name>
								<GroupDescription />
								<Description>
									<Format>Duplicate option '{0}' detected in 'ping' option.</Format>
									<InputParameters>
										<InputParameter id="0">optionName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="26">
								<Name>ThreadPoolCalculationIntervalDefined</Name>
								<GroupDescription />
								<Description>
									<Format>Thread pool statistics can have a big impact on performance. Timer ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">timerId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[In case the thread pool statistics are of no interest, disable the calculation of these by setting the <calculationInterval> to -1.[NewLine]Also, set the value of the options that specify the ID of the parameter that will show the statistic to -1.[NewLine]For example: threadPool:10,-1,-1,-1,-1,-1,-1,500.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="27">
								<Name>UseOfObsoleteTimeoutPidOptionInPingOption</Name>
								<GroupDescription />
								<Description>
									<Format>The use of the timeoutPid option in the ping option is obsolete.</Format>
									<InputParameters />
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The use of the timeoutPid option in the ping option is obsolete. Instead, provide an additional column in the table that will indicate whether there was a timeout for each row.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="28">
								<Name>UseOfObsoleteQActionOption</Name>
								<GroupDescription />
								<Description>
									<Format>The use of the qaction option is obsolete.</Format>
									<InputParameters />
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The use of the qaction option is obsolete as it does not execute multi-threaded but sequentially. Instead, use the qactionBefore option.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="29">
								<Name>NonExistingColumnIdxInOption</Name>
								<GroupDescription />
								<Description templateId="7201">
									<InputParameters>
										<InputParameter id="0">timerOption</InputParameter>
										<InputParameter id="1" value="idx">columnIndentifier</InputParameter>
										<InputParameter id="2">columnIdx</InputParameter>
										<InputParameter id="3">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="30">
								<Name>NonExistingColumnPositionInOption</Name>
								<GroupDescription />
								<Description templateId="7201">
									<InputParameters>
										<InputParameter id="0">timerOption</InputParameter>
										<InputParameter id="1" value="1-based position">columnIndentifier</InputParameter>
										<InputParameter id="2">columnPosition</InputParameter>
										<InputParameter id="3">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="4">
						<Name namespace="Protocol.Timers.Timer.Condition">CheckConditionTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>InvalidCondition</Name>
								<GroupDescription />
								<Description templateId="4901">
									<InputParameters>
										<InputParameter id="0">conditionString</InputParameter>
										<InputParameter id="1">invalidityReason</InputParameter>
										<InputParameter id="2" value="Timer">itemKind</InputParameter>
										<InputParameter id="3" value="ID">idOrPid</InputParameter>
										<InputParameter id="4">timerId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A 'Timer/Condition' should always contain a statement returning a boolean.[NewLine]See DDL for more information.[NewLine][NewLine]Here are a few examples of mistakes covered by this error:[NewLine]- Empty condition.[NewLine]- Malformed condition:[NewLine]  - The 'id:' placeholder used to retrieve a parameter value is incorrectly defined.[NewLine]  - The number of opening & closing parenthesis is not matching.[NewLine]  - '&&', '||' is used instead of 'AND', 'OR'.[NewLine]- Condition that is not a boolean expression.[NewLine]- Fully hard-coded boolean expression (No reference to any parameter value).[NewLine]- etc.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7001">
									<InputParameters>
										<InputParameter id="0" value="Timer/Condition">tagName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="3">paramId</InputParameter>
										<InputParameter id="4" value="Timer">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">timerId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A 'Timer/Condition' should always contain a statement returning a boolean.[NewLine]See DDL for more information.[NewLine][NewLine]Here are a few examples of mistakes covered by this error:[NewLine]- Empty condition.[NewLine]- Malformed condition:[NewLine]  - The 'id:' placeholder used to retrieve a parameter value is incorrectly defined.[NewLine]  - The number of opening & closing parenthesis is not matching.[NewLine]  - '&&', '||' is used instead of 'AND', 'OR'.[NewLine]- Condition that is not a boolean expression.[NewLine]- Fully hard-coded boolean expression (No reference to any parameter value).[NewLine]- etc.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UnrecommendedCondition</Name>
								<GroupDescription />
								<Description>
									<Format>Unrecommended condition on Timer. Timer ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">timerId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The usage of a Condition within a Timer is unrecommended for performance reasons. See DDL for more information.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>ConditionCanBeSimplified</Name>
								<GroupDescription />
								<Description templateId="4902">
									<InputParameters>
										<InputParameter id="0">conditionString</InputParameter>
										<InputParameter id="1" value="Timer">itemKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPid</InputParameter>
										<InputParameter id="3">timerId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Timer/Condition' can be simplified. Some examples of when the condition can be simplified:[NewLine]  - The condition contains redundant parentheses.[NewLine]  - The condition does not contain a variable and therefore can either be dropped completely (or a variable must be included).]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="5">
						<Name namespace="Protocol.Timers.Timer.Content.Group">CheckGroupTag</Name>
						<ErrorMessages>
							<ErrorMessage id="2">
								<Name>NonExistingIdInGroup</Name>
								<GroupDescription />
								<Description templateId="7001">
									<InputParameters>
										<InputParameter id="0" value="Group">tagName</InputParameter>
										<InputParameter id="1" value="">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">referenceId</InputParameter>
										<InputParameter id="4" value="Timer">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">timerId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>EmptyGroupTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="Group">tagName</InputParameter>
										<InputParameter id="1" value="Timer">itemKind</InputParameter>
										<InputParameter id="2">timerId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidGroupTag</Name>
								<GroupDescription />
								<Description templateId="4001">
									<InputParameters>
										<InputParameter id="0">tagValue</InputParameter>
										<InputParameter id="1" value="Content/Group">tagName</InputParameter>
										<InputParameter id="2" value="Timer">itemKind</InputParameter>
										<InputParameter id="3">timerId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="6">
						<Name namespace="Protocol.Timers.Timer">CheckIdAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1100">
									<InputParameters>
										<InputParameter id="0" value="Timer@id">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each timer.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each timer should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2100">
									<InputParameters>
										<InputParameter id="0" value="Timer@id">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each timer.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each timer should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3100">
									<InputParameters>
										<InputParameter id="0" value="Timer@id">attributeName</InputParameter>
										<InputParameter id="1">attributeValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each timer.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each timer should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4101">
									<InputParameters>
										<InputParameter id="0" value="Timer@id">attributeName</InputParameter>
										<InputParameter id="1">timerId</InputParameter>
										<InputParameter id="2" value="Timer">itemKind</InputParameter>
										<InputParameter id="3">timerName</InputParameter>
										<InputParameter id="4" value="name">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each timer.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each timer should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>DuplicatedId</Name>
								<GroupDescription />
								<Description templateId="6001">
									<InputParameters>
										<InputParameter id="0" value="Timer">itemKind</InputParameter>
										<InputParameter id="1">timerId</InputParameter>
										<InputParameter id="2">timerNames</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each timer.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each timer should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
				</Checks>
			</Category>
			<Category id="8">
				<Name>HTTP</Name>
				<Checks>
					<Check id="1">
						<Name namespace="Protocol.HTTP.Session.Connection.Request.Headers">CheckHeaders</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingHeaderForVerb</Name>
								<GroupDescription />
								<Description>
									<Format>Missing Header '{0}' in HTTP '{1}' request. Session ID '{2}'. Connection ID '{3}'.</Format>
									<InputParameters>
										<InputParameter id="0">headerKey</InputParameter>
										<InputParameter id="1">verb</InputParameter>
										<InputParameter id="2">sessionId</InputParameter>
										<InputParameter id="3">connectionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>DuplicateHeaderKeys</Name>
								<GroupDescription />
								<Description>
									<Format>Duplicate Header '{0}' in HTTP request. Session ID '{1}'. Connection ID '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">headerKey</InputParameter>
										<InputParameter id="1">sessionId</InputParameter>
										<InputParameter id="2">connectionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HowToFix><![CDATA[Merge the duplicate headers into one by providing a comma separated list of values.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="2">
						<Name namespace="Protocol.HTTP.Session.Connection.Request.Headers.Header">CheckHeaderTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>UntrimmedTag</Name>
								<GroupDescription />
								<Description templateId="3000">
									<InputParameters>
										<InputParameter id="0" value="Header">tagName</InputParameter>
										<InputParameter id="1">tagValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[Trim the Header tag value.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="3">
						<Name namespace="Protocol.HTTP.Session.Connection.Request.Headers.Header">CheckKeyAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>UnknownHeaderKey</Name>
								<GroupDescription />
								<Description>
									<Format>Unknown Header key '{0}' for HTTP request. Session ID '{1}'. Connection ID '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">headerKey</InputParameter>
										<InputParameter id="1">sessionId</InputParameter>
										<InputParameter id="2">connectionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Uncertain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The community has come to a consensus regarding a list of header keys to be used in HTTP communication.[NewLine]The list can be found on following webpage:[NewLine]    https://www.iana.org/assignments/message-headers/message-headers.xhtml [NewLine][NewLine]This 'Unknown Header Key' message can be returned by the validator in following 2 scenarios:[NewLine]- The data source requires the usage of such unknown header key because the Vendor simply did not adhere to the consensus -> Feel free to suppress the result.[NewLine]- The consensus has been updated and DIS is not up to date -> Please report it to the DIS team via the DIS Feedback feature.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>UntrimmedHeaderKey</Name>
								<GroupDescription />
								<Description>
									<Format>Untrimmed Header key '{0}' for HTTP request. Session ID '{1}'. Connection ID '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">headerKey</InputParameter>
										<InputParameter id="1">sessionId</InputParameter>
										<InputParameter id="2">connectionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[Trim the key attribute value.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>MissingKeyAttribute</Name>
								<GroupDescription />
								<Description>
									<Format>Missing key attribute. Session ID '{0}'. Connection ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">sessionId</InputParameter>
										<InputParameter id="1">connectionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>EmptyKeyAttribute</Name>
								<GroupDescription />
								<Description>
									<Format>Empty key attribute. Session ID '{0}'. Connection ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">sessionId</InputParameter>
										<InputParameter id="1">connectionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>InvalidHeaderKeyForVerb</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid Header key '{0}' for HTTP '{1}' request. Session ID '{2}'. Connection ID '{3}'.</Format>
									<InputParameters>
										<InputParameter id="0">headerKey</InputParameter>
										<InputParameter id="1">verb</InputParameter>
										<InputParameter id="2">sessionId</InputParameter>
										<InputParameter id="3">connectionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>RedundantHeaderKey</Name>
								<GroupDescription />
								<Description>
									<Format>Header key '{0}' is typically managed automatically by DataMiner. Session ID '{1}'. Connection ID '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">headerKey</InputParameter>
										<InputParameter id="1">sessionId</InputParameter>
										<InputParameter id="2">connectionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Uncertain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[By default, DataMiner will add a header with key 'User-Agent' and value 'DataMiner'.[NewLine]Therefore, specifying it in the driver is redundant unless you want/need a more specific value to be used.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>UnsupportedHeaderKey</Name>
								<GroupDescription />
								<Description>
									<Format>Unsupported Header key '{0}'. Session ID '{1}'. Connection ID '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">headerKey</InputParameter>
										<InputParameter id="1">sessionId</InputParameter>
										<InputParameter id="2">connectionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="4">
						<Name namespace="Protocol.HTTP.Session">CheckPasswordAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7101">
									<InputParameters>
										<InputParameter id="0" value="password">attributeName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">pid</InputParameter>
										<InputParameter id="4" value="HTTP Session">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">sessionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Use this attribute to specify a hardcoded password or the id of an existing parameter containing the password.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="5">
						<Name namespace="Protocol.HTTP.Session">CheckUsernameAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7101">
									<InputParameters>
										<InputParameter id="0" value="userName">attributeName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">pid</InputParameter>
										<InputParameter id="4" value="HTTP Session">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">sessionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Use this attribute to specify a hardcoded username or the id of an existing parameter containing the username.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="6">
						<Name namespace="Protocol.HTTP.Session">CheckProxyServerAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7101">
									<InputParameters>
										<InputParameter id="0" value="proxyServer">attributeName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">pid</InputParameter>
										<InputParameter id="4" value="HTTP Session">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">sessionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Use this attribute to specify a hardcoded proxy server or the id of an existing parameter containing the proxy server.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="7">
						<Name namespace="Protocol.HTTP.Session">CheckProxyUserAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7101">
									<InputParameters>
										<InputParameter id="0" value="proxyUser">attributeName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">pid</InputParameter>
										<InputParameter id="4" value="HTTP Session">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">sessionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Use this attribute to specify a hardcoded proxy user or the id of an existing parameter containing the proxy user.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="8">
						<Name namespace="Protocol.HTTP.Session">CheckProxyPasswordAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7101">
									<InputParameters>
										<InputParameter id="0" value="proxyPassword">attributeName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">pid</InputParameter>
										<InputParameter id="4" value="HTTP Session">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">sessionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Use this attribute to specify a hardcoded proxy password or the id of an existing parameter containing the proxy password.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="9">
						<Name namespace="Protocol.HTTP.Session.Connection.Request">CheckPidAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7102">
									<InputParameters>
										<InputParameter id="0" value="Request@pid">attributeName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">pid</InputParameter>
										<InputParameter id="4" value="HTTP Session">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">sessionId</InputParameter>
										<InputParameter id="7" value="Connection">subItemKind</InputParameter>
										<InputParameter id="8" value="ID">idOrPidForSubItem</InputParameter>
										<InputParameter id="9">connectionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Use this attribute to specify the id of an existing parameter containing the url to be used for this request.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2102">
									<InputParameters>
										<InputParameter id="0" value="Request@pid">attributeName</InputParameter>
										<InputParameter id="1" value="HTTP Session">itemKind</InputParameter>
										<InputParameter id="2">sessionId</InputParameter>
										<InputParameter id="3" value="Connection">subItemKind</InputParameter>
										<InputParameter id="4" value="ID">idOrPidForSubItem</InputParameter>
										<InputParameter id="5">connectionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Use this attribute to specify the id of an existing parameter containing the url to be used for this request.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidAttribute</Name>
								<GroupDescription />
								<Description templateId="4102">
									<InputParameters>
										<InputParameter id="0" value="Request@pid">attributeName</InputParameter>
										<InputParameter id="1">pidValue</InputParameter>
										<InputParameter id="2" value="HTTP Session">itemKind</InputParameter>
										<InputParameter id="3">httpSessionId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
										<InputParameter id="5" value="Connection">subItemKind</InputParameter>
										<InputParameter id="6">connectionId</InputParameter>
										<InputParameter id="7" value="ID">subIdOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Use this attribute to specify the id of an existing parameter containing the url to be used for this request.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="10">
						<Name namespace="Protocol.HTTP.Session.Connection.Request.Data">CheckPidAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7102">
									<InputParameters>
										<InputParameter id="0" value="Request/Data@pid">attributeName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">pid</InputParameter>
										<InputParameter id="4" value="HTTP Session">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">sessionId</InputParameter>
										<InputParameter id="7" value="Connection">subItemKind</InputParameter>
										<InputParameter id="8" value="ID">idOrPidForSubItem</InputParameter>
										<InputParameter id="9">connectionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Use this attribute to specify the id of an existing parameter containing the data for the request body.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2102">
									<InputParameters>
										<InputParameter id="0" value="Request/Data@pid">attributeName</InputParameter>
										<InputParameter id="1" value="HTTP Session">itemKind</InputParameter>
										<InputParameter id="2">sessionId</InputParameter>
										<InputParameter id="3" value="Connection">subItemKind</InputParameter>
										<InputParameter id="4" value="ID">idOrPidForSubItem</InputParameter>
										<InputParameter id="5">connectionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Use this attribute to specify the id of an existing parameter containing the data for the request body.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidAttribute</Name>
								<GroupDescription />
								<Description templateId="4102">
									<InputParameters>
										<InputParameter id="0" value="Request/Data@pid">attributeName</InputParameter>
										<InputParameter id="1">pidValue</InputParameter>
										<InputParameter id="2" value="HTTP Session">itemKind</InputParameter>
										<InputParameter id="3">httpSessionId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
										<InputParameter id="5" value="Connection">subItemKind</InputParameter>
										<InputParameter id="6">connectionId</InputParameter>
										<InputParameter id="7" value="ID">subIdOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Use this attribute to specify the id of an existing parameter containing the data for the request body.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="11">
						<Name namespace="Protocol.HTTP.Session.Connection.Request.Headers.Header">CheckPidAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7102">
									<InputParameters>
										<InputParameter id="0" value="Request/Headers/Header@pid">attributeName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">pid</InputParameter>
										<InputParameter id="4" value="HTTP Session">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">sessionId</InputParameter>
										<InputParameter id="7" value="Connection">subItemKind</InputParameter>
										<InputParameter id="8" value="ID">idOrPidForSubItem</InputParameter>
										<InputParameter id="9">connectionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Use this attribute to specify the id of an existing parameter containing the value for this request header.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2102">
									<InputParameters>
										<InputParameter id="0" value="Request/Headers/Header@pid">attributeName</InputParameter>
										<InputParameter id="1" value="HTTP Session">itemKind</InputParameter>
										<InputParameter id="2">sessionId</InputParameter>
										<InputParameter id="3" value="Connection">subItemKind</InputParameter>
										<InputParameter id="4" value="ID">idOrPidForSubItem</InputParameter>
										<InputParameter id="5">connectionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Use this attribute to specify the id of an existing parameter containing the value for this request header.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidAttribute</Name>
								<GroupDescription />
								<Description templateId="4102">
									<InputParameters>
										<InputParameter id="0" value="Request/Headers/Header@pid">attributeName</InputParameter>
										<InputParameter id="1">pidValue</InputParameter>
										<InputParameter id="2" value="HTTP Session">itemKind</InputParameter>
										<InputParameter id="3">httpSessionId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
										<InputParameter id="5" value="Connection">subItemKind</InputParameter>
										<InputParameter id="6">connectionId</InputParameter>
										<InputParameter id="7" value="ID">subIdOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Use this attribute to specify the id of an existing parameter containing the value for this request header.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="12">
						<Name namespace="Protocol.HTTP.Session.Connection.Request.Parameters.Parameter">CheckPidAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7102">
									<InputParameters>
										<InputParameter id="0" value="Request/Parameters/Parameter@pid">attributeName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">pid</InputParameter>
										<InputParameter id="4" value="HTTP Session">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">sessionId</InputParameter>
										<InputParameter id="7" value="Connection">subItemKind</InputParameter>
										<InputParameter id="8" value="ID">idOrPidForSubItem</InputParameter>
										<InputParameter id="9">connectionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Use this attribute to specify the id of an existing parameter containing the value for this request parameter.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2102">
									<InputParameters>
										<InputParameter id="0" value="Request/Parameters/Parameter@pid">attributeName</InputParameter>
										<InputParameter id="1" value="HTTP Session">itemKind</InputParameter>
										<InputParameter id="2">sessionId</InputParameter>
										<InputParameter id="3" value="Connection">subItemKind</InputParameter>
										<InputParameter id="4" value="ID">idOrPidForSubItem</InputParameter>
										<InputParameter id="5">connectionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Use this attribute to specify the id of an existing parameter containing the value for this request parameter.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidAttribute</Name>
								<GroupDescription />
								<Description templateId="4102">
									<InputParameters>
										<InputParameter id="0" value="Parameter@pid">attributeName</InputParameter>
										<InputParameter id="1">pidValue</InputParameter>
										<InputParameter id="2" value="HTTP Session">itemKind</InputParameter>
										<InputParameter id="3">httpSessionId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
										<InputParameter id="5" value="Connection">subItemKind</InputParameter>
										<InputParameter id="6">connectionId</InputParameter>
										<InputParameter id="7" value="ID">subIdOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Use this attribute to specify the id of an existing parameter containing the value for this request parameter.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="13">
						<Name namespace="Protocol.HTTP.Session.Connection.Response">CheckStatusCodeAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7102">
									<InputParameters>
										<InputParameter id="0" value="Response@statusCode">attributeName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">pid</InputParameter>
										<InputParameter id="4" value="HTTP Session">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">sessionId</InputParameter>
										<InputParameter id="7" value="Connection">subItemKind</InputParameter>
										<InputParameter id="8" value="ID">idOrPidForSubItem</InputParameter>
										<InputParameter id="9">connectionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Use this attribute to specify the id of an existing parameter where the response status code will be set.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2102">
									<InputParameters>
										<InputParameter id="0" value="Response@statusCode">attributeName</InputParameter>
										<InputParameter id="1" value="HTTP Session">itemKind</InputParameter>
										<InputParameter id="2">sessionId</InputParameter>
										<InputParameter id="3" value="Connection">subItemKind</InputParameter>
										<InputParameter id="4" value="ID">idOrPidForSubItem</InputParameter>
										<InputParameter id="5">connectionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Use this attribute to specify the id of an existing parameter where the response status code will be set.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidAttribute</Name>
								<GroupDescription />
								<Description templateId="4102">
									<InputParameters>
										<InputParameter id="0" value="Response@statusCode">attributeName</InputParameter>
										<InputParameter id="1">statusCode</InputParameter>
										<InputParameter id="2" value="HTTP Session">itemKind</InputParameter>
										<InputParameter id="3">httpSessionId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
										<InputParameter id="5" value="Connection">subItemKind</InputParameter>
										<InputParameter id="6">connectionId</InputParameter>
										<InputParameter id="7" value="ID">subIdOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Use this attribute to specify the id of an existing parameter where the response status code will be set.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="14">
						<Name namespace="Protocol.HTTP.Session.Connection.Response.Content">CheckPidAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7102">
									<InputParameters>
										<InputParameter id="0" value="Response/Content@pid">attributeName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">pid</InputParameter>
										<InputParameter id="4" value="HTTP Session">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">sessionId</InputParameter>
										<InputParameter id="7" value="Connection">subItemKind</InputParameter>
										<InputParameter id="8" value="ID">idOrPidForSubItem</InputParameter>
										<InputParameter id="9">connectionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Use this attribute to specify the id of an existing parameter where the response body will be set.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2102">
									<InputParameters>
										<InputParameter id="0" value="Response/Content@pid">attributeName</InputParameter>
										<InputParameter id="1" value="HTTP Session">itemKind</InputParameter>
										<InputParameter id="2">sessionId</InputParameter>
										<InputParameter id="3" value="Connection">subItemKind</InputParameter>
										<InputParameter id="4" value="ID">idOrPidForSubItem</InputParameter>
										<InputParameter id="5">connectionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Use this attribute to specify the id of an existing parameter where the response body will be set.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidAttribute</Name>
								<GroupDescription />
								<Description templateId="4102">
									<InputParameters>
										<InputParameter id="0" value="Response/Content@pid">attributeName</InputParameter>
										<InputParameter id="1">pidValue</InputParameter>
										<InputParameter id="2" value="HTTP Session">itemKind</InputParameter>
										<InputParameter id="3">httpSessionId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
										<InputParameter id="5" value="Connection">subItemKind</InputParameter>
										<InputParameter id="6">connectionId</InputParameter>
										<InputParameter id="7" value="ID">subIdOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Use this attribute to specify the id of an existing parameter where the response body will be set.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="15">
						<Name namespace="Protocol.HTTP.Session.Connection.Response.Headers.Header">CheckPidAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7102">
									<InputParameters>
										<InputParameter id="0" value="Response/Headers/Header@pid">attributeName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">pid</InputParameter>
										<InputParameter id="4" value="HTTP Session">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">sessionId</InputParameter>
										<InputParameter id="7" value="Connection">subItemKind</InputParameter>
										<InputParameter id="8" value="ID">idOrPidForSubItem</InputParameter>
										<InputParameter id="9">connectionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Use this attribute to specify the id of an existing parameter where the response header value will be set.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2102">
									<InputParameters>
										<InputParameter id="0" value="Response/Headers/Header@pid">attributeName</InputParameter>
										<InputParameter id="1" value="HTTP Session">itemKind</InputParameter>
										<InputParameter id="2">sessionId</InputParameter>
										<InputParameter id="3" value="Connection">subItemKind</InputParameter>
										<InputParameter id="4" value="ID">idOrPidForSubItem</InputParameter>
										<InputParameter id="5">connectionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Use this attribute to specify the id of an existing parameter where the response header value will be set.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidAttribute</Name>
								<GroupDescription />
								<Description templateId="4102">
									<InputParameters>
										<InputParameter id="0" value="Response/Headers/Header@pid">attributeName</InputParameter>
										<InputParameter id="1">pidValue</InputParameter>
										<InputParameter id="2" value="HTTP Session">itemKind</InputParameter>
										<InputParameter id="3">httpSessionId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
										<InputParameter id="5" value="Connection">subItemKind</InputParameter>
										<InputParameter id="6">connectionId</InputParameter>
										<InputParameter id="7" value="ID">subIdOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Use this attribute to specify the id of an existing parameter where the response header value will be set.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="16">
						<Name namespace="Protocol.HTTP.Session">CheckIdAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1100">
									<InputParameters>
										<InputParameter id="0" value="HTTP/Session@id">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each session.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each session should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2100">
									<InputParameters>
										<InputParameter id="0" value="HTTP/Session@id">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each session.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each session should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3100">
									<InputParameters>
										<InputParameter id="0" value="HTTP/Session@id">attributeName</InputParameter>
										<InputParameter id="1">attributeValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each session.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each session should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4101">
									<InputParameters>
										<InputParameter id="0" value="HTTP/Session@id">attributeName</InputParameter>
										<InputParameter id="1">sessionId</InputParameter>
										<InputParameter id="2" value="Session">itemKind</InputParameter>
										<InputParameter id="3">sessionName</InputParameter>
										<InputParameter id="4" value="name">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each session.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each session should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>DuplicatedId</Name>
								<GroupDescription />
								<Description templateId="6001">
									<InputParameters>
										<InputParameter id="0" value="HTTP Session">itemKind</InputParameter>
										<InputParameter id="1">sessionId</InputParameter>
										<InputParameter id="2">sessionNames</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each session.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each session should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="17">
						<Name namespace="Protocol.HTTP.Session.Connection">CheckIdAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1101">
									<InputParameters>
										<InputParameter id="0" value="Connection@id">attributeName</InputParameter>
										<InputParameter id="1" value="HTTP Session">itemKind</InputParameter>
										<InputParameter id="2">sessionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each connection within a session.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each connection within a session should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="Connection@id">attributeName</InputParameter>
										<InputParameter id="1" value="HTTP Session">itemKind</InputParameter>
										<InputParameter id="2">sessionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each connection within a session.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each connection within a session should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3101">
									<InputParameters>
										<InputParameter id="0" value="Connection@id">attributeName</InputParameter>
										<InputParameter id="1" value="HTTP Session">itemKind</InputParameter>
										<InputParameter id="2">sessionId</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each connection within a session.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each connection within a session should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4101">
									<InputParameters>
										<InputParameter id="0" value="Connection@id">attributeName</InputParameter>
										<InputParameter id="1">connectionId</InputParameter>
										<InputParameter id="2" value="HTTP Session">itemKind</InputParameter>
										<InputParameter id="3">sessionId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each connection within a session.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each connection within a session should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>DuplicatedId</Name>
								<GroupDescription />
								<Description templateId="6002">
									<InputParameters>
										<InputParameter id="0" value="Connection">itemKind</InputParameter>
										<InputParameter id="1">connectionId</InputParameter>
										<InputParameter id="2">connectionNames</InputParameter>
										<InputParameter id="3" value="HTTP Session">parentKind</InputParameter>
										<InputParameter id="4">sessionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each connection within a session.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each connection within a session should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
				</Checks>
			</Category>
			<Category id="9">
				<Name>Pair</Name>
				<Checks>
					<Check id="1">
						<Name namespace="Protocol.Pairs.Pair.Name">CheckNameTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DuplicatedValue</Name>
								<GroupDescription />
								<Description templateId="6101">
									<InputParameters>
										<InputParameter id="0" value="Pair">itemKind</InputParameter>
										<InputParameter id="1" value="Name">valueKind</InputParameter>
										<InputParameter id="2">duplicateName</InputParameter>
										<InputParameter id="3">pairIds</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="2">
						<Name namespace="Protocol.Pairs.Pair.Content">CheckContentTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingClearResponseRoutine</Name>
								<GroupDescription />
								<Description>
									<Format>Missing clear response routine for pair '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">pairId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Typically when a pair contains multiple responses, a clear response routine needs to be implemented in order to make sure parameters gets updated correctly.[NewLine]There are 2 possible ways to implement the clear routine.[NewLine]However, the first one is recommended as it is more efficient.[NewLine]    - Recommended way: After response X, clear all other responses present in the same pair.[NewLine]    - Alternative way: After response X, clear response X.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>MissingClearResponseRoutine_Sub</Name>
								<GroupDescription />
								<Description>
									<Format>Missing clear response '{0}' routine after response '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">responseIdToClear</InputParameter>
										<InputParameter id="1">responseIdOnWhichToTrigger</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Typically when a pair contains multiple responses, a clear response routine needs to be implemented in order to make sure parameters gets updated correctly.[NewLine]There are 2 possible ways to implement the clear routine.[NewLine]However, the first one is recommended as it is more efficient.[NewLine]    - Recommended way: After response X, clear all other responses present in the same pair.[NewLine]    - Alternative way: After response X, clear response X.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="3">
						<Name namespace="Protocol.Pairs.Pair">CheckIdAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1100">
									<InputParameters>
										<InputParameter id="0" value="Pair@id">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each pair.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each pair should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2100">
									<InputParameters>
										<InputParameter id="0" value="Pair@id">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each pair.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each pair should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3100">
									<InputParameters>
										<InputParameter id="0" value="Pair@id">attributeName</InputParameter>
										<InputParameter id="1">attributeValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each pair.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each pair should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4101">
									<InputParameters>
										<InputParameter id="0" value="Pair@id">attributeName</InputParameter>
										<InputParameter id="1">pairId</InputParameter>
										<InputParameter id="2" value="Pair">itemKind</InputParameter>
										<InputParameter id="3">pairName</InputParameter>
										<InputParameter id="4" value="name">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each pair.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each pair should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>DuplicatedId</Name>
								<GroupDescription />
								<Description templateId="6001">
									<InputParameters>
										<InputParameter id="0" value="Pair">itemKind</InputParameter>
										<InputParameter id="1">pairId</InputParameter>
										<InputParameter id="2">pairNames</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each pair.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each pair should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="4">
						<Name namespace="Protocol.Pairs.Pair.Content.Command">CheckCommandTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingTag</Name>
								<GroupDescription />
								<Description templateId="1001">
									<InputParameters>
										<InputParameter id="0" value="Content/Command">tagName</InputParameter>
										<InputParameter id="1" value="Pair">itemKind</InputParameter>
										<InputParameter id="2">pairId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Content tag of every pairs should contain one and only one Command tag which should have as value an unsigned number and refer to the id of an existing Command.[NewLine]Note that only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="Content/Command">tagName</InputParameter>
										<InputParameter id="1" value="Pair">itemKind</InputParameter>
										<InputParameter id="2">pairId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Content tag of every pairs should contain one and only one Command tag which should have as value an unsigned number and refer to the id of an existing Command.[NewLine]Note that only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedTag</Name>
								<GroupDescription />
								<Description templateId="3001">
									<InputParameters>
										<InputParameter id="0" value="Content/Command">tagName</InputParameter>
										<InputParameter id="1" value="Pair">itemKind</InputParameter>
										<InputParameter id="2">pairId</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Content tag of every pairs should contain one and only one Command tag which should have as value an unsigned number and refer to the id of an existing Command.[NewLine]Note that only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4001">
									<InputParameters>
										<InputParameter id="0">tagValue</InputParameter>
										<InputParameter id="1" value="Content/Command">tagName</InputParameter>
										<InputParameter id="2" value="Pair">itemKind</InputParameter>
										<InputParameter id="3">pairId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Content tag of every pairs should contain one and only one Command tag which should have as value an unsigned number and refer to the id of an existing Command.[NewLine]Note that only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7001">
									<InputParameters>
										<InputParameter id="0" value="Content/Command">tagName</InputParameter>
										<InputParameter id="1" value="Command">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">commandId</InputParameter>
										<InputParameter id="4" value="Pair">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">pairId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Content tag of every pairs should contain one and only one Command tag which should have as value an unsigned number and refer to the id of an existing Command.[NewLine]Note that only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="5">
						<Name namespace="Protocol.Pairs.Pair.Content.Response">CheckResponseTag</Name>
						<ErrorMessages>
							<ErrorMessage id="2">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="Content/Response">tagName</InputParameter>
										<InputParameter id="1" value="Pair">itemKind</InputParameter>
										<InputParameter id="2">pairId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Content tag of pairs can contain any number of Response tags.[NewLine]Those should have as value an unsigned number and refer to the id of an existing Response.[NewLine]A given pair can't refer to the same Response more than once (including both Response and ResponseOnBadCommand tags).[NewLine][NewLine]Also note that only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedTag</Name>
								<GroupDescription />
								<Description templateId="3001">
									<InputParameters>
										<InputParameter id="0" value="Content/Response">tagName</InputParameter>
										<InputParameter id="1" value="Pair">itemKind</InputParameter>
										<InputParameter id="2">pairId</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Content tag of pairs can contain any number of Response tags.[NewLine]Those should have as value an unsigned number and refer to the id of an existing Response.[NewLine]A given pair can't refer to the same Response more than once (including both Response and ResponseOnBadCommand tags).[NewLine][NewLine]Also note that only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4001">
									<InputParameters>
										<InputParameter id="0">tagValue</InputParameter>
										<InputParameter id="1" value="Content/Response">tagName</InputParameter>
										<InputParameter id="2" value="Pair">itemKind</InputParameter>
										<InputParameter id="3">pairId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Content tag of pairs can contain any number of Response tags.[NewLine]Those should have as value an unsigned number and refer to the id of an existing Response.[NewLine]A given pair can't refer to the same Response more than once (including both Response and ResponseOnBadCommand tags).[NewLine][NewLine]Also note that only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7001">
									<InputParameters>
										<InputParameter id="0" value="Content/Response">tagName</InputParameter>
										<InputParameter id="1" value="Response">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">responseId</InputParameter>
										<InputParameter id="4" value="Pair">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">pairId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Content tag of pairs can contain any number of Response tags.[NewLine]Those should have as value an unsigned number and refer to the id of an existing Response.[NewLine]A given pair can't refer to the same Response more than once (including both Response and ResponseOnBadCommand tags).[NewLine][NewLine]Also note that only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="6">
						<Name namespace="Protocol.Pairs.Pair.Content.ResponseOnBadCommand">CheckResponseOnBadCommandTag</Name>
						<ErrorMessages>
							<ErrorMessage id="2">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="Content/ResponseOnBadCommand">tagName</InputParameter>
										<InputParameter id="1" value="Pair">itemKind</InputParameter>
										<InputParameter id="2">pairId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Content tag of a pairs can contain maximum one ResponseOnBadCommand tag.[NewLine]It should have as value an unsigned number and refer to the id of an existing Response.[NewLine]A given pair can't refer to the same Response more than once (including both Response and ResponseOnBadCommand tags).[NewLine][NewLine]Also note that only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedTag</Name>
								<GroupDescription />
								<Description templateId="3001">
									<InputParameters>
										<InputParameter id="0" value="Content/ResponseOnBadCommand">tagName</InputParameter>
										<InputParameter id="1" value="Pair">itemKind</InputParameter>
										<InputParameter id="2">pairId</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Content tag of a pairs can contain maximum one ResponseOnBadCommand tag.[NewLine]It should have as value an unsigned number and refer to the id of an existing Response.[NewLine]A given pair can't refer to the same Response more than once (including both Response and ResponseOnBadCommand tags).[NewLine][NewLine]Also note that only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4001">
									<InputParameters>
										<InputParameter id="0">tagValue</InputParameter>
										<InputParameter id="1" value="Content/ResponseOnBadCommand">tagName</InputParameter>
										<InputParameter id="2" value="Pair">itemKind</InputParameter>
										<InputParameter id="3">pairId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Content tag of a pairs can contain maximum one ResponseOnBadCommand tag.[NewLine]It should have as value an unsigned number and refer to the id of an existing Response.[NewLine]A given pair can't refer to the same Response more than once (including both Response and ResponseOnBadCommand tags).[NewLine][NewLine]Also note that only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7001">
									<InputParameters>
										<InputParameter id="0" value="Content/ResponseOnBadCommand">tagName</InputParameter>
										<InputParameter id="1" value="Response">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">responseId</InputParameter>
										<InputParameter id="4" value="Pair">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">pairId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Content tag of a pairs can contain maximum one ResponseOnBadCommand tag.[NewLine]It should have as value an unsigned number and refer to the id of an existing Response.[NewLine]A given pair can't refer to the same Response more than once (including both Response and ResponseOnBadCommand tags).[NewLine][NewLine]Also note that only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="7">
						<Name namespace="Protocol.Pairs.Pair.Condition">CheckConditionTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>InvalidCondition</Name>
								<GroupDescription />
								<Description templateId="4901">
									<InputParameters>
										<InputParameter id="0">conditionString</InputParameter>
										<InputParameter id="1">invalidityReason</InputParameter>
										<InputParameter id="2" value="Pair">itemKind</InputParameter>
										<InputParameter id="3" value="ID">idOrPid</InputParameter>
										<InputParameter id="4">pairId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A 'Pair/Condition' should always contain a statement returning a boolean.[NewLine]See DDL for more information.[NewLine][NewLine]Here are a few examples of mistakes covered by this error:[NewLine]- Empty condition.[NewLine]- Malformed condition:[NewLine]  - The 'id:' placeholder used to retrieve a parameter value is incorrectly defined.[NewLine]  - The number of opening & closing parentheses is not matching.[NewLine]  - '&&', '||' is used instead of 'AND', 'OR'.[NewLine]- Condition that is not a boolean expression.[NewLine]- Fully hard-coded boolean expression (No reference to any parameter value).[NewLine]- etc.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7001">
									<InputParameters>
										<InputParameter id="0" value="Pair/Condition">tagName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="3">paramId</InputParameter>
										<InputParameter id="4" value="Pair">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">pairId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A 'Pair/Condition' should always contain a statement returning a boolean.[NewLine]See DDL for more information.[NewLine][NewLine]Here are a few examples of mistakes covered by this error:[NewLine]- Empty condition.[NewLine]- Malformed condition:[NewLine]  - The 'id:' placeholder used to retrieve a parameter value is incorrectly defined.[NewLine]  - The number of opening & closing parentheses is not matching.[NewLine]  - '&&', '||' is used instead of 'AND', 'OR'.[NewLine]- Condition that is not a boolean expression.[NewLine]- Fully hard-coded boolean expression (No reference to any parameter value).[NewLine]- etc.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>ConditionCanBeSimplified</Name>
								<GroupDescription />
								<Description templateId="4902">
									<InputParameters>
										<InputParameter id="0">conditionString</InputParameter>
										<InputParameter id="1" value="Pair">itemKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPid</InputParameter>
										<InputParameter id="3">pairId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Pair/Condition' can be simplified. Some examples of when the condition can be simplified:[NewLine]  - The condition contains redundant parentheses.[NewLine]  - The condition does not contain a variable and therefore can either be dropped completely (or a variable must be included).]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
				</Checks>
			</Category>
			<Category id="10">
				<Name>Command</Name>
				<Checks>
					<Check id="1">
						<Name namespace="Protocol.Commands.Command">CheckCommandLogic</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingCrcCommandAction</Name>
								<GroupDescription />
								<Description templateId="1300">
									<InputParameters>
										<InputParameter id="0" value="CRC">actionType</InputParameter>
										<InputParameter id="1">commandId</InputParameter>
										<InputParameter id="2">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Make sure a CRC action is triggered before command.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="2">
						<Name namespace="Protocol.Commands.Command.Name">CheckNameTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DuplicatedValue</Name>
								<GroupDescription />
								<Description templateId="6101">
									<InputParameters>
										<InputParameter id="0" value="Command">itemKind</InputParameter>
										<InputParameter id="1" value="Name">valueKind</InputParameter>
										<InputParameter id="2">duplicateName</InputParameter>
										<InputParameter id="3">commandIds</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="3">
						<Name namespace="Protocol.Commands.Command.Content.Param">CheckParamTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7001">
									<InputParameters>
										<InputParameter id="0" value="Content/Param">tagName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">referencedPid</InputParameter>
										<InputParameter id="4" value="Command">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">commandId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Command/Content tag should contain a list of 'Param' tags. The 'Param' tags should refer to the id of an existing Param.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyParamTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="Content/Param">tagName</InputParameter>
										<InputParameter id="1" value="Command">itemKind</InputParameter>
										<InputParameter id="2">commandId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Command/Content tag should contain a list of 'Param' tags. The 'Param' tags should refer to the id of an existing Param.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidParamTag</Name>
								<GroupDescription />
								<Description templateId="4001">
									<InputParameters>
										<InputParameter id="0">value</InputParameter>
										<InputParameter id="1" value="Content/Param">tagName</InputParameter>
										<InputParameter id="2" value="Command">itemKind</InputParameter>
										<InputParameter id="3">commandId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Command/Content tag should contain a list of 'Param' tags. The 'Param' tags should refer to the id of an existing Param.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="4">
						<Name namespace="Protocol.Commands.Command">CheckAsciiAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="ascii">attributeName</InputParameter>
										<InputParameter id="1" value="Command">itemKind</InputParameter>
										<InputParameter id="2">commandId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[This attribute allows you to specify which parameters should be sent as ASCII. Possible values:[NewLine] - True: all params as ascii[NewLine] - False: no param as ascii[NewLine] - Semicolon separated list of Param IDs[NewLine]Note that this option only makes sense when using unicode feature.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>InvalidAttribute</Name>
								<GroupDescription />
								<Description templateId="4101">
									<InputParameters>
										<InputParameter id="0" value="ascii">attributeName</InputParameter>
										<InputParameter id="1">asciiValue</InputParameter>
										<InputParameter id="2" value="Command">itemKind</InputParameter>
										<InputParameter id="3">commandId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[This attribute allows you to specify which parameters should be sent as ASCII. Possible values:[NewLine] - True: all params as ascii[NewLine] - False: no param as ascii[NewLine] - Semicolon separated list of Param IDs[NewLine]Note that this option only makes sense when using unicode feature.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7101">
									<InputParameters>
										<InputParameter id="0" value="ascii">attributeName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">pid</InputParameter>
										<InputParameter id="4" value="Command">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">commandId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[This attribute allows you to specify which parameters should be sent as ASCII. Possible values:[NewLine] - True: all params as ascii[NewLine] - False: no param as ascii[NewLine] - Semicolon separated list of Param IDs[NewLine]Note that this option only makes sense when using unicode feature.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="5">
						<Name namespace="Protocol.Commands.Command">CheckIdAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1100">
									<InputParameters>
										<InputParameter id="0" value="Command@id">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each command.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each command should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2100">
									<InputParameters>
										<InputParameter id="0" value="Command@id">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each command.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each command should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3100">
									<InputParameters>
										<InputParameter id="0" value="Command@id">attributeName</InputParameter>
										<InputParameter id="1">attributeValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each command.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each command should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4101">
									<InputParameters>
										<InputParameter id="0" value="Command@id">attributeName</InputParameter>
										<InputParameter id="1">commandId</InputParameter>
										<InputParameter id="2" value="Command">itemKind</InputParameter>
										<InputParameter id="3">commandName</InputParameter>
										<InputParameter id="4" value="name">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each command.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each command should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>DuplicatedId</Name>
								<GroupDescription />
								<Description templateId="6001">
									<InputParameters>
										<InputParameter id="0" value="Command">itemKind</InputParameter>
										<InputParameter id="1">commandId</InputParameter>
										<InputParameter id="2">commandNames</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each command.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each command should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
				</Checks>
			</Category>
			<Category id="11">
				<Name>Response</Name>
				<Checks>
					<Check id="1">
						<Name namespace="Protocol.Responses.Response">CheckResponseLogic</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingCrcResponseAction</Name>
								<GroupDescription />
								<Description templateId="1301">
									<InputParameters>
										<InputParameter id="0" value="CRC">actionType</InputParameter>
										<InputParameter id="1">responseId</InputParameter>
										<InputParameter id="2">paramPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Make sure a CRC action is triggered after response.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>SmartSerialResponseShouldContainHeaderTrailer</Name>
								<GroupDescription />
								<Description>
									<Format>Defined headers and trailers linked to smart-serial connection '{0}' should be used in response '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">connectionId</InputParameter>
										<InputParameter id="1">responseId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[Use a header and matching trailer parameter in the response.]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[If there is a header/trailer parameter defined with a headerTrailerLink on a specific connection that is smart-serial, or when there is no connection specified it will automatically apply to the smart-serial connection, then SLPort will be filtering on this header/trailer pairs regardless on how the response definition looks like.[NewLine]This means if there is e.g. a response defined for the smart-serial connection that consists of one next param type parameter without header/trailer with the intention to receive ALL data that is entering on the socket then this will not work as expected as SLPort will be filtering on the header/trailer pairs and will only foward that data to SLProtocol. Data that does not match the header/trailer will be dropped in the background by SLPort and will also not be shown in the StreamViewer. When there are headerTrailerLink parameters defined for a smart-serial connection then these parameters should also be used on the response for the smart-serial connection.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="2">
						<Name namespace="Protocol.Responses.Response.Name">CheckNameTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DuplicatedValue</Name>
								<GroupDescription />
								<Description templateId="6101">
									<InputParameters>
										<InputParameter id="0" value="Response">itemKind</InputParameter>
										<InputParameter id="1" value="Name">valueKind</InputParameter>
										<InputParameter id="2">duplicateName</InputParameter>
										<InputParameter id="3">responseIds</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="3">
						<Name namespace="Protocol.Responses.Response.Content.Param">CheckParamTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7001">
									<InputParameters>
										<InputParameter id="0" value="Content/Param">tagName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="3">referencedPid</InputParameter>
										<InputParameter id="4" value="Response">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">responseId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Response/Content tag should contain a list of 'Param' tags. The 'Param' tags should refer to the id of an existing Param.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyParamTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="Content/Param">tagName</InputParameter>
										<InputParameter id="1" value="Response">itemKind</InputParameter>
										<InputParameter id="2">responseId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Response/Content tag should contain a list of 'Param' tags. The 'Param' tags should refer to the id of an existing Param.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidParamTag</Name>
								<GroupDescription />
								<Description templateId="4001">
									<InputParameters>
										<InputParameter id="0">value</InputParameter>
										<InputParameter id="1" value="Content/Param">tagName</InputParameter>
										<InputParameter id="2" value="Response">itemKind</InputParameter>
										<InputParameter id="3">responseId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Response/Content tag should contain a list of 'Param' tags. The 'Param' tags should refer to the id of an existing Param.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="4">
						<Name namespace="Protocol.Responses.Response">CheckIdAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1100">
									<InputParameters>
										<InputParameter id="0" value="Response@id">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each response.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each response should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2100">
									<InputParameters>
										<InputParameter id="0" value="Response@id">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each response.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each response should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3100">
									<InputParameters>
										<InputParameter id="0" value="Response@id">attributeName</InputParameter>
										<InputParameter id="1">attributeValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each response.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each response should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4101">
									<InputParameters>
										<InputParameter id="0" value="Response@id">attributeName</InputParameter>
										<InputParameter id="1">responseId</InputParameter>
										<InputParameter id="2" value="Response">itemKind</InputParameter>
										<InputParameter id="3">responseName</InputParameter>
										<InputParameter id="4" value="name">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each response.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each response should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>DuplicatedId</Name>
								<GroupDescription />
								<Description templateId="6001">
									<InputParameters>
										<InputParameter id="0" value="Response">itemKind</InputParameter>
										<InputParameter id="1">responseId</InputParameter>
										<InputParameter id="2">responseNames</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each response.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each response should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
				</Checks>
			</Category>
			<Category id="12">
				<Name>Ports</Name>
				<Checks>
					<Check id="1">
						<Name namespace="Protocol.Ports.PortSettings">CheckNameAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="2">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1101">
									<InputParameters>
										<InputParameter id="0" value="Ports/PortSettings@name">attributeName</InputParameter>
										<InputParameter id="1" value="Connection">itemKind</InputParameter>
										<InputParameter id="2">connectionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[- When having only one connection for a specific type, the name needs to be of following format, where the second option can (optionally) be used to add more info about the goal of the connection (ex: XXX = Traps, XXX = Events, XXX = Alarms, etc):[NewLine]     - "IP Connection" or "IP Connection - XXX": for drivers that support TCP and/or UDP[NewLine]     - "HTTP Connection" or "HTTP Connection - XXX"[NewLine]     - "SSH Connection" or "SSH Connection - XXX"[NewLine]     - "SNMP Connection" or "SNMP Connection - XXX"[NewLine]     - "Serial Connection" or "Serial Connection - XXX": for drivers that only support the physical serial port (driver connection of type serial but not support TCP nor UDP)[NewLine]- When having more than one connection for a specific type, the name need to be of following format where XXX is used to distinguish them (ex: XXX = Redundant, XXX = Redundant 2, XXX = Backup, XXX = Traps, XXX = Events, etc):[NewLine]     - "IP Connection - XXX"[NewLine]     - "HTTP Connection - XXX"[NewLine]     - etc]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="Ports/PortSettings@name">attributeName</InputParameter>
										<InputParameter id="1" value="Connection">itemKind</InputParameter>
										<InputParameter id="2">connectionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[- When having only one connection for a specific type, the name needs to be of following format, where the second option can (optionally) be used to add more info about the goal of the connection (ex: XXX = Traps, XXX = Events, XXX = Alarms, etc):[NewLine]     - "IP Connection" or "IP Connection - XXX": for drivers that support TCP and/or UDP[NewLine]     - "HTTP Connection" or "HTTP Connection - XXX"[NewLine]     - "SSH Connection" or "SSH Connection - XXX"[NewLine]     - "SNMP Connection" or "SNMP Connection - XXX"[NewLine]     - "Serial Connection" or "Serial Connection - XXX": for drivers that only support the physical serial port (driver connection of type serial but not support TCP nor UDP)[NewLine]- When having more than one connection for a specific type, the name need to be of following format where XXX is used to distinguish them (ex: XXX = Redundant, XXX = Redundant 2, XXX = Backup, XXX = Traps, XXX = Events, etc):[NewLine]     - "IP Connection - XXX"[NewLine]     - "HTTP Connection - XXX"[NewLine]     - etc]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3101">
									<InputParameters>
										<InputParameter id="0" value="Ports/PortSettings@name">attributeName</InputParameter>
										<InputParameter id="1" value="Connection">itemKind</InputParameter>
										<InputParameter id="2">connectionId</InputParameter>
										<InputParameter id="3">attributeValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[- When having only one connection for a specific type, the name needs to be of following format, where the second option can (optionally) be used to add more info about the goal of the connection (ex: XXX = Traps, XXX = Events, XXX = Alarms, etc):[NewLine]     - "IP Connection" or "IP Connection - XXX": for drivers that support TCP and/or UDP[NewLine]     - "HTTP Connection" or "HTTP Connection - XXX"[NewLine]     - "SSH Connection" or "SSH Connection - XXX"[NewLine]     - "SNMP Connection" or "SNMP Connection - XXX"[NewLine]     - "Serial Connection" or "Serial Connection - XXX": for drivers that only support the physical serial port (driver connection of type serial but not support TCP nor UDP)[NewLine]- When having more than one connection for a specific type, the name need to be of following format where XXX is used to distinguish them (ex: XXX = Redundant, XXX = Redundant 2, XXX = Backup, XXX = Traps, XXX = Events, etc):[NewLine]     - "IP Connection - XXX"[NewLine]     - "HTTP Connection - XXX"[NewLine]     - etc]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
				</Checks>
			</Category>
			<Category id="13">
				<Name>Relation</Name>
				<Checks>
					<Check id="1">
						<Name namespace="Protocol.Relations.Relation">CheckNameAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DuplicatedValue</Name>
								<GroupDescription />
								<Description templateId="6100">
									<InputParameters>
										<InputParameter id="0" value="Relation">itemKind</InputParameter>
										<InputParameter id="1" value="name">valueKind</InputParameter>
										<InputParameter id="2">duplicateName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="2">
						<Name namespace="Protocol.Relations.Relation">CheckPathAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7100">
									<InputParameters>
										<InputParameter id="0" value="Relation">tagName</InputParameter>
										<InputParameter id="1" value="path">attributeName</InputParameter>
										<InputParameter id="2" value="Table">referenceKind</InputParameter>
										<InputParameter id="3" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="4">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Relation path should contain a semicolon list of Param IDs for tables that are linked to each other.[NewLine][NewLine]Additionally, Every adjacent table in a relation path need at least one foreignKey from one another.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1100">
									<InputParameters>
										<InputParameter id="0" value="Relation@path">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Relation path should contain a semicolon list of Param IDs for tables that are linked to each other.[NewLine][NewLine]Additionally, Every adjacent table in a relation path need at least one foreignKey from one another.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4100">
									<InputParameters>
										<InputParameter id="0" value="Relation@path">attributeName</InputParameter>
										<InputParameter id="1">pathValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Relation path should contain a semicolon list of Param IDs for tables that are linked to each other.[NewLine][NewLine]Additionally, Every adjacent table in a relation path need at least one foreignKey from one another.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2100">
									<InputParameters>
										<InputParameter id="0" value="Relation@path">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Relation path should contain a semicolon list of Param IDs for tables that are linked to each other.[NewLine][NewLine]Additionally, Every adjacent table in a relation path need at least one foreignKey from one another.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>MissingForeignKeyForRelation</Name>
								<GroupDescription />
								<Description>
									<Format>Missing foreignKey(s) detected for relation '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">relationNameOrPath</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Relation path should contain a semicolon list of Param IDs for tables that are linked to each other.[NewLine][NewLine]Additionally, Every adjacent table in a relation path need at least one foreignKey from one another.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>MissingForeignKeyInTable_Sub</Name>
								<GroupDescription />
								<Description>
									<Format>Missing foreignKey between table '{0}' and table '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">table1Pid</InputParameter>
										<InputParameter id="1">table2Pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Relation path should contain a semicolon list of Param IDs for tables that are linked to each other.[NewLine][NewLine]Additionally, Every adjacent table in a relation path need at least one foreignKey from one another.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>ReferencedParamWrongType</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid Param Type '{0}' in relation. Expected Type 'array'. Param ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">paramType</InputParameter>
										<InputParameter id="1">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Relation path should contain a semicolon list of Param IDs for tables that are linked to each other.[NewLine][NewLine]Additionally, Every adjacent table in a relation path need at least one foreignKey from one another.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="8">
								<Name>ReferencedParamExpectingRTDisplay</Name>
								<GroupDescription />
								<Description>
									<Format>RTDisplay(true) expected on Param referenced in a relation path. Param ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Relation path should contain a semicolon list of Param IDs for tables that are linked to each other.[NewLine][NewLine]Additionally, every table in a relation is expected to have its RTDisplay element set to true.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="9">
								<Name>DuplicateValue</Name>
								<GroupDescription />
								<Description templateId="6100">
									<InputParameters>
										<InputParameter id="0" value="Relation">itemKind</InputParameter>
										<InputParameter id="1" value="path">valueKind</InputParameter>
										<InputParameter id="2">duplicateValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Relation path should contain a semicolon list of Param IDs for tables that are linked to each other.[NewLine][NewLine]Additionally, Every adjacent table in a relation path need at least one foreignKey from one another.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
				</Checks>
			</Category>
			<Category id="14">
				<Name>Topology</Name>
				<Checks>
					<Check id="1">
						<Name namespace="Protocol.Topologies.Topology">CheckNameAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DuplicatedValue</Name>
								<GroupDescription />
								<Description templateId="6100">
									<InputParameters>
										<InputParameter id="0" value="Topology">itemKind</InputParameter>
										<InputParameter id="1" value="name">valueKind</InputParameter>
										<InputParameter id="2">duplicateName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
				</Checks>
			</Category>
			<Category id="15">
				<Name>Chain</Name>
				<Checks>
					<Check id="1">
						<Name namespace="Protocol.Chains">CheckChildNameAttributes</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DuplicatedValue</Name>
								<GroupDescription />
								<Description>
									<Format>Duplicated {0} Name '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0" value="Chain child">itemKind</InputParameter>
										<InputParameter id="1">chainName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
				</Checks>
			</Category>
			<Category id="16">
				<Name>ParameterGroup</Name>
				<Checks>
					<Check id="1">
						<Name namespace="Protocol.ParameterGroups.Group">CheckDynamicIdAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7101">
									<InputParameters>
										<InputParameter id="0" value="dynamicId">attributeName</InputParameter>
										<InputParameter id="1" value="Table">referenceKind</InputParameter>
										<InputParameter id="2" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="3">tablePid</InputParameter>
										<InputParameter id="4" value="ParameterGroup">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">parameterGroupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The ParameterGroups/Group@dynamicId should always refer to an existing table Param.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>InvalidAttribute</Name>
								<GroupDescription />
								<Description templateId="4101">
									<InputParameters>
										<InputParameter id="0" value="dynamicId">attributeName</InputParameter>
										<InputParameter id="1">attributeValue</InputParameter>
										<InputParameter id="2" value="ParameterGroup">itemKind</InputParameter>
										<InputParameter id="3">parameterGroupId</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The ParameterGroup/Groups/Group/Params/Param tags should all refer to existing parameters.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="dynamicId">attributeName</InputParameter>
										<InputParameter id="1" value="ParameterGroup">itemKind</InputParameter>
										<InputParameter id="2">groupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The ParameterGroup/Groups/Group/Params/Param tags should all refer to existing parameters.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="2">
						<Name namespace="Protocol.ParameterGroups">CheckParameterGroupsTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DcfAdded</Name>
								<GroupDescription />
								<Description>
									<Format>DCF was added.</Format>
									<InputParameters />
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="3">
						<Name namespace="Protocol.ParameterGroups.Group">CheckNameAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="3">
								<Name>DcfParameterGroupNameChanged</Name>
								<GroupDescription />
								<Description>
									<Format>DCF Group name for ParameterGroup '{0}' was changed from '{1}' into '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">groupId</InputParameter>
										<InputParameter id="1">oldName</InputParameter>
										<InputParameter id="2">newName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1101">
									<InputParameters>
										<InputParameter id="0" value="name">attributeName</InputParameter>
										<InputParameter id="1" value="ParameterGroup">itemKind</InputParameter>
										<InputParameter id="2">parameterGroupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[All ParameterGroups should have an unique name.[NewLine]These names are used by DataMiner to build the DCF interfaces names. Therefore, we recommend to keep it rather small (max 25 chars) and avoid using special characters (see protocol guide for more info).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="name">attributeName</InputParameter>
										<InputParameter id="1" value="ParameterGroup">itemKind</InputParameter>
										<InputParameter id="2">parameterGroupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[All ParameterGroups should have an unique name.[NewLine]These names are used by DataMiner to build the DCF interfaces names. Therefore, we recommend to keep it rather small (max 25 chars) and avoid using special characters (see protocol guide for more info).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>DuplicatedValue</Name>
								<GroupDescription />
								<Description templateId="6101">
									<InputParameters>
										<InputParameter id="0" value="ParameterGroup">itemKind</InputParameter>
										<InputParameter id="1" value="Name">valueKind</InputParameter>
										<InputParameter id="2">duplicateName</InputParameter>
										<InputParameter id="3">parameterGroupIds</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[All ParameterGroups should have an unique name.[NewLine]These names are used by DataMiner to build the DCF interfaces names. Therefore, we recommend to keep it rather small (max 25 chars) and avoid using special characters (see protocol guide for more info).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>InvalidChars</Name>
								<GroupDescription />
								<Description templateId="4201">
									<InputParameters>
										<InputParameter id="0" value="name">attributeName</InputParameter>
										<InputParameter id="1">attributeValue</InputParameter>
										<InputParameter id="2">invalidCharacters</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[All ParameterGroups should have an unique name.[NewLine]These names are used by DataMiner to build the DCF interfaces names. Therefore, we recommend to keep it rather small (max 25 chars) and avoid using special characters (see protocol guide for more info).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="8">
								<Name>LengthyValue</Name>
								<GroupDescription />
								<Description>
									<Format>Too long ParameterGroup Name. Current value '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">parameterGroupName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[All ParameterGroups should have an unique name.[NewLine]These names are used by DataMiner to build the DCF interfaces names. Therefore, we recommend to keep it rather small (max 25 chars) and avoid using special characters (see protocol guide for more info).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="9">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3101">
									<InputParameters>
										<InputParameter id="0" value="name">attributeName</InputParameter>
										<InputParameter id="1" value="ParameterGroup">itemKind</InputParameter>
										<InputParameter id="2">parameterGroupId</InputParameter>
										<InputParameter id="3">untrimmedName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[All ParameterGroups should have an unique name.[NewLine]These names are used by DataMiner to build the DCF interfaces names. Therefore, we recommend to keep it rather small (max 25 chars) and avoid using special characters (see protocol guide for more info).]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="4">
						<Name namespace="Protocol.ParameterGroups.Group">CheckTypeAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DcfParameterGroupTypeChanged</Name>
								<GroupDescription />
								<Description>
									<Format>DCF Group type for ParameterGroup '{0}' was changed from '{1}' into '{2}'.</Format>
									<InputParameters>
										<InputParameter id="0">groupId</InputParameter>
										<InputParameter id="1">oldType</InputParameter>
										<InputParameter id="2">newType</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="5">
						<Name namespace="Protocol.ParameterGroups.Group">CheckGroupTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>DcfParameterGroupRemoved</Name>
								<GroupDescription />
								<Description>
									<Format>ParameterGroup '{0}' was removed.</Format>
									<InputParameters>
										<InputParameter id="0">groupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>MajorChangeChecker</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>IncompatibleParamReferences</Name>
								<GroupDescription />
								<Description>
									<Format>Incompatible links to parameters via 'Group@dynamicId' attribute and 'Group/Params' element. ParameterGroup ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">parameterGroupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Different type of DCF interfaces can be created:[NewLine]  - Standalone interface: without 'Group@dynamicId' attribute[NewLine]      - Without alarm linking: without 'Group/Params' element[NewLine]      - With alarm linking: with 'Group/Params/Param' element(s)[NewLine]  - Dynamic interfaces: with 'Group@dynamicId' and 'Group@dynamicIndex' attributes.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="6">
						<Name namespace="Protocol.ParameterGroups.Group.Params.Param">CheckIdAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7101">
									<InputParameters>
										<InputParameter id="0" value="ParameterGroup/Group/Params/Param@id">attributeName</InputParameter>
										<InputParameter id="1" value="Param">referenceKind</InputParameter>
										<InputParameter id="2" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="3">pid</InputParameter>
										<InputParameter id="4" value="ParameterGroup">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">parameterGroupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['ParameterGroups/Group/Params/Param' elements are used to link the alarm status of a DCF interfaces to one of the following types of parameters[NewLine] - Standalone parameter: 'ParameterGroups/Group/Params/Param' element should contain a standalong parameter pid.[NewLine] - Table cell: 'ParameterGroups/Group/Params/Param' element should contain a column parameter pid and index attribute should be used to specify the row key.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>DuplicateParamInParameterGroup</Name>
								<GroupDescription />
								<Description>
									<Format>Duplicate Param '{0}' in ParameterGroup '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">paramId</InputParameter>
										<InputParameter id="1">parameterGroupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Make sure the same Param is not added more than once in a ParameterGroup.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="7">
						<Name namespace="Protocol.ParameterGroups.Group">CheckIdAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1100">
									<InputParameters>
										<InputParameter id="0" value="ParameterGroups/Group@id">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each parameterGroup.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each parameterGroup should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2100">
									<InputParameters>
										<InputParameter id="0" value="ParameterGroups/Group@id">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each parameterGroup.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each parameterGroup should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3100">
									<InputParameters>
										<InputParameter id="0" value="ParameterGroups/Group@id">attributeName</InputParameter>
										<InputParameter id="1">attributeValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each parameterGroup.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each parameterGroup should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4101">
									<InputParameters>
										<InputParameter id="0" value="ParameterGroups/Group@id">attributeName</InputParameter>
										<InputParameter id="1">parameterGroupId</InputParameter>
										<InputParameter id="2" value="ParameterGroup">itemKind</InputParameter>
										<InputParameter id="3">parameterGroupName</InputParameter>
										<InputParameter id="4" value="name">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each parameterGroup.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each parameterGroup should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>OutOfRangeId</Name>
								<GroupDescription />
								<Description>
									<Format>Out of range ParameterGroup ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="1">id</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[A ParameterGroup should have a unique id > 0 and <= 10000.[NewLine]Note that from DM 9.0.4 onward, id > 0 and <=100.000 can be used.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>DuplicatedId</Name>
								<GroupDescription />
								<Description templateId="6001">
									<InputParameters>
										<InputParameter id="0" value="ParameterGroup">itemKind</InputParameter>
										<InputParameter id="1">parameterGroupId</InputParameter>
										<InputParameter id="2">parameterGroupNames</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Critical</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>Breaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The id attribute is used internally as the identifier for each parameterGroup.[NewLine]It is therefore mandatory and needs to follow a number of rules:[NewLine]- Each parameterGroup should have a unique id.[NewLine]- Should be an unsigned integer.[NewLine]- Only plain numbers are allowed (no leading signs, no leading zeros, no scientific notation, etc).]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="8">
						<Name namespace="Protocol.ParameterGroups.Group">CheckDynamicIndexAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingDynamicIdAttribute</Name>
								<GroupDescription />
								<Description>
									<Format>Filtering via 'Group@dynamicIndex' attribute requires a 'Group@dynamicId' attribute. ParameterGroup ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">parameterGroupId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['Group@dynamicIndex' attribute allows to filter on Display Keys before creating dynamic DCF interfaces.[NewLine]Such filter is applied on the table referred to via the 'Group@dynamicId' attribute.[NewLine]This means that the presence of a 'Group@dynamicIndex' attribute while there is no 'Group@dynamicIndex' doesn't make sense.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
				</Checks>
			</Category>
			<Category id="17">
				<Name>ExportRule</Name>
				<Checks>
					<Check id="1">
						<Name namespace="Protocol.ExportRules.ExportRule">CheckTableAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7100">
									<InputParameters>
										<InputParameter id="0" value="ExportRule">tagName</InputParameter>
										<InputParameter id="1" value="table">attributeName</InputParameter>
										<InputParameter id="2" value="Table">referenceKind</InputParameter>
										<InputParameter id="3" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="4">pid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Make sure every attribute that links to a parameter is configured correctly and links to an existing parameter id.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1100">
									<InputParameters>
										<InputParameter id="0" value="ExportRule@table">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Make sure every attribute that links to a parameter is configured correctly and links to an existing parameter id. ]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidAttribute</Name>
								<GroupDescription />
								<Description templateId="4100">
									<InputParameters>
										<InputParameter id="0" value="ExportRule@table">attributeName</InputParameter>
										<InputParameter id="1">tableValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Make sure every attribute that links to a parameter is configured correctly and links to an existing parameter id. ]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2100">
									<InputParameters>
										<InputParameter id="0" value="ExportRule@table">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Make sure every attribute that links to a parameter is configured correctly and links to an existing parameter id. ]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="2">
						<Name namespace="Protocol.ExportRules.ExportRule">CheckWhereValueAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1100">
									<InputParameters>
										<InputParameter id="0" value="ExportRule@whereValue">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[As soon as whereTag or whereAttribute is being used, the whereValue is needed.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="3">
						<Name namespace="Protocol.ExportRules.ExportRule">CheckWhereAttributeAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2100">
									<InputParameters>
										<InputParameter id="0" value="ExportRule@whereAttribute">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3100">
									<InputParameters>
										<InputParameter id="0" value="ExportRule@whereAttribute">attributeName</InputParameter>
										<InputParameter id="1">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="4">
						<Name namespace="Protocol.ExportRules.ExportRule">CheckWhereTagAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1100">
									<InputParameters>
										<InputParameter id="0" value="ExportRule@whereTag">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[As soon as whereValue or whereAttribute is being used, the whereTag is needed.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2100">
									<InputParameters>
										<InputParameter id="0" value="ExportRule@whereTag">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3100">
									<InputParameters>
										<InputParameter id="0" value="ExportRule@whereTag">attributeName</InputParameter>
										<InputParameter id="1">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Warning</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
				</Checks>
			</Category>
			<Category id="18">
				<Name>TreeControl</Name>
				<Checks>
					<Check id="1">
						<Name namespace="Protocol.TreeControls.TreeControl">CheckParameterIdAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1100">
									<InputParameters>
										<InputParameter id="0" value="TreeControl@parameterId">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[TreeControl@parameterId attribute should contain the PID of a parameter which will be used to define where to display the TreeControl.[NewLine]Such TreeControl parameter is expected to have:[NewLine]- 'Param\Type' tag set to 'dummy' (or alternatively 'read' but 'dummy' is preferred).[NewLine]- 'Param\Display\RTDisplay' tag set to 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2100">
									<InputParameters>
										<InputParameter id="0" value="TreeControl@parameterId">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[TreeControl@parameterId attribute should contain the PID of a parameter which will be used to define where to display the TreeControl.[NewLine]Such TreeControl parameter is expected to have:[NewLine]- 'Param\Type' tag set to 'dummy' (or alternatively 'read' but 'dummy' is preferred).[NewLine]- 'Param\Display\RTDisplay' tag set to 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3100">
									<InputParameters>
										<InputParameter id="0" value="TreeControl@parameterId">attributeName</InputParameter>
										<InputParameter id="1">currentValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[TreeControl@parameterId attribute should contain the PID of a parameter which will be used to define where to display the TreeControl.[NewLine]Such TreeControl parameter is expected to have:[NewLine]- 'Param\Type' tag set to 'dummy' (or alternatively 'read' but 'dummy' is preferred).[NewLine]- 'Param\Display\RTDisplay' tag set to 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4100">
									<InputParameters>
										<InputParameter id="0" value="TreeControl@parameterId">attributeName</InputParameter>
										<InputParameter id="1">invalidValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[TreeControl@parameterId attribute should contain the PID of a parameter which will be used to define where to display the TreeControl.[NewLine]Such TreeControl parameter is expected to have:[NewLine]- 'Param\Type' tag set to 'dummy' (or alternatively 'read' but 'dummy' is preferred).[NewLine]- 'Param\Display\RTDisplay' tag set to 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7100">
									<InputParameters>
										<InputParameter id="0" value="TreeControl">tagName</InputParameter>
										<InputParameter id="1" value="parameterId">attributeName</InputParameter>
										<InputParameter id="2" value="Param">referenceKind</InputParameter>
										<InputParameter id="3" value="ID">idOrPidForReference</InputParameter>
										<InputParameter id="4">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[TreeControl@parameterId attribute should contain the PID of a parameter which will be used to define where to display the TreeControl.[NewLine]Such TreeControl parameter is expected to have:[NewLine]- 'Param\Type' tag set to 'dummy' (or alternatively 'read' but 'dummy' is preferred).[NewLine]- 'Param\Display\RTDisplay' tag set to 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>ReferencedParamWrongType</Name>
								<GroupDescription />
								<Description>
									<Format>Invalid TreeControl Param Type '{0}'. Expected Type 'dummy'. Param ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">paramType</InputParameter>
										<InputParameter id="1">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[TreeControl@parameterId attribute should contain the PID of a parameter which will be used to define where to display the TreeControl.[NewLine]Such TreeControl parameter is expected to have:[NewLine]- 'Param\Type' tag set to 'dummy' (or alternatively 'read' but 'dummy' is preferred).[NewLine]- 'Param\Display\RTDisplay' tag set to 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>ReferencedParamExpectingRTDisplay</Name>
								<GroupDescription />
								<Description>
									<Format>RTDisplay(true) expected on TreeControl Param. Param ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[TreeControl@parameterId attribute should contain the PID of a parameter which will be used to define where to display the TreeControl.[NewLine]Such TreeControl parameter is expected to have:[NewLine]- 'Param\Type' tag set to 'dummy' (or alternatively 'read' but 'dummy' is preferred).[NewLine]- 'Param\Display\RTDisplay' tag set to 'true'.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="2">
						<Name namespace="Protocol.TreeControls.TreeControl.Hierarchy">CheckPathAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="Hierarchy@path">attributeName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Hierarchy@path attribute should contain a comma separated list of table PIDs.[NewLine]Those tables will define the different levels of the TreeControl.[NewLine][NewLine]Note that this can also be achieved with more flexibility via the Hierarchy/Table tags.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3101">
									<InputParameters>
										<InputParameter id="0" value="Hierarchy@path">attributeName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2" value="">treeControlPid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Hierarchy@path attribute should contain a comma separated list of table PIDs.[NewLine]Those tables will define the different levels of the TreeControl.[NewLine][NewLine]Note that this can also be achieved with more flexibility via the Hierarchy/Table tags.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4101">
									<InputParameters>
										<InputParameter id="0" value="Hierarchy@path">attributeName</InputParameter>
										<InputParameter id="1">pathValue</InputParameter>
										<InputParameter id="2" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="3">treeControlPid</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Hierarchy@path attribute should contain a comma separated list of table PIDs.[NewLine]Those tables will define the different levels of the TreeControl.[NewLine][NewLine]Note that this can also be achieved with more flexibility via the Hierarchy/Table tags.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>NonExistingIdsInAttribute</Name>
								<GroupDescription />
								<Description templateId="8101">
									<InputParameters>
										<InputParameter id="0" value="Hierarchy@path">attributeName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
										<InputParameter id="3" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Hierarchy@path attribute should contain a comma separated list of table PIDs.[NewLine]Those tables will define the different levels of the TreeControl.[NewLine][NewLine]Note that this can also be achieved with more flexibility via the Hierarchy/Table tags.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>NonExistingIdsInAttribute_Sub</Name>
								<GroupDescription />
								<Description templateId="7101">
									<InputParameters>
										<InputParameter id="0" value="Hierarchy@path">attributeName</InputParameter>
										<InputParameter id="1" value="Table">referenceKind</InputParameter>
										<InputParameter id="2" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="3">paramId</InputParameter>
										<InputParameter id="4" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">treeControlPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Hierarchy@path attribute should contain a comma separated list of table PIDs.[NewLine]Those tables will define the different levels of the TreeControl.[NewLine][NewLine]Note that this can also be achieved with more flexibility via the Hierarchy/Table tags.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>DuplicateId</Name>
								<GroupDescription />
								<Description templateId="5101">
									<InputParameters>
										<InputParameter id="0">duplicateId</InputParameter>
										<InputParameter id="1" value="Hierarchy@path">attributeName</InputParameter>
										<InputParameter id="2" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="3" value="ID">idOrPid</InputParameter>
										<InputParameter id="4">treeControlId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Hierarchy@path attribute should contain a comma separated list of table PIDs.[NewLine]Those tables will define the different levels of the TreeControl.[NewLine][NewLine]Note that this can also be achieved with more flexibility via the Hierarchy/Table tags.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>UntrimmedValueInAttribute_Sub</Name>
								<GroupDescription />
								<Description templateId="3600">
									<InputParameters>
										<InputParameter id="0">untrimmedValue</InputParameter>
										<InputParameter id="1" value="Hierarchy@path">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Hierarchy@path attribute should contain a comma separated list of table PIDs.[NewLine]Those tables will define the different levels of the TreeControl.[NewLine][NewLine]Note that this can also be achieved with more flexibility via the Hierarchy/Table tags.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="8">
								<Name>InvalidValueInAttribute_Sub</Name>
								<GroupDescription />
								<Description templateId="4100">
									<InputParameters>
										<InputParameter id="0" value="Hierarchy@path">attributeName</InputParameter>
										<InputParameter id="1">invalidPart</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Hierarchy@path attribute should contain a comma separated list of table PIDs.[NewLine]Those tables will define the different levels of the TreeControl.[NewLine][NewLine]Note that this can also be achieved with more flexibility via the Hierarchy/Table tags.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="9">
								<Name>ReferencedParamExpectingRTDisplay</Name>
								<GroupDescription />
								<Description>
									<Format>RTDisplay(true) expected on table displayed in TreeControl Hierarchy. Table PID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Hierarchy@path attribute should contain a comma separated list of table PIDs.[NewLine]Those tables will define the different levels of the TreeControl.[NewLine][NewLine]Note that this can also be achieved with more flexibility via the Hierarchy/Table tags.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="3">
						<Name namespace="Protocol.TreeControls.TreeControl.Hierarchy.Table">CheckIdAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1101">
									<InputParameters>
										<InputParameter id="0" value="Table@id">attributeName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2" value="">treeControlPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Hierarchy/Table@id attribute should contain a table PID allowing to define which table contains entries for a specific level of the TreeControl.[NewLine]Such table is expected to have RTDisplay tag set to 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="Table@id">attributeName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Hierarchy/Table@id attribute should contain a table PID allowing to define which table contains entries for a specific level of the TreeControl.[NewLine]Such table is expected to have RTDisplay tag set to 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3101">
									<InputParameters>
										<InputParameter id="0" value="Table@id">attributeName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Hierarchy/Table@id attribute should contain a table PID allowing to define which table contains entries for a specific level of the TreeControl.[NewLine]Such table is expected to have RTDisplay tag set to 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4101">
									<InputParameters>
										<InputParameter id="0" value="Table@id">attributeName</InputParameter>
										<InputParameter id="1">tableId</InputParameter>
										<InputParameter id="2" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="3">treeControlPid</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Hierarchy/Table@id attribute should contain a table PID allowing to define which table contains entries for a specific level of the TreeControl.[NewLine]Such table is expected to have RTDisplay tag set to 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7100">
									<InputParameters>
										<InputParameter id="0" value="Hierarchy/Table">tagName</InputParameter>
										<InputParameter id="1" value="id">attributeName</InputParameter>
										<InputParameter id="2" value="Table">referenceKind</InputParameter>
										<InputParameter id="3" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="4">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Hierarchy/Table@id attribute should contain a table PID allowing to define which table contains entries for a specific level of the TreeControl.[NewLine]Such table is expected to have RTDisplay tag set to 'true'.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>ReferencedParamExpectingRTDisplay</Name>
								<GroupDescription />
								<Description>
									<Format>RTDisplay(true) expected on table displayed in TreeControl Hierarchy. Table PID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Hierarchy/Table@id attribute should contain a table PID allowing to define which table contains entries for a specific level of the TreeControl.[NewLine]Such table is expected to have RTDisplay tag set to 'true'.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="4">
						<Name namespace="Protocol.TreeControls.TreeControl.Hierarchy.Table">CheckParentAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1101">
									<InputParameters>
										<InputParameter id="0" value="Table@parent">attributeName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Hierarchy/Table@parent attribute should contain a table PID. This allows to define which table is on the above level.[NewLine]Note this does not make sense on the first Hierarchy/Table tag but is mandatory on all other ones.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>ExcessiveAttribute</Name>
								<GroupDescription />
								<Description templateId="10101">
									<InputParameters>
										<InputParameter id="0" value="Table@parent">attributeName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Hierarchy/Table@parent attribute should contain a table PID. This allows to define which table is on the above level.[NewLine]Note this does not make sense on the first Hierarchy/Table tag but is mandatory on all other ones.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="Table@parent">attributeName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Hierarchy/Table@parent attribute should contain a table PID. This allows to define which table is on the above level.[NewLine]Note this does not make sense on the first Hierarchy/Table tag but is mandatory on all other ones.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3101">
									<InputParameters>
										<InputParameter id="0" value="Table@parent">attributeName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Hierarchy/Table@parent attribute should contain a table PID. This allows to define which table is on the above level.[NewLine]Note this does not make sense on the first Hierarchy/Table tag but is mandatory on all other ones.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4101">
									<InputParameters>
										<InputParameter id="0" value="Table@parent">attributeName</InputParameter>
										<InputParameter id="1">attributeValue</InputParameter>
										<InputParameter id="2" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="3">treeControlPid</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Hierarchy/Table@parent attribute should contain a table PID. This allows to define which table is on the above level.[NewLine]Note this does not make sense on the first Hierarchy/Table tag but is mandatory on all other ones.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7100">
									<InputParameters>
										<InputParameter id="0" value="Hierarchy/Table">tagName</InputParameter>
										<InputParameter id="1" value="parent">attributeName</InputParameter>
										<InputParameter id="2" value="Table">referenceKind</InputParameter>
										<InputParameter id="3" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="4">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The Hierarchy/Table@parent attribute should contain a table PID. This allows to define which table is on the above level.[NewLine]Note this does not make sense on the first Hierarchy/Table tag but is mandatory on all other ones.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="5">
						<Name namespace="Protocol.TreeControls.TreeControl.Hierarchy.Table">CheckConditionAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="Table@condition">attributeName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Hierarchy/Table@condition attribute should have one of the following format:[NewLine]- {conditionColumnPid}:{conditionValue}[NewLine]- {conditionColumnPid}:{conditionValue};filter:fk={fkColumnPid}[NewLine]where:[NewLine]- {conditionColumnPid} refers to a column which should have its RTDisplay set to true.[NewLine]- {conditionValue} allows to specify the value to be present in column referred by {conditionColumnPid} for the condition to match.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>UntrimmedColumnPid</Name>
								<GroupDescription />
								<Description>
									<Format>Untrimmed value '{0}' in attribute 'Table@condition' in TreeControl '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">untrimmedColumnPid</InputParameter>
										<InputParameter id="1">treeControlId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Hierarchy/Table@condition attribute should have one of the following format:[NewLine]- {conditionColumnPid}:{conditionValue}[NewLine]- {conditionColumnPid}:{conditionValue};filter:fk={fkColumnPid}[NewLine]where:[NewLine]- {conditionColumnPid} refers to a column which should have its RTDisplay set to true.[NewLine]- {conditionValue} allows to specify the value to be present in column referred by {conditionColumnPid} for the condition to match.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4101">
									<InputParameters>
										<InputParameter id="0" value="Table@condition">attributeName</InputParameter>
										<InputParameter id="1" value="">attributeValue</InputParameter>
										<InputParameter id="2" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="3">treeControlPid</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Hierarchy/Table@condition attribute should have one of the following format:[NewLine]- {conditionColumnPid}:{conditionValue}[NewLine]- {conditionColumnPid}:{conditionValue};filter:fk={fkColumnPid}[NewLine]where:[NewLine]- {conditionColumnPid} refers to a column which should have its RTDisplay set to true.[NewLine]- {conditionValue} allows to specify the value to be present in column referred by {conditionColumnPid} for the condition to match.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7100">
									<InputParameters>
										<InputParameter id="0" value="Hierarchy/Table">tagName</InputParameter>
										<InputParameter id="1" value="condition">attributeName</InputParameter>
										<InputParameter id="2" value="Column">referenceKind</InputParameter>
										<InputParameter id="3" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="4">columnPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Hierarchy/Table@condition attribute should have one of the following format:[NewLine]- {conditionColumnPid}:{conditionValue}[NewLine]- {conditionColumnPid}:{conditionValue};filter:fk={fkColumnPid}[NewLine]where:[NewLine]- {conditionColumnPid} refers to a column which should have its RTDisplay set to true.[NewLine]- {conditionValue} allows to specify the value to be present in column referred by {conditionColumnPid} for the condition to match.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>InvalidValueInAttribute_Sub</Name>
								<GroupDescription />
								<Description templateId="4300">
									<InputParameters>
										<InputParameter id="0">optionName</InputParameter>
										<InputParameter id="1" value="Table@condition">attributeName</InputParameter>
										<InputParameter id="2" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="3" value="ID">idOrPid</InputParameter>
										<InputParameter id="4">treeControlId</InputParameter>
										<InputParameter id="5">optionValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Hierarchy/Table@condition attribute should have one of the following format:[NewLine]- {conditionColumnPid}:{conditionValue}[NewLine]- {conditionColumnPid}:{conditionValue};filter:fk={fkColumnPid}[NewLine]where:[NewLine]- {conditionColumnPid} refers to a column which should have its RTDisplay set to true.[NewLine]- {conditionValue} allows to specify the value to be present in column referred by {conditionColumnPid} for the condition to match.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>MissingValueInAttribute_Sub</Name>
								<GroupDescription />
								<Description templateId="1201">
									<InputParameters>
										<InputParameter id="0">valueName</InputParameter>
										<InputParameter id="1" value="Table@condition">attributeName</InputParameter>
										<InputParameter id="2" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="3" value="ID">idOrPid</InputParameter>
										<InputParameter id="4">treeControlId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Hierarchy/Table@condition attribute should have one of the following format:[NewLine]- {conditionColumnPid}:{conditionValue}[NewLine]- {conditionColumnPid}:{conditionValue};filter:fk={fkColumnPid}[NewLine]where:[NewLine]- {conditionColumnPid} refers to a column which should have its RTDisplay set to true.[NewLine]- {conditionValue} allows to specify the value to be present in column referred by {conditionColumnPid} for the condition to match.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>ReferencedColumnExpectingRTDisplay</Name>
								<GroupDescription />
								<Description>
									<Format>RTDisplay(true) expected on Param '{0}' referred as condition column in 'Hierarchy/Table@condition' attribute. TreeControl PID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">columnPid</InputParameter>
										<InputParameter id="1">treeControlPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Hierarchy/Table@condition attribute should have one of the following format:[NewLine]- {conditionColumnPid}:{conditionValue}[NewLine]- {conditionColumnPid}:{conditionValue};filter:fk={fkColumnPid}[NewLine]where:[NewLine]- {conditionColumnPid} refers to a column which should have its RTDisplay set to true.[NewLine]- {conditionValue} allows to specify the value to be present in column referred by {conditionColumnPid} for the condition to match.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="6">
						<Name namespace="Protocol.TreeControls.TreeControl.ExtraDetails.LinkedDetails">CheckDetailsTableIdAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1101">
									<InputParameters>
										<InputParameter id="0" value="LinkedDetails@detailsTableId">attributeName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[LinkedDetails@detailsTableId attribute should contain one of the following:[NewLine]- tablePid: Extra info from that table will then be added to the TreeControl.[NewLine]- fkColumnPid: Extra info from the table to which the FK Column belongs will then be added to the TreeControl.[NewLine][NewLine]In both cases, the table containing extra details should have its RTDisplay tag set to true.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="LinkedDetails@detailsTableId">attributeName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[LinkedDetails@detailsTableId attribute should contain one of the following:[NewLine]- tablePid: Extra info from that table will then be added to the TreeControl.[NewLine]- fkColumnPid: Extra info from the table to which the FK Column belongs will then be added to the TreeControl.[NewLine][NewLine]In both cases, the table containing extra details should have its RTDisplay tag set to true.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3101">
									<InputParameters>
										<InputParameter id="0" value="LinkedDetails@detailsTableId">attributeName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[LinkedDetails@detailsTableId attribute should contain one of the following:[NewLine]- tablePid: Extra info from that table will then be added to the TreeControl.[NewLine]- fkColumnPid: Extra info from the table to which the FK Column belongs will then be added to the TreeControl.[NewLine][NewLine]In both cases, the table containing extra details should have its RTDisplay tag set to true.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4101">
									<InputParameters>
										<InputParameter id="0" value="LinkedDetails@detailsTableId">attributeName</InputParameter>
										<InputParameter id="1">attributeValue</InputParameter>
										<InputParameter id="2" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="3">treeControlPid</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[LinkedDetails@detailsTableId attribute should contain one of the following:[NewLine]- tablePid: Extra info from that table will then be added to the TreeControl.[NewLine]- fkColumnPid: Extra info from the table to which the FK Column belongs will then be added to the TreeControl.[NewLine][NewLine]In both cases, the table containing extra details should have its RTDisplay tag set to true.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7100">
									<InputParameters>
										<InputParameter id="0" value="ExtraDetails/LinkedDetails">tagName</InputParameter>
										<InputParameter id="1" value="detailsTableId">attributeName</InputParameter>
										<InputParameter id="2" value="Table">referenceKind</InputParameter>
										<InputParameter id="3" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="4">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[LinkedDetails@detailsTableId attribute should contain one of the following:[NewLine]- tablePid: Extra info from that table will then be added to the TreeControl.[NewLine]- fkColumnPid: Extra info from the table to which the FK Column belongs will then be added to the TreeControl.[NewLine][NewLine]In both cases, the table containing extra details should have its RTDisplay tag set to true.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>ReferencedTableExpectingRTDisplay</Name>
								<GroupDescription />
								<Description>
									<Format>RTDisplay(true) expected on TreeControl/ExtraDetails table. Table PID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[LinkedDetails@detailsTableId attribute should contain one of the following:[NewLine]- tablePid: Extra info from that table will then be added to the TreeControl.[NewLine]- fkColumnPid: Extra info from the table to which the FK Column belongs will then be added to the TreeControl.[NewLine][NewLine]In both cases, the table containing extra details should have its RTDisplay tag set to true.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="7">
						<Name namespace="Protocol.TreeControls.TreeControl.ExtraDetails.LinkedDetails">CheckDiscreetColumnIdAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1101">
									<InputParameters>
										<InputParameter id="0" value="LinkedDetails@discreetColumnId">attributeName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[LinkedDetails@discreetColumnId attribute should contain a column PID. The value contained in that column will then be compared to the value specified in LinkedDetails@value attribute.[NewLine]Such column should have its RTDisplay tag set to true.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="LinkedDetails@discreetColumnId">attributeName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[LinkedDetails@discreetColumnId attribute should contain a column PID. The value contained in that column will then be compared to the value specified in LinkedDetails@value attribute.[NewLine]Such column should have its RTDisplay tag set to true.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3101">
									<InputParameters>
										<InputParameter id="0" value="LinkedDetails@discreetColumnId">attributeName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[LinkedDetails@discreetColumnId attribute should contain a column PID. The value contained in that column will then be compared to the value specified in LinkedDetails@value attribute.[NewLine]Such column should have its RTDisplay tag set to true.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4101">
									<InputParameters>
										<InputParameter id="0" value="LinkedDetails@discreetColumnId">attributeName</InputParameter>
										<InputParameter id="1">attributeValue</InputParameter>
										<InputParameter id="2" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="3">treeControlPid</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[LinkedDetails@discreetColumnId attribute should contain a column PID. The value contained in that column will then be compared to the value specified in LinkedDetails@value attribute.[NewLine]Such column should have its RTDisplay tag set to true.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7100">
									<InputParameters>
										<InputParameter id="0" value="ExtraDetails/LinkedDetails">tagName</InputParameter>
										<InputParameter id="1" value="discreetColumnId">attributeName</InputParameter>
										<InputParameter id="2" value="Column">referenceKind</InputParameter>
										<InputParameter id="3" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="4">columnPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[LinkedDetails@discreetColumnId attribute should contain a column PID. The value contained in that column will then be compared to the value specified in LinkedDetails@value attribute.[NewLine]Such column should have its RTDisplay tag set to true.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>ReferencedColumnExpectingRTDisplay</Name>
								<GroupDescription />
								<Description>
									<Format>RTDisplay(true) expected on column referenced by TreeControl 'LinkedDetails@discreetColumnId' attribute. Column PID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">columnPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[LinkedDetails@discreetColumnId attribute should contain a column PID. The value contained in that column will then be compared to the value specified in LinkedDetails@value attribute.[NewLine]Such column should have its RTDisplay tag set to true.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="8">
						<Name namespace="Protocol.TreeControls.TreeControl.ExtraTab.Tab">CheckParameterAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1101">
									<InputParameters>
										<InputParameter id="0" value="Tab@parameter">attributeName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Tab@parameter' attribute has different meaning depending on the 'Tab@type' attribute value.[NewLine]    - parameters: a comma-separated list of PIDs is expeted. Those should refer to columns of the main table for this TreeControl level or params added to its main section via ExtraDetail tags.[NewLine]    - relation: The PID of a column containing a foreignKey to the main table for this TreeControl level.[NewLine]    - summary: The PID of a table is a 'grand-chidren' of the main table for this TreeControl level.[NewLine]    - default: No 'Tab@parameter' attribute expected in this case.[NewLine]    - chart: No 'Tab@parameter' attribute expected in this case.[NewLine]    - web: No 'Tab@parameter' attribute expected in this case.[NewLine][NewLine]Note that in any case, parameters referenced are expected to have the RTDisplay tag set to true.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="Tab@parameter">attributeName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Tab@parameter' attribute has different meaning depending on the 'Tab@type' attribute value.[NewLine]    - parameters: a comma-separated list of PIDs is expeted. Those should refer to columns of the main table for this TreeControl level or params added to its main section via ExtraDetail tags.[NewLine]    - relation: The PID of a column containing a foreignKey to the main table for this TreeControl level.[NewLine]    - summary: The PID of a table is a 'grand-chidren' of the main table for this TreeControl level.[NewLine]    - default: No 'Tab@parameter' attribute expected in this case.[NewLine]    - chart: No 'Tab@parameter' attribute expected in this case.[NewLine]    - web: No 'Tab@parameter' attribute expected in this case.[NewLine][NewLine]Note that in any case, parameters referenced are expected to have the RTDisplay tag set to true.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3101">
									<InputParameters>
										<InputParameter id="0" value="Tab@parameter">attributeName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Tab@parameter' attribute has different meaning depending on the 'Tab@type' attribute value.[NewLine]    - parameters: a comma-separated list of PIDs is expeted. Those should refer to columns of the main table for this TreeControl level or params added to its main section via ExtraDetail tags.[NewLine]    - relation: The PID of a column containing a foreignKey to the main table for this TreeControl level.[NewLine]    - summary: The PID of a table is a 'grand-chidren' of the main table for this TreeControl level.[NewLine]    - default: No 'Tab@parameter' attribute expected in this case.[NewLine]    - chart: No 'Tab@parameter' attribute expected in this case.[NewLine]    - web: No 'Tab@parameter' attribute expected in this case.[NewLine][NewLine]Note that in any case, parameters referenced are expected to have the RTDisplay tag set to true.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4101">
									<InputParameters>
										<InputParameter id="0" value="Tab@parameter">attributeName</InputParameter>
										<InputParameter id="1">attributeValue</InputParameter>
										<InputParameter id="2" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="3">treeControlPid</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Tab@parameter' attribute has different meaning depending on the 'Tab@type' attribute value.[NewLine]    - parameters: a comma-separated list of PIDs is expeted. Those should refer to columns of the main table for this TreeControl level or params added to its main section via ExtraDetail tags.[NewLine]    - relation: The PID of a column containing a foreignKey to the main table for this TreeControl level.[NewLine]    - summary: The PID of a table is a 'grand-chidren' of the main table for this TreeControl level.[NewLine]    - default: No 'Tab@parameter' attribute expected in this case.[NewLine]    - chart: No 'Tab@parameter' attribute expected in this case.[NewLine]    - web: No 'Tab@parameter' attribute expected in this case.[NewLine][NewLine]Note that in any case, parameters referenced are expected to have the RTDisplay tag set to true.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7100">
									<InputParameters>
										<InputParameter id="0" value="ExtraTabs/Tab">tagName</InputParameter>
										<InputParameter id="1" value="parameter">attributeName</InputParameter>
										<InputParameter id="2" value="Column">referenceKind</InputParameter>
										<InputParameter id="3" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="4">columnPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Tab@parameter' attribute has different meaning depending on the 'Tab@type' attribute value.[NewLine]    - parameters: a comma-separated list of PIDs is expeted. Those should refer to columns of the main table for this TreeControl level or params added to its main section via ExtraDetail tags.[NewLine]    - relation: The PID of a column containing a foreignKey to the main table for this TreeControl level.[NewLine]    - summary: The PID of a table is a 'grand-chidren' of the main table for this TreeControl level.[NewLine]    - default: No 'Tab@parameter' attribute expected in this case.[NewLine]    - chart: No 'Tab@parameter' attribute expected in this case.[NewLine]    - web: No 'Tab@parameter' attribute expected in this case.[NewLine][NewLine]Note that in any case, parameters referenced are expected to have the RTDisplay tag set to true.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>ReferencedParamExpectingRTDisplay</Name>
								<GroupDescription />
								<Description>
									<Format>RTDisplay(true) expected on 'TreeControl/ExtraTabs/Tab@parameters' Param. Param ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">paramId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[The 'Tab@parameter' attribute has different meaning depending on the 'Tab@type' attribute value.[NewLine]    - parameters: a comma-separated list of PIDs is expeted. Those should refer to columns of the main table for this TreeControl level or params added to its main section via ExtraDetail tags.[NewLine]    - relation: The PID of a column containing a foreignKey to the main table for this TreeControl level.[NewLine]    - summary: The PID of a table is a 'grand-chidren' of the main table for this TreeControl level.[NewLine]    - default: No 'Tab@parameter' attribute expected in this case.[NewLine]    - chart: No 'Tab@parameter' attribute expected in this case.[NewLine]    - web: No 'Tab@parameter' attribute expected in this case.[NewLine][NewLine]Note that in any case, parameters referenced are expected to have the RTDisplay tag set to true.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="9">
						<Name namespace="Protocol.TreeControls.TreeControl.ExtraTab.Tab">CheckTableIdAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1101">
									<InputParameters>
										<InputParameter id="0" value="Tab@tableId">attributeName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Tab@tableId attribute should contain a valid table PID.[NewLine]The referred table allows to define the Treecontrol level to which an extra tab should be added and is expected to have the RTDisplay tag set to true.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="Tab@tableId">attributeName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Tab@tableId attribute should contain a valid table PID.[NewLine]The referred table allows to define the Treecontrol level to which an extra tab should be added and is expected to have the RTDisplay tag set to true.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3101">
									<InputParameters>
										<InputParameter id="0" value="Tab@tableId">attributeName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Tab@tableId attribute should contain a valid table PID.[NewLine]The referred table allows to define the Treecontrol level to which an extra tab should be added and is expected to have the RTDisplay tag set to true.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4101">
									<InputParameters>
										<InputParameter id="0" value="Tab@tableId">attributeName</InputParameter>
										<InputParameter id="1">attributeValue</InputParameter>
										<InputParameter id="2" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="3">treeControlPid</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Tab@tableId attribute should contain a valid table PID.[NewLine]The referred table allows to define the Treecontrol level to which an extra tab should be added and is expected to have the RTDisplay tag set to true.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>NonExistingId</Name>
								<GroupDescription />
								<Description templateId="7100">
									<InputParameters>
										<InputParameter id="0" value="ExtraTabs/Tab">tagName</InputParameter>
										<InputParameter id="1" value="tableId">attributeName</InputParameter>
										<InputParameter id="2" value="Table">referenceKind</InputParameter>
										<InputParameter id="3" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="4">tablePid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[Tab@tableId attribute should contain a valid table PID.[NewLine]The referred table allows to define the Treecontrol level to which an extra tab should be added and is expected to have the RTDisplay tag set to true.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="10">
						<Name namespace="Protocol.TreeControls.TreeControl.HiddenColumns">CheckHiddenColumnsTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="HiddenColumns">tagName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/HiddenColumns' tag should contain a comma separated list of column PIDs that should not be visible in the TreeControl.[NewLine]The column PIDs should belong to one of the table displayed in the TreeControl.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>UntrimmedTag</Name>
								<GroupDescription />
								<Description templateId="3001">
									<InputParameters>
										<InputParameter id="0" value="HiddenColumns">tagName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/HiddenColumns' tag should contain a comma separated list of column PIDs that should not be visible in the TreeControl.[NewLine]The column PIDs should belong to one of the table displayed in the TreeControl.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4001">
									<InputParameters>
										<InputParameter id="0">hiddenColumnsValue</InputParameter>
										<InputParameter id="1" value="HiddenColumns">tagName</InputParameter>
										<InputParameter id="2" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="3">treeControlPid</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/HiddenColumns' tag should contain a comma separated list of column PIDs that should not be visible in the TreeControl.[NewLine]The column PIDs should belong to one of the table displayed in the TreeControl.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>NonExistingIds</Name>
								<GroupDescription />
								<Description templateId="8001">
									<InputParameters>
										<InputParameter id="0" value="HiddenColumns">tagName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
										<InputParameter id="3" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/HiddenColumns' tag should contain a comma separated list of column PIDs that should not be visible in the TreeControl.[NewLine]The column PIDs should belong to one of the table displayed in the TreeControl.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>NonExistingIds_Sub</Name>
								<GroupDescription />
								<Description templateId="7001">
									<InputParameters>
										<InputParameter id="0" value="HiddenColumns">tagName</InputParameter>
										<InputParameter id="1" value="Column">referenceKind</InputParameter>
										<InputParameter id="2" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="3">columnPid</InputParameter>
										<InputParameter id="4" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">treeControlPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/HiddenColumns' tag should contain a comma separated list of column PIDs that should not be visible in the TreeControl.[NewLine]The column PIDs should belong to one of the table displayed in the TreeControl.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>DuplicateId</Name>
								<GroupDescription />
								<Description templateId="5001">
									<InputParameters>
										<InputParameter id="0">duplicateId</InputParameter>
										<InputParameter id="1" value="HiddenColumns">tagName</InputParameter>
										<InputParameter id="2" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="3" value="ID">idOrPid</InputParameter>
										<InputParameter id="4">treeControlId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/HiddenColumns' tag should contain a comma separated list of column PIDs that should not be visible in the TreeControl.[NewLine]The column PIDs should belong to one of the table displayed in the TreeControl.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>InvalidValueInTag_Sub</Name>
								<GroupDescription />
								<Description templateId="4000">
									<InputParameters>
										<InputParameter id="0" value="HiddenColumns">tagName</InputParameter>
										<InputParameter id="1">invalidPart</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/HiddenColumns' tag should contain a comma separated list of column PIDs that should not be visible in the TreeControl.[NewLine]The column PIDs should belong to one of the table displayed in the TreeControl.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="8">
								<Name>UntrimmedInTag_Sub</Name>
								<GroupDescription />
								<Description templateId="3500">
									<InputParameters>
										<InputParameter id="0">untrimmedValue</InputParameter>
										<InputParameter id="1" value="HiddenColumns">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/HiddenColumns' tag should contain a comma separated list of column PIDs that should not be visible in the TreeControl.[NewLine]The column PIDs should belong to one of the table displayed in the TreeControl.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="9">
								<Name>IrrelevantColumn</Name>
								<GroupDescription />
								<Description>
									<Format>Irrelevant column with PID '{0}' in 'TreeControl/HiddenColumns'. TreeControl ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">columnPid</InputParameter>
										<InputParameter id="1">treeControlId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/HiddenColumns' tag should contain a comma separated list of column PIDs that should not be visible in the TreeControl.[NewLine]The column PIDs should belong to one of the table displayed in the TreeControl.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="11">
						<Name namespace="Protocol.TreeControls.TreeControl.OverrideDisplayColumns">CheckOverrideDisplayColumnsTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="OverrideDisplayColumns">tagName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/OverrideDisplayColumns' tag should contain a comma separated list of column PIDs that should be used as display name in the TreeControl structure.[NewLine]The column PIDs should belong to one of the tables displayed in the TreeControl Hierarchy and only one column per table should be used.[NewLine]For each column PID, an extra pipeline can optionally be added followed by a column PID to be used for sorting items.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>UntrimmedTag</Name>
								<GroupDescription />
								<Description templateId="3001">
									<InputParameters>
										<InputParameter id="0" value="OverrideDisplayColumns">tagName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/OverrideDisplayColumns' tag should contain a comma separated list of column PIDs that should be used as display name in the TreeControl structure.[NewLine]The column PIDs should belong to one of the tables displayed in the TreeControl Hierarchy and only one column per table should be used.[NewLine]For each column PID, an extra pipeline can optionally be added followed by a column PID to be used for sorting items.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4001">
									<InputParameters>
										<InputParameter id="0">attributeValue</InputParameter>
										<InputParameter id="1" value="OverrideDisplayColumns">tagName</InputParameter>
										<InputParameter id="2" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="3">treeControlPid</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/OverrideDisplayColumns' tag should contain a comma separated list of column PIDs that should be used as display name in the TreeControl structure.[NewLine]The column PIDs should belong to one of the tables displayed in the TreeControl Hierarchy and only one column per table should be used.[NewLine]For each column PID, an extra pipeline can optionally be added followed by a column PID to be used for sorting items.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>NonExistingIds</Name>
								<GroupDescription />
								<Description templateId="8001">
									<InputParameters>
										<InputParameter id="0" value="OverrideDisplayColumns">tagName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
										<InputParameter id="3" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/OverrideDisplayColumns' tag should contain a comma separated list of column PIDs that should be used as display name in the TreeControl structure.[NewLine]The column PIDs should belong to one of the tables displayed in the TreeControl Hierarchy and only one column per table should be used.[NewLine]For each column PID, an extra pipeline can optionally be added followed by a column PID to be used for sorting items.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>NonExistingIds_Sub</Name>
								<GroupDescription />
								<Description templateId="7001">
									<InputParameters>
										<InputParameter id="0" value="OverrideDisplayColumns">tagName</InputParameter>
										<InputParameter id="1" value="Column">referenceKind</InputParameter>
										<InputParameter id="2" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="3">columnPid</InputParameter>
										<InputParameter id="4" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">treeControlPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/OverrideDisplayColumns' tag should contain a comma separated list of column PIDs that should be used as display name in the TreeControl structure.[NewLine]The column PIDs should belong to one of the tables displayed in the TreeControl Hierarchy and only one column per table should be used.[NewLine]For each column PID, an extra pipeline can optionally be added followed by a column PID to be used for sorting items.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>DuplicateId</Name>
								<GroupDescription />
								<Description templateId="5001">
									<InputParameters>
										<InputParameter id="0">duplicateId</InputParameter>
										<InputParameter id="1" value="OverrideDisplayColumns">tagName</InputParameter>
										<InputParameter id="2" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="3" value="ID">idOrPid</InputParameter>
										<InputParameter id="4">treeControlId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/OverrideDisplayColumns' tag should contain a comma separated list of column PIDs that should be used as display name in the TreeControl structure.[NewLine]The column PIDs should belong to one of the tables displayed in the TreeControl Hierarchy and only one column per table should be used.[NewLine]For each column PID, an extra pipeline can optionally be added followed by a column PID to be used for sorting items.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>DuplicateOverrideDisplayColumn</Name>
								<GroupDescription />
								<Description>
									<Format>Duplicate OverrideDisplayColumns IDs for Table '{0}'. TreeControl ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">tablePid</InputParameter>
										<InputParameter id="1">treeControlPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/OverrideDisplayColumns' tag should contain a comma separated list of column PIDs that should be used as display name in the TreeControl structure.[NewLine]The column PIDs should belong to one of the tables displayed in the TreeControl Hierarchy and only one column per table should be used.[NewLine]For each column PID, an extra pipeline can optionally be added followed by a column PID to be used for sorting items.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="8">
								<Name>UntrimmedValueInTag_Sub</Name>
								<GroupDescription />
								<Description templateId="3500">
									<InputParameters>
										<InputParameter id="0">untrimmedValue</InputParameter>
										<InputParameter id="1" value="OverrideDisplayColumns">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/OverrideDisplayColumns' tag should contain a comma separated list of column PIDs that should be used as display name in the TreeControl structure.[NewLine]The column PIDs should belong to one of the tables displayed in the TreeControl Hierarchy and only one column per table should be used.[NewLine]For each column PID, an extra pipeline can optionally be added followed by a column PID to be used for sorting items.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="9">
								<Name>InvalidValueInTag_Sub</Name>
								<GroupDescription />
								<Description templateId="4000">
									<InputParameters>
										<InputParameter id="0" value="OverrideDisplayColumns">tagName</InputParameter>
										<InputParameter id="1" value="">invalidPart</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/OverrideDisplayColumns' tag should contain a comma separated list of column PIDs that should be used as display name in the TreeControl structure.[NewLine]The column PIDs should belong to one of the tables displayed in the TreeControl Hierarchy and only one column per table should be used.[NewLine]For each column PID, an extra pipeline can optionally be added followed by a column PID to be used for sorting items.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="10">
								<Name>DuplicateOverrideDisplayColumns_Sub</Name>
								<GroupDescription />
								<Description>
									<Format>Duplicate OverrideDisplayColumns ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">duplicateId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/OverrideDisplayColumns' tag should contain a comma separated list of column PIDs that should be used as display name in the TreeControl structure.[NewLine]The column PIDs should belong to one of the tables displayed in the TreeControl Hierarchy and only one column per table should be used.[NewLine]For each column PID, an extra pipeline can optionally be added followed by a column PID to be used for sorting items.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="11">
								<Name>IrrelevantColumn</Name>
								<GroupDescription />
								<Description>
									<Format>Irrelevant column with PID '{0}' in 'TreeControl/OverrideDisplayColumns'. TreeControl ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">columnPid</InputParameter>
										<InputParameter id="1">treeControlId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/OverrideDisplayColumns' tag should contain a comma separated list of column PIDs that should be used as display name in the TreeControl structure.[NewLine]The column PIDs should belong to one of the tables displayed in the TreeControl Hierarchy and only one column per table should be used.[NewLine]For each column PID, an extra pipeline can optionally be added followed by a column PID to be used for sorting items.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="12">
						<Name namespace="Protocol.TreeControls.TreeControl.OverrideIconColumns">CheckOverrideIconColumnsTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="OverrideIconColumns">tagName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/OverrideIconColumns' tag should contain a comma separated list of column PIDs that should be used to define the icons in the TreeControl structure.[NewLine]The column PIDs should belong to one of the tables in the TreeControl Hierarchy and only one column per table should be used.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>UntrimmedTag</Name>
								<GroupDescription />
								<Description templateId="3001">
									<InputParameters>
										<InputParameter id="0" value="OverrideIconColumns">tagName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/OverrideIconColumns' tag should contain a comma separated list of column PIDs that should be used to define the icons in the TreeControl structure.[NewLine]The column PIDs should belong to one of the tables in the TreeControl Hierarchy and only one column per table should be used.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4001">
									<InputParameters>
										<InputParameter id="0">overrideIconColumnsValue</InputParameter>
										<InputParameter id="1" value="OverrideIconColumns">tagName</InputParameter>
										<InputParameter id="2" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="3">treeControlPid</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/OverrideIconColumns' tag should contain a comma separated list of column PIDs that should be used to define the icons in the TreeControl structure.[NewLine]The column PIDs should belong to one of the tables in the TreeControl Hierarchy and only one column per table should be used.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>NonExistingIds</Name>
								<GroupDescription />
								<Description templateId="8001">
									<InputParameters>
										<InputParameter id="0" value="OverrideIconColumns">tagName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
										<InputParameter id="3" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/OverrideIconColumns' tag should contain a comma separated list of column PIDs that should be used to define the icons in the TreeControl structure.[NewLine]The column PIDs should belong to one of the tables in the TreeControl Hierarchy and only one column per table should be used.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>NonExistingIds_Sub</Name>
								<GroupDescription />
								<Description templateId="7001">
									<InputParameters>
										<InputParameter id="0" value="OverrideIconColumns">tagName</InputParameter>
										<InputParameter id="1" value="Column">referenceKind</InputParameter>
										<InputParameter id="2" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="3">columnPid</InputParameter>
										<InputParameter id="4" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">treeControlPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/OverrideIconColumns' tag should contain a comma separated list of column PIDs that should be used to define the icons in the TreeControl structure.[NewLine]The column PIDs should belong to one of the tables in the TreeControl Hierarchy and only one column per table should be used.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>DuplicateId</Name>
								<GroupDescription />
								<Description templateId="5001">
									<InputParameters>
										<InputParameter id="0">duplicateId</InputParameter>
										<InputParameter id="1" value="OverrideIconColumns">tagName</InputParameter>
										<InputParameter id="2" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="3" value="ID">idOrPid</InputParameter>
										<InputParameter id="4">treeControlId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/OverrideIconColumns' tag should contain a comma separated list of column PIDs that should be used to define the icons in the TreeControl structure.[NewLine]The column PIDs should belong to one of the tables in the TreeControl Hierarchy and only one column per table should be used.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>DuplicateOverrideIconColumns</Name>
								<GroupDescription />
								<Description>
									<Format>Duplicate OverrideIconColumns IDs for Table '{0}'. TreeControl ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">tablePid</InputParameter>
										<InputParameter id="1">treeControlPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/OverrideIconColumns' tag should contain a comma separated list of column PIDs that should be used to define the icons in the TreeControl structure.[NewLine]The column PIDs should belong to one of the tables in the TreeControl Hierarchy and only one column per table should be used.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="8">
								<Name>UntrimmedValueInTag_Sub</Name>
								<GroupDescription />
								<Description templateId="3500">
									<InputParameters>
										<InputParameter id="0">untrimmedValue</InputParameter>
										<InputParameter id="1" value="OverrideIconColumns">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/OverrideIconColumns' tag should contain a comma separated list of column PIDs that should be used to define the icons in the TreeControl structure.[NewLine]The column PIDs should belong to one of the tables in the TreeControl Hierarchy and only one column per table should be used.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="9">
								<Name>InvalidValueInTag_Sub</Name>
								<GroupDescription />
								<Description templateId="4000">
									<InputParameters>
										<InputParameter id="0" value="OverrideIconColumns">tagName</InputParameter>
										<InputParameter id="1">invalidPart</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/OverrideIconColumns' tag should contain a comma separated list of column PIDs that should be used to define the icons in the TreeControl structure.[NewLine]The column PIDs should belong to one of the tables in the TreeControl Hierarchy and only one column per table should be used.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="10">
								<Name>DuplicateOverrideIconColumns_Sub</Name>
								<GroupDescription />
								<Description>
									<Format>Duplicate OverrideIconColumns ID '{0}'.</Format>
									<InputParameters>
										<InputParameter id="0">duplicateId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/OverrideIconColumns' tag should contain a comma separated list of column PIDs that should be used to define the icons in the TreeControl structure.[NewLine]The column PIDs should belong to one of the tables in the TreeControl Hierarchy and only one column per table should be used.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="11">
								<Name>IrrelevantColumn</Name>
								<GroupDescription />
								<Description>
									<Format>Irrelevant column with PID '{0}' in 'TreeControl/OverrideIconColumns'. TreeControl ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">columnPid</InputParameter>
										<InputParameter id="1">treeControlId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/OverrideIconColumns' tag should contain a comma separated list of column PIDs that should be used to define the icons in the TreeControl structure.[NewLine]The column PIDs should belong to one of the tables in the TreeControl Hierarchy and only one column per table should be used.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
					<Check id="13">
						<Name namespace="Protocol.TreeControls.TreeControl.ReadonlyColumns">CheckReadonlyColumnsTag</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>EmptyTag</Name>
								<GroupDescription />
								<Description templateId="2001">
									<InputParameters>
										<InputParameter id="0" value="ReadonlyColumns">tagName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/ReadonlyColumns' tag should contain a comma separated list of column PIDs for which the value edition via the TreeControl should be disabled.[NewLine]The column PIDs should belong to one of the tables displayed in the TreeControl.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>UntrimmedTag</Name>
								<GroupDescription />
								<Description templateId="3001">
									<InputParameters>
										<InputParameter id="0" value="ReadonlyColumns">tagName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
										<InputParameter id="3">untrimmedValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/ReadonlyColumns' tag should contain a comma separated list of column PIDs for which the value edition via the TreeControl should be disabled.[NewLine]The column PIDs should belong to one of the tables displayed in the TreeControl.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>InvalidValue</Name>
								<GroupDescription />
								<Description templateId="4001">
									<InputParameters>
										<InputParameter id="0">readonlyColumnsValue</InputParameter>
										<InputParameter id="1" value="ReadonlyColumns">tagName</InputParameter>
										<InputParameter id="2" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="3">treeControlPid</InputParameter>
										<InputParameter id="4" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/ReadonlyColumns' tag should contain a comma separated list of column PIDs for which the value edition via the TreeControl should be disabled.[NewLine]The column PIDs should belong to one of the tables displayed in the TreeControl.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="4">
								<Name>NonExistingIds</Name>
								<GroupDescription />
								<Description templateId="8001">
									<InputParameters>
										<InputParameter id="0" value="ReadonlyColumns">tagName</InputParameter>
										<InputParameter id="1" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="2">treeControlPid</InputParameter>
										<InputParameter id="3" value="ID">idOrPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/ReadonlyColumns' tag should contain a comma separated list of column PIDs for which the value edition via the TreeControl should be disabled.[NewLine]The column PIDs should belong to one of the tables displayed in the TreeControl.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="5">
								<Name>NonExistingIds_Sub</Name>
								<GroupDescription />
								<Description templateId="7001">
									<InputParameters>
										<InputParameter id="0" value="ReadonlyColumns">tagName</InputParameter>
										<InputParameter id="1" value="Column">referenceKind</InputParameter>
										<InputParameter id="2" value="PID">idOrPidForReference</InputParameter>
										<InputParameter id="3">columnPid</InputParameter>
										<InputParameter id="4" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="5" value="ID">idOrPidForItem</InputParameter>
										<InputParameter id="6">treeControlPid</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/ReadonlyColumns' tag should contain a comma separated list of column PIDs for which the value edition via the TreeControl should be disabled.[NewLine]The column PIDs should belong to one of the tables displayed in the TreeControl.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="6">
								<Name>DuplicateId</Name>
								<GroupDescription />
								<Description templateId="5001">
									<InputParameters>
										<InputParameter id="0">duplicateId</InputParameter>
										<InputParameter id="1" value="ReadonlyColumns">tagName</InputParameter>
										<InputParameter id="2" value="TreeControl">itemKind</InputParameter>
										<InputParameter id="3" value="ID">idOrPid</InputParameter>
										<InputParameter id="4">treeControlId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/ReadonlyColumns' tag should contain a comma separated list of column PIDs for which the value edition via the TreeControl should be disabled.[NewLine]The column PIDs should belong to one of the tables displayed in the TreeControl.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="7">
								<Name>UntrimmedValueInTag_Sub</Name>
								<GroupDescription />
								<Description templateId="3500">
									<InputParameters>
										<InputParameter id="0">untrimmedValue</InputParameter>
										<InputParameter id="1" value="ReadonlyColumns">attributeName</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/ReadonlyColumns' tag should contain a comma separated list of column PIDs for which the value edition via the TreeControl should be disabled.[NewLine]The column PIDs should belong to one of the tables displayed in the TreeControl.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="8">
								<Name>InvalidValueInTag_Sub</Name>
								<GroupDescription />
								<Description templateId="4000">
									<InputParameters>
										<InputParameter id="0" value="ReadonlyColumns">tagName</InputParameter>
										<InputParameter id="1">invalidPart</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/ReadonlyColumns' tag should contain a comma separated list of column PIDs for which the value edition via the TreeControl should be disabled.[NewLine]The column PIDs should belong to one of the tables displayed in the TreeControl.]]></Details>
							</ErrorMessage>
							<ErrorMessage id="9">
								<Name>IrrelevantColumn</Name>
								<GroupDescription />
								<Description>
									<Format>Irrelevant column with PID '{0}' in 'TreeControl/ReadonlyColumns'. TreeControl ID '{1}'.</Format>
									<InputParameters>
										<InputParameter id="0">columnPid</InputParameter>
										<InputParameter id="1">treeControlId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Major</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>False</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA['TreeControl/ReadonlyColumns' tag should contain a comma separated list of column PIDs for which the value edition via the TreeControl should be disabled.[NewLine]The column PIDs should belong to one of the tables displayed in the TreeControl.]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
				</Checks>
			</Category>
			<Category id="19">
				<Name>PortSettings</Name>
				<Checks>
					<Check id="1">
						<Name namespace="Protocol.PortSettings">CheckNameAttribute</Name>
						<ErrorMessages>
							<ErrorMessage id="1">
								<Name>MissingAttribute</Name>
								<GroupDescription />
								<Description templateId="1101">
									<InputParameters>
										<InputParameter id="0" value="PortSettings@name">attributeName</InputParameter>
										<InputParameter id="1" value="Connection">itemKind</InputParameter>
										<InputParameter id="2">connectionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[- When having only one connection for a specific type, the name needs to be of following format, where the second option can (optionally) be used to add more info about the goal of the connection (ex: XXX = Traps, XXX = Events, XXX = Alarms, etc):[NewLine]     - "IP Connection" or "IP Connection - XXX": for drivers that support TCP and/or UDP[NewLine]     - "HTTP Connection" or "HTTP Connection - XXX"[NewLine]     - "SSH Connection" or "SSH Connection - XXX"[NewLine]     - "SNMP Connection" or "SNMP Connection - XXX"[NewLine]     - "Serial Connection" or "Serial Connection - XXX": for drivers that only support the physical serial port (driver connection of type serial but not support TCP nor UDP)[NewLine]- When having more than one connection for a specific type, the name need to be of following format where XXX is used to distinguish them (ex: XXX = Redundant, XXX = Redundant 2, XXX = Backup, XXX = Traps, XXX = Events, etc):[NewLine]     - "IP Connection - XXX"[NewLine]     - "HTTP Connection - XXX"[NewLine]     - etc]]></Details>
							</ErrorMessage>
							<ErrorMessage id="2">
								<Name>EmptyAttribute</Name>
								<GroupDescription />
								<Description templateId="2101">
									<InputParameters>
										<InputParameter id="0" value="PortSettings@name">attributeName</InputParameter>
										<InputParameter id="1" value="Connection">itemKind</InputParameter>
										<InputParameter id="2">connectionId</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[- When having only one connection for a specific type, the name needs to be of following format, where the second option can (optionally) be used to add more info about the goal of the connection (ex: XXX = Traps, XXX = Events, XXX = Alarms, etc):[NewLine]     - "IP Connection" or "IP Connection - XXX": for drivers that support TCP and/or UDP[NewLine]     - "HTTP Connection" or "HTTP Connection - XXX"[NewLine]     - "SSH Connection" or "SSH Connection - XXX"[NewLine]     - "SNMP Connection" or "SNMP Connection - XXX"[NewLine]     - "Serial Connection" or "Serial Connection - XXX": for drivers that only support the physical serial port (driver connection of type serial but not support TCP nor UDP)[NewLine]- When having more than one connection for a specific type, the name need to be of following format where XXX is used to distinguish them (ex: XXX = Redundant, XXX = Redundant 2, XXX = Backup, XXX = Traps, XXX = Events, etc):[NewLine]     - "IP Connection - XXX"[NewLine]     - "HTTP Connection - XXX"[NewLine]     - etc]]></Details>
							</ErrorMessage>
							<ErrorMessage id="3">
								<Name>UntrimmedAttribute</Name>
								<GroupDescription />
								<Description templateId="3101">
									<InputParameters>
										<InputParameter id="0" value="PortSettings@name">attributeName</InputParameter>
										<InputParameter id="1" value="Connection">itemKind</InputParameter>
										<InputParameter id="2" value="">connectionId</InputParameter>
										<InputParameter id="3">attributeValue</InputParameter>
									</InputParameters>
								</Description>
								<Severity>Minor</Severity>
								<Certainty>Certain</Certainty>
								<Source>Validator</Source>
								<FixImpact>NonBreaking</FixImpact>
								<HasCodeFix>True</HasCodeFix>
								<HowToFix><![CDATA[]]></HowToFix>
								<ExampleCode><![CDATA[]]></ExampleCode>
								<Details><![CDATA[- When having only one connection for a specific type, the name needs to be of following format, where the second option can (optionally) be used to add more info about the goal of the connection (ex: XXX = Traps, XXX = Events, XXX = Alarms, etc):[NewLine]     - "IP Connection" or "IP Connection - XXX": for drivers that support TCP and/or UDP[NewLine]     - "HTTP Connection" or "HTTP Connection - XXX"[NewLine]     - "SSH Connection" or "SSH Connection - XXX"[NewLine]     - "SNMP Connection" or "SNMP Connection - XXX"[NewLine]     - "Serial Connection" or "Serial Connection - XXX": for drivers that only support the physical serial port (driver connection of type serial but not support TCP nor UDP)[NewLine]- When having more than one connection for a specific type, the name need to be of following format where XXX is used to distinguish them (ex: XXX = Redundant, XXX = Redundant 2, XXX = Backup, XXX = Traps, XXX = Events, etc):[NewLine]     - "IP Connection - XXX"[NewLine]     - "HTTP Connection - XXX"[NewLine]     - etc]]></Details>
							</ErrorMessage>
						</ErrorMessages>
					</Check>
				</Checks>
			</Category>
		</Categories>
	</ValidationChecks>
</Validator>