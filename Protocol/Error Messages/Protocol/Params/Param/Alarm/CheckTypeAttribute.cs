// <auto-generated>This is auto-generated code by Validator Management Tool. Do not modify.</auto-generated>
namespace Skyline.DataMiner.CICD.Validators.Protocol.Tests.Protocol.Params.Param.Alarm.CheckTypeAttribute
{
    using System;
    using System.Collections.Generic;

    using Skyline.DataMiner.CICD.Models.Protocol.Read;
    using Skyline.DataMiner.CICD.Validators.Common.Interfaces;
    using Skyline.DataMiner.CICD.Validators.Common.Model;
    using Skyline.DataMiner.CICD.Validators.Protocol.Common;
    using Skyline.DataMiner.CICD.Validators.Protocol.Interfaces;


    internal static class ErrorCompare
    {
        public static IValidationResult RemovedNormalizationAlarmType(IReadable referenceNode, IReadable positionNode, string alarmType, string paramId)
        {
            return new ValidationResult
            {
                Test = null,
                CheckId = CheckId.CheckTypeAttribute,
                ErrorId = ErrorIds.RemovedNormalizationAlarmType,
                FullId = "2.23.1",
                Category = Category.Param,
                Severity = Severity.Major,
                Certainty = Certainty.Certain,
                Source = Source.MajorChangeChecker,
                FixImpact = FixImpact.Breaking,
                GroupDescription = "",
                Description = String.Format("Normalization with Alarm type '{0}' on Param '{1}' was removed.", alarmType, paramId),
                HowToFix = "",
                HasCodeFix = false,

                PositionNode = positionNode,
                ReferenceNode = referenceNode,
            };
        }

        public static IValidationResult UpdatedNormalizationAlarmType(IReadable referenceNode, IReadable positionNode, string alarmType, string paramId, string newAlarmType)
        {
            return new ValidationResult
            {
                Test = null,
                CheckId = CheckId.CheckTypeAttribute,
                ErrorId = ErrorIds.UpdatedNormalizationAlarmType,
                FullId = "2.23.2",
                Category = Category.Param,
                Severity = Severity.Major,
                Certainty = Certainty.Certain,
                Source = Source.MajorChangeChecker,
                FixImpact = FixImpact.Breaking,
                GroupDescription = "",
                Description = String.Format("Normalization with Alarm type '{0}' on Param '{1}' was changed into '{2}'.", alarmType, paramId, newAlarmType),
                HowToFix = "",
                HasCodeFix = false,

                PositionNode = positionNode,
                ReferenceNode = referenceNode,
            };
        }

        public static IValidationResult AddedNormalizationAlarmType(IReadable referenceNode, IReadable positionNode, string normalizationType, string pid)
        {
            return new ValidationResult
            {
                Test = null,
                CheckId = CheckId.CheckTypeAttribute,
                ErrorId = ErrorIds.AddedNormalizationAlarmType,
                FullId = "2.23.3",
                Category = Category.Param,
                Severity = Severity.Major,
                Certainty = Certainty.Certain,
                Source = Source.MajorChangeChecker,
                FixImpact = FixImpact.Breaking,
                GroupDescription = "",
                Description = String.Format("Normalization with Alarm type '{0}' on Param '{1}' was added.", normalizationType, pid),
                HowToFix = "",
                HasCodeFix = false,

                PositionNode = positionNode,
                ReferenceNode = referenceNode,
            };
        }
    }

    internal static class ErrorIds
    {
        public const uint RemovedNormalizationAlarmType = 1;
        public const uint UpdatedNormalizationAlarmType = 2;
        public const uint AddedNormalizationAlarmType = 3;
    }

    /// <summary>
    /// Contains the identifiers of the checks.
    /// </summary>
    public static class CheckId
    {
        /// <summary>
        /// The check identifier.
        /// </summary>
        public const uint CheckTypeAttribute = 23;
    }
}