// <auto-generated>This is auto-generated code by Validator Management Tool. Do not modify.</auto-generated>
namespace Skyline.DataMiner.CICD.Validators.Protocol.Tests.Protocol.QActions.QAction.CSharpCheckUnrecommendedMethod
{
    using System;
    using System.Collections.Generic;

    using Skyline.DataMiner.CICD.Models.Protocol.Read;
    using Skyline.DataMiner.CICD.Validators.Common.Interfaces;
    using Skyline.DataMiner.CICD.Validators.Common.Model;
    using Skyline.DataMiner.CICD.Validators.Protocol.Common;
    using Skyline.DataMiner.CICD.Validators.Protocol.Interfaces;

    internal static class Error
    {
        public static IValidationResult UnrecommendedThreadAbort(IValidate test, IReadable referenceNode, IReadable positionNode, string qactionId)
        {
            return new ValidationResult
            {
                Test = test,
                CheckId = CheckId.CSharpCheckUnrecommendedMethod,
                ErrorId = ErrorIds.UnrecommendedThreadAbort,
                FullId = "3.15.1",
                Category = Category.QAction,
                Severity = Severity.Minor,
                Certainty = Certainty.Certain,
                Source = Source.Validator,
                FixImpact = FixImpact.NonBreaking,
                GroupDescription = "",
                Description = String.Format("Method '{0}.{1}' is unrecommended. QAction ID '{2}'.", "System.Threading.Thread", "Abort", qactionId),
                HowToFix = "",
                HasCodeFix = false,

                PositionNode = positionNode,
                ReferenceNode = referenceNode,
            };
        }

        public static IValidationResult UnrecommendedSlProtocolGetParameterIndex(IValidate test, IReadable referenceNode, IReadable positionNode, string qactionId)
        {
            return new ValidationResult
            {
                Test = test,
                CheckId = CheckId.CSharpCheckUnrecommendedMethod,
                ErrorId = ErrorIds.UnrecommendedSlProtocolGetParameterIndex,
                FullId = "3.15.2",
                Category = Category.QAction,
                Severity = Severity.Minor,
                Certainty = Certainty.Certain,
                Source = Source.Validator,
                FixImpact = FixImpact.NonBreaking,
                GroupDescription = "",
                Description = String.Format("Method '{0}.{1}' is unrecommended. QAction ID '{2}'.", "SLProtocol", "GetParameterIndex", qactionId),
                HowToFix = "",
                HasCodeFix = false,

                PositionNode = positionNode,
                ReferenceNode = referenceNode,
            };
        }

        public static IValidationResult UnrecommendedSlProtocolSetParameterIndex(IValidate test, IReadable referenceNode, IReadable positionNode, string qactionId)
        {
            return new ValidationResult
            {
                Test = test,
                CheckId = CheckId.CSharpCheckUnrecommendedMethod,
                ErrorId = ErrorIds.UnrecommendedSlProtocolSetParameterIndex,
                FullId = "3.15.3",
                Category = Category.QAction,
                Severity = Severity.Minor,
                Certainty = Certainty.Certain,
                Source = Source.Validator,
                FixImpact = FixImpact.NonBreaking,
                GroupDescription = "",
                Description = String.Format("Method '{0}.{1}' is unrecommended. QAction ID '{2}'.", "SLProtocol", "SetParameterIndex", qactionId),
                HowToFix = "",
                HasCodeFix = false,

                PositionNode = positionNode,
                ReferenceNode = referenceNode,
            };
        }

        public static IValidationResult UnrecommendedSlProtocolSetParametersIndex(IValidate test, IReadable referenceNode, IReadable positionNode, string qactionId)
        {
            return new ValidationResult
            {
                Test = test,
                CheckId = CheckId.CSharpCheckUnrecommendedMethod,
                ErrorId = ErrorIds.UnrecommendedSlProtocolSetParametersIndex,
                FullId = "3.15.4",
                Category = Category.QAction,
                Severity = Severity.Minor,
                Certainty = Certainty.Certain,
                Source = Source.Validator,
                FixImpact = FixImpact.NonBreaking,
                GroupDescription = "",
                Description = String.Format("Method '{0}.{1}' is unrecommended. QAction ID '{2}'.", "SLProtocol", "SetParametersIndex", qactionId),
                HowToFix = "",
                HasCodeFix = false,

                PositionNode = positionNode,
                ReferenceNode = referenceNode,
            };
        }

        public static IValidationResult UnrecommendedNotifyDataMinerNTGetRemoteTrend(IValidate test, IReadable referenceNode, IReadable positionNode, string qactionId)
        {
            return new ValidationResult
            {
                Test = test,
                CheckId = CheckId.CSharpCheckUnrecommendedMethod,
                ErrorId = ErrorIds.UnrecommendedNotifyDataMinerNTGetRemoteTrend,
                FullId = "3.15.5",
                Category = Category.QAction,
                Severity = Severity.Minor,
                Certainty = Certainty.Certain,
                Source = Source.Validator,
                FixImpact = FixImpact.NonBreaking,
                GroupDescription = "",
                Description = String.Format("Method '{0}.{1}' is unrecommended. QAction ID '{2}'.", "SLProtocol", "NotifyDataMiner(216/*NT_GET_REMOTE_TREND*/, ...)", qactionId),
                HowToFix = "",
                HasCodeFix = false,

                PositionNode = positionNode,
                ReferenceNode = referenceNode,
            };
        }

        public static IValidationResult UnrecommendedNotifyDataMinerNTGetRemoteTrendAvg(IValidate test, IReadable referenceNode, IReadable positionNode, string qactionId)
        {
            return new ValidationResult
            {
                Test = test,
                CheckId = CheckId.CSharpCheckUnrecommendedMethod,
                ErrorId = ErrorIds.UnrecommendedNotifyDataMinerNTGetRemoteTrendAvg,
                FullId = "3.15.6",
                Category = Category.QAction,
                Severity = Severity.Minor,
                Certainty = Certainty.Certain,
                Source = Source.Validator,
                FixImpact = FixImpact.NonBreaking,
                GroupDescription = "",
                Description = String.Format("Method '{0}.{1}' is unrecommended. QAction ID '{2}'.", "SLProtocol", "NotifyDataMiner(260/*NT_GET_REMOTE_TREND_AVG*/, ...)", qactionId),
                HowToFix = "",
                HasCodeFix = false,

                PositionNode = positionNode,
                ReferenceNode = referenceNode,
            };
        }

        public static IValidationResult UnrecommendedNotifyProtocolNTDeleteRow(IValidate test, IReadable referenceNode, IReadable positionNode, string qactionId)
        {
            return new ValidationResult
            {
                Test = test,
                CheckId = CheckId.CSharpCheckUnrecommendedMethod,
                ErrorId = ErrorIds.UnrecommendedNotifyProtocolNTDeleteRow,
                FullId = "3.15.7",
                Category = Category.QAction,
                Severity = Severity.Minor,
                Certainty = Certainty.Certain,
                Source = Source.Validator,
                FixImpact = FixImpact.NonBreaking,
                GroupDescription = "",
                Description = String.Format("Method '{0}.{1}' is unrecommended. QAction ID '{2}'.", "SLProtocol", "NotifyProtocol(156/*NT_DELETE_ROW*/, ...)", qactionId),
                HowToFix = "",
                HasCodeFix = false,

                PositionNode = positionNode,
                ReferenceNode = referenceNode,
            };
        }

        public static IValidationResult UnrecommendedNotifyProtocolNTAddRow(IValidate test, IReadable referenceNode, IReadable positionNode, string qactionId)
        {
            return new ValidationResult
            {
                Test = test,
                CheckId = CheckId.CSharpCheckUnrecommendedMethod,
                ErrorId = ErrorIds.UnrecommendedNotifyProtocolNTAddRow,
                FullId = "3.15.8",
                Category = Category.QAction,
                Severity = Severity.Minor,
                Certainty = Certainty.Certain,
                Source = Source.Validator,
                FixImpact = FixImpact.NonBreaking,
                GroupDescription = "",
                Description = String.Format("Method '{0}.{1}' is unrecommended. QAction ID '{2}'.", "SLProtocol", "NotifyProtocol(149/*NT_ADD_ROW*/, ...)", qactionId),
                HowToFix = "",
                HasCodeFix = false,

                PositionNode = positionNode,
                ReferenceNode = referenceNode,
            };
        }

        public static IValidationResult UnrecommendedNotifyProtocolNT_CHECK_TRIGGER(IValidate test, IReadable referenceNode, IReadable positionNode, string qactionId)
        {
            return new ValidationResult
            {
                Test = test,
                CheckId = CheckId.CSharpCheckUnrecommendedMethod,
                ErrorId = ErrorIds.UnrecommendedNotifyProtocolNT_CHECK_TRIGGER,
                FullId = "3.15.9",
                Category = Category.QAction,
                Severity = Severity.Minor,
                Certainty = Certainty.Certain,
                Source = Source.Validator,
                FixImpact = FixImpact.NonBreaking,
                GroupDescription = "",
                Description = String.Format("Method '{0}.{1}' is unrecommended. QAction ID '{2}'.", "SLProtocol", "NotifyProtocol(134/*NT_CHECK_TRIGGER*/, ...)", qactionId),
                HowToFix = "",
                HasCodeFix = false,

                PositionNode = positionNode,
                ReferenceNode = referenceNode,
            };
        }

        public static IValidationResult UnrecommendedNotifyProtocolNT_GET_DATA(IValidate test, IReadable referenceNode, IReadable positionNode, string qactionId)
        {
            return new ValidationResult
            {
                Test = test,
                CheckId = CheckId.CSharpCheckUnrecommendedMethod,
                ErrorId = ErrorIds.UnrecommendedNotifyProtocolNT_GET_DATA,
                FullId = "3.15.10",
                Category = Category.QAction,
                Severity = Severity.Minor,
                Certainty = Certainty.Certain,
                Source = Source.Validator,
                FixImpact = FixImpact.NonBreaking,
                GroupDescription = "",
                Description = String.Format("Method '{0}.{1}' is unrecommended. QAction ID '{2}'.", "SLProtocol", "NotifyProtocol(60/*NT_GET_DATA*/, ...)", qactionId),
                HowToFix = "",
                HasCodeFix = false,

                PositionNode = positionNode,
                ReferenceNode = referenceNode,
            };
        }

        public static IValidationResult UnrecommendedNotifyProtocolNT_GET_KEY_POSITION(IValidate test, IReadable referenceNode, IReadable positionNode, string qactionId)
        {
            return new ValidationResult
            {
                Test = test,
                CheckId = CheckId.CSharpCheckUnrecommendedMethod,
                ErrorId = ErrorIds.UnrecommendedNotifyProtocolNT_GET_KEY_POSITION,
                FullId = "3.15.11",
                Category = Category.QAction,
                Severity = Severity.Minor,
                Certainty = Certainty.Certain,
                Source = Source.Validator,
                FixImpact = FixImpact.NonBreaking,
                GroupDescription = "",
                Description = String.Format("Method '{0}.{1}' is unrecommended. QAction ID '{2}'.", "SLProtocol", "NotifyProtocol(163/*NT_GET_KEY_POSITION*/, ...)", qactionId),
                HowToFix = "",
                HasCodeFix = false,

                PositionNode = positionNode,
                ReferenceNode = referenceNode,
            };
        }

        public static IValidationResult UnrecommendedNotifyProtocolNT_GET_PARAMETER(IValidate test, IReadable referenceNode, IReadable positionNode, string qactionId)
        {
            return new ValidationResult
            {
                Test = test,
                CheckId = CheckId.CSharpCheckUnrecommendedMethod,
                ErrorId = ErrorIds.UnrecommendedNotifyProtocolNT_GET_PARAMETER,
                FullId = "3.15.12",
                Category = Category.QAction,
                Severity = Severity.Minor,
                Certainty = Certainty.Certain,
                Source = Source.Validator,
                FixImpact = FixImpact.NonBreaking,
                GroupDescription = "",
                Description = String.Format("Method '{0}.{1}' is unrecommended. QAction ID '{2}'.", "SLProtocol", "NotifyProtocol(73/*NT_GET_PARAMETER*/, ...)", qactionId),
                HowToFix = "",
                HasCodeFix = false,

                PositionNode = positionNode,
                ReferenceNode = referenceNode,
            };
        }

        public static IValidationResult UnrecommendedNotifyProtocolNT_GET_PARAMETER_BY_DATA(IValidate test, IReadable referenceNode, IReadable positionNode, string qactionId)
        {
            return new ValidationResult
            {
                Test = test,
                CheckId = CheckId.CSharpCheckUnrecommendedMethod,
                ErrorId = ErrorIds.UnrecommendedNotifyProtocolNT_GET_PARAMETER_BY_DATA,
                FullId = "3.15.13",
                Category = Category.QAction,
                Severity = Severity.Minor,
                Certainty = Certainty.Certain,
                Source = Source.Validator,
                FixImpact = FixImpact.NonBreaking,
                GroupDescription = "",
                Description = String.Format("Method '{0}.{1}' is unrecommended. QAction ID '{2}'.", "SLProtocol", "NotifyProtocol( 87/*NT_GET_PARAMETER_BY_DATA*/, ...)", qactionId),
                HowToFix = "",
                HasCodeFix = false,

                PositionNode = positionNode,
                ReferenceNode = referenceNode,
            };
        }

        public static IValidationResult UnrecommendedNotifyProtocolNT_GET_PARAMETER_BY_NAME(IValidate test, IReadable referenceNode, IReadable positionNode, string qactionId)
        {
            return new ValidationResult
            {
                Test = test,
                CheckId = CheckId.CSharpCheckUnrecommendedMethod,
                ErrorId = ErrorIds.UnrecommendedNotifyProtocolNT_GET_PARAMETER_BY_NAME,
                FullId = "3.15.14",
                Category = Category.QAction,
                Severity = Severity.Minor,
                Certainty = Certainty.Certain,
                Source = Source.Validator,
                FixImpact = FixImpact.NonBreaking,
                GroupDescription = "",
                Description = String.Format("Method '{0}.{1}' is unrecommended. QAction ID '{2}'.", "SLProtocol", "NotifyProtocol(85/*NT_GET_PARAMETER_BY_NAME*/, ...)", qactionId),
                HowToFix = "",
                HasCodeFix = false,

                PositionNode = positionNode,
                ReferenceNode = referenceNode,
            };
        }

        public static IValidationResult UnrecommendedNotifyProtocolNT_GET_DESCRIPTION(IValidate test, IReadable referenceNode, IReadable positionNode, string qactionId)
        {
            return new ValidationResult
            {
                Test = test,
                CheckId = CheckId.CSharpCheckUnrecommendedMethod,
                ErrorId = ErrorIds.UnrecommendedNotifyProtocolNT_GET_DESCRIPTION,
                FullId = "3.15.15",
                Category = Category.QAction,
                Severity = Severity.Minor,
                Certainty = Certainty.Certain,
                Source = Source.Validator,
                FixImpact = FixImpact.NonBreaking,
                GroupDescription = "",
                Description = String.Format("Method '{0}.{1}' is unrecommended. QAction ID '{2}'.", "SLProtocol", "NotifyProtocol(77/*NT_GET_DESCRIPTION*/, ...)", qactionId),
                HowToFix = "",
                HasCodeFix = false,

                PositionNode = positionNode,
                ReferenceNode = referenceNode,
            };
        }

        public static IValidationResult UnrecommendedNotifyProtocolNT_GET_PARAMETER_INDEX(IValidate test, IReadable referenceNode, IReadable positionNode, string qactionId)
        {
            return new ValidationResult
            {
                Test = test,
                CheckId = CheckId.CSharpCheckUnrecommendedMethod,
                ErrorId = ErrorIds.UnrecommendedNotifyProtocolNT_GET_PARAMETER_INDEX,
                FullId = "3.15.16",
                Category = Category.QAction,
                Severity = Severity.Minor,
                Certainty = Certainty.Certain,
                Source = Source.Validator,
                FixImpact = FixImpact.NonBreaking,
                GroupDescription = "",
                Description = String.Format("Method '{0}.{1}' is unrecommended. QAction ID '{2}'.", "SLProtocol", "NotifyProtocol(122/*NT_GET_PARAMETER_INDEX*/, ...)", qactionId),
                HowToFix = "",
                HasCodeFix = false,

                PositionNode = positionNode,
                ReferenceNode = referenceNode,
            };
        }

        public static IValidationResult UnrecommendedNotifyProtocolNT_GET_ITEM_DATA(IValidate test, IReadable referenceNode, IReadable positionNode, string qactionId)
        {
            return new ValidationResult
            {
                Test = test,
                CheckId = CheckId.CSharpCheckUnrecommendedMethod,
                ErrorId = ErrorIds.UnrecommendedNotifyProtocolNT_GET_ITEM_DATA,
                FullId = "3.15.17",
                Category = Category.QAction,
                Severity = Severity.Minor,
                Certainty = Certainty.Certain,
                Source = Source.Validator,
                FixImpact = FixImpact.NonBreaking,
                GroupDescription = "",
                Description = String.Format("Method '{0}.{1}' is unrecommended. QAction ID '{2}'.", "SLProtocol", "NotifyProtocol(88/*NT_GET_ITEM_DATA*/, ...)", qactionId),
                HowToFix = "",
                HasCodeFix = false,

                PositionNode = positionNode,
                ReferenceNode = referenceNode,
            };
        }

        public static IValidationResult UnrecommendedNotifyProtocolNT_GET_ROW(IValidate test, IReadable referenceNode, IReadable positionNode, string qactionId)
        {
            return new ValidationResult
            {
                Test = test,
                CheckId = CheckId.CSharpCheckUnrecommendedMethod,
                ErrorId = ErrorIds.UnrecommendedNotifyProtocolNT_GET_ROW,
                FullId = "3.15.18",
                Category = Category.QAction,
                Severity = Severity.Minor,
                Certainty = Certainty.Certain,
                Source = Source.Validator,
                FixImpact = FixImpact.NonBreaking,
                GroupDescription = "",
                Description = String.Format("Method '{0}.{1}' is unrecommended. QAction ID '{2}'.", "SLProtocol", "NotifyProtocol(215/*NT_GET_ROW*/, ...)", qactionId),
                HowToFix = "",
                HasCodeFix = false,

                PositionNode = positionNode,
                ReferenceNode = referenceNode,
            };
        }

        public static IValidationResult UnrecommendedNotifyProtocolNT_ARRAY_ROW_COUNT(IValidate test, IReadable referenceNode, IReadable positionNode, string qactionId)
        {
            return new ValidationResult
            {
                Test = test,
                CheckId = CheckId.CSharpCheckUnrecommendedMethod,
                ErrorId = ErrorIds.UnrecommendedNotifyProtocolNT_ARRAY_ROW_COUNT,
                FullId = "3.15.19",
                Category = Category.QAction,
                Severity = Severity.Minor,
                Certainty = Certainty.Certain,
                Source = Source.Validator,
                FixImpact = FixImpact.NonBreaking,
                GroupDescription = "",
                Description = String.Format("Method '{0}.{1}' is unrecommended. QAction ID '{2}'.", "SLProtocol", "NotifyProtocol(195/*NT_ARRAY_ROW_COUNT*/, ...)", qactionId),
                HowToFix = "",
                HasCodeFix = false,

                PositionNode = positionNode,
                ReferenceNode = referenceNode,
            };
        }

        public static IValidationResult UnrecommendedNotifyProtocolNT_NOTIFY_DISPLAY(IValidate test, IReadable referenceNode, IReadable positionNode, string qactionId)
        {
            return new ValidationResult
            {
                Test = test,
                CheckId = CheckId.CSharpCheckUnrecommendedMethod,
                ErrorId = ErrorIds.UnrecommendedNotifyProtocolNT_NOTIFY_DISPLAY,
                FullId = "3.15.20",
                Category = Category.QAction,
                Severity = Severity.Minor,
                Certainty = Certainty.Certain,
                Source = Source.Validator,
                FixImpact = FixImpact.NonBreaking,
                GroupDescription = "",
                Description = String.Format("Method '{0}.{1}' is unrecommended. QAction ID '{2}'.", "SLProtocol", "NotifyProtocol(123/*NT_NOTIFY_DISPLAY*/, ...)", qactionId),
                HowToFix = "",
                HasCodeFix = false,

                PositionNode = positionNode,
                ReferenceNode = referenceNode,
            };
        }

        public static IValidationResult UnrecommendedNotifyProtocolNT_SET_PARAMETER_WITH_HISTORY(IValidate test, IReadable referenceNode, IReadable positionNode, string qactionId)
        {
            return new ValidationResult
            {
                Test = test,
                CheckId = CheckId.CSharpCheckUnrecommendedMethod,
                ErrorId = ErrorIds.UnrecommendedNotifyProtocolNT_SET_PARAMETER_WITH_HISTORY,
                FullId = "3.15.21",
                Category = Category.QAction,
                Severity = Severity.Minor,
                Certainty = Certainty.Certain,
                Source = Source.Validator,
                FixImpact = FixImpact.NonBreaking,
                GroupDescription = "",
                Description = String.Format("Method '{0}.{1}' is unrecommended. QAction ID '{2}'.", "SLProtocol", "NotifyProtocol(256/*NT_SET_PARAMETER_WITH_HISTORY*/, ...)", qactionId),
                HowToFix = "",
                HasCodeFix = false,

                PositionNode = positionNode,
                ReferenceNode = referenceNode,
            };
        }

        public static IValidationResult UnrecommendedNotifyProtocolNT_SET_PARAMETER_BY_DATA(IValidate test, IReadable referenceNode, IReadable positionNode, string qactionId)
        {
            return new ValidationResult
            {
                Test = test,
                CheckId = CheckId.CSharpCheckUnrecommendedMethod,
                ErrorId = ErrorIds.UnrecommendedNotifyProtocolNT_SET_PARAMETER_BY_DATA,
                FullId = "3.15.22",
                Category = Category.QAction,
                Severity = Severity.Minor,
                Certainty = Certainty.Certain,
                Source = Source.Validator,
                FixImpact = FixImpact.NonBreaking,
                GroupDescription = "",
                Description = String.Format("Method '{0}.{1}' is unrecommended. QAction ID '{2}'.", "SLProtocol", "NotifyProtocol(86/*NT_SET_PARAMETER_BY_DATA*/, ...)", qactionId),
                HowToFix = "",
                HasCodeFix = false,

                PositionNode = positionNode,
                ReferenceNode = referenceNode,
            };
        }

        public static IValidationResult UnrecommendedNotifyProtocolNT_SET_PARAMETER_BY_NAME(IValidate test, IReadable referenceNode, IReadable positionNode, string qactionId)
        {
            return new ValidationResult
            {
                Test = test,
                CheckId = CheckId.CSharpCheckUnrecommendedMethod,
                ErrorId = ErrorIds.UnrecommendedNotifyProtocolNT_SET_PARAMETER_BY_NAME,
                FullId = "3.15.23",
                Category = Category.QAction,
                Severity = Severity.Minor,
                Certainty = Certainty.Certain,
                Source = Source.Validator,
                FixImpact = FixImpact.NonBreaking,
                GroupDescription = "",
                Description = String.Format("Method '{0}.{1}' is unrecommended. QAction ID '{2}'.", "SLProtocol", "NotifyProtocol(84/*NT_SET_PARAMETER_BY_NAME*/, ...)", qactionId),
                HowToFix = "",
                HasCodeFix = false,

                PositionNode = positionNode,
                ReferenceNode = referenceNode,
            };
        }

        public static IValidationResult UnrecommendedNotifyProtocolNT_SET_DESCRIPTION(IValidate test, IReadable referenceNode, IReadable positionNode, string qactionId)
        {
            return new ValidationResult
            {
                Test = test,
                CheckId = CheckId.CSharpCheckUnrecommendedMethod,
                ErrorId = ErrorIds.UnrecommendedNotifyProtocolNT_SET_DESCRIPTION,
                FullId = "3.15.24",
                Category = Category.QAction,
                Severity = Severity.Minor,
                Certainty = Certainty.Certain,
                Source = Source.Validator,
                FixImpact = FixImpact.NonBreaking,
                GroupDescription = "",
                Description = String.Format("Method '{0}.{1}' is unrecommended. QAction ID '{2}'.", "SLProtocol", "NotifyProtocol(131/*NT_SET_DESCRIPTION*/, ...)", qactionId),
                HowToFix = "",
                HasCodeFix = false,

                PositionNode = positionNode,
                ReferenceNode = referenceNode,
            };
        }

        public static IValidationResult UnrecommendedNotifyProtocolNT_SET_ITEM_DATA(IValidate test, IReadable referenceNode, IReadable positionNode, string qactionId)
        {
            return new ValidationResult
            {
                Test = test,
                CheckId = CheckId.CSharpCheckUnrecommendedMethod,
                ErrorId = ErrorIds.UnrecommendedNotifyProtocolNT_SET_ITEM_DATA,
                FullId = "3.15.25",
                Category = Category.QAction,
                Severity = Severity.Minor,
                Certainty = Certainty.Certain,
                Source = Source.Validator,
                FixImpact = FixImpact.NonBreaking,
                GroupDescription = "",
                Description = String.Format("Method '{0}.{1}' is unrecommended. QAction ID '{2}'.", "SLProtocol", "NotifyProtocol(89/*NT_SET_ITEM_DATA*/, ...)", qactionId),
                HowToFix = "",
                HasCodeFix = false,

                PositionNode = positionNode,
                ReferenceNode = referenceNode,
            };
        }

        public static IValidationResult UnrecommendedNotifyProtocolNT_SET_ROW(IValidate test, IReadable referenceNode, IReadable positionNode, string qactionId)
        {
            return new ValidationResult
            {
                Test = test,
                CheckId = CheckId.CSharpCheckUnrecommendedMethod,
                ErrorId = ErrorIds.UnrecommendedNotifyProtocolNT_SET_ROW,
                FullId = "3.15.26",
                Category = Category.QAction,
                Severity = Severity.Minor,
                Certainty = Certainty.Certain,
                Source = Source.Validator,
                FixImpact = FixImpact.NonBreaking,
                GroupDescription = "",
                Description = String.Format("Method '{0}.{1}' is unrecommended. QAction ID '{2}'.", "SLProtocol", "NotifyProtocol(225/*NT_SET_ROW*/, ...)", qactionId),
                HowToFix = "",
                HasCodeFix = false,

                PositionNode = positionNode,
                ReferenceNode = referenceNode,
            };
        }
    }

    internal static class ErrorIds
    {
        public const uint UnrecommendedThreadAbort = 1;
        public const uint UnrecommendedSlProtocolGetParameterIndex = 2;
        public const uint UnrecommendedSlProtocolSetParameterIndex = 3;
        public const uint UnrecommendedSlProtocolSetParametersIndex = 4;
        public const uint UnrecommendedNotifyDataMinerNTGetRemoteTrend = 5;
        public const uint UnrecommendedNotifyDataMinerNTGetRemoteTrendAvg = 6;
        public const uint UnrecommendedNotifyProtocolNTDeleteRow = 7;
        public const uint UnrecommendedNotifyProtocolNTAddRow = 8;
        public const uint UnrecommendedNotifyProtocolNT_CHECK_TRIGGER = 9;
        public const uint UnrecommendedNotifyProtocolNT_GET_DATA = 10;
        public const uint UnrecommendedNotifyProtocolNT_GET_KEY_POSITION = 11;
        public const uint UnrecommendedNotifyProtocolNT_GET_PARAMETER = 12;
        public const uint UnrecommendedNotifyProtocolNT_GET_PARAMETER_BY_DATA = 13;
        public const uint UnrecommendedNotifyProtocolNT_GET_PARAMETER_BY_NAME = 14;
        public const uint UnrecommendedNotifyProtocolNT_GET_DESCRIPTION = 15;
        public const uint UnrecommendedNotifyProtocolNT_GET_PARAMETER_INDEX = 16;
        public const uint UnrecommendedNotifyProtocolNT_GET_ITEM_DATA = 17;
        public const uint UnrecommendedNotifyProtocolNT_GET_ROW = 18;
        public const uint UnrecommendedNotifyProtocolNT_ARRAY_ROW_COUNT = 19;
        public const uint UnrecommendedNotifyProtocolNT_NOTIFY_DISPLAY = 20;
        public const uint UnrecommendedNotifyProtocolNT_SET_PARAMETER_WITH_HISTORY = 21;
        public const uint UnrecommendedNotifyProtocolNT_SET_PARAMETER_BY_DATA = 22;
        public const uint UnrecommendedNotifyProtocolNT_SET_PARAMETER_BY_NAME = 23;
        public const uint UnrecommendedNotifyProtocolNT_SET_DESCRIPTION = 24;
        public const uint UnrecommendedNotifyProtocolNT_SET_ITEM_DATA = 25;
        public const uint UnrecommendedNotifyProtocolNT_SET_ROW = 26;
    }

    /// <summary>
    /// Contains the identifiers of the checks.
    /// </summary>
    public static class CheckId
    {
        /// <summary>
        /// The check identifier.
        /// </summary>
        public const uint CSharpCheckUnrecommendedMethod = 15;
    }
}